{"version":3,"sources":["icons/logo.svg","icons/Edit.svg","components/header/Header.js","components/sidebar/Sidebar.js","components/chart/Charts.js","components/table/Tables.js","views/dashboard/Dashboard.js","views/login/Login.js","views/users/Users.js","views/paintings/Paintings.js","views/painters/Painters.js","views/faq/FAQ.js","views/404/404.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","STATUS","gql","_templateObject","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","event","setState","anchorEl","currentTarget","handleClose","setUserApp","setUser","id","aanhef","name","surname","email","admin","window","location","reload","state","open","Boolean","react_default","a","createElement","className","react_apollo_browser_umd","query","pollInterval","_ref","loading","error","data","status","IconButton_default","onClick","AccountCircle_default","Menu_default","onClose","MenuItem_default","Component","Sidebar","List_default","component","NavLink","to","ListItem_default","button","ListItemIcon_default","Dashboard_default","ListItemText_default","primary","SupervisorAccount_default","Chart","LineChart","width","height","margin","top","right","bottom","left","CartesianGrid","stroke","strokeDasharray","XAxis","dataKey","title","YAxis","Tooltip","wrapperStyle","backgroundColor","color","Legend","Line","type","amountwatched","Tables","_this2","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","painter","colomnName","TableBody_default","map","row","renderRow","q","populairpainter","Dashboard_templateObject","bestSold","_templateObject2","populair","_templateObject3","leastSold","_templateObject4","unpopulair","_templateObject5","aantalGebruikers","_templateObject6","amountRented","_templateObject7","Dashboard","Grid_default","container","console","log","Charts","popularPainter","item","xs","_ref2","table_Tables","popularpaintings","principalmaker","_ref3","bestsellingpaintings","amountofpaintings","_ref4","unpopularpaintings","_ref5","leastsellingpaintings","variables","amount","page","_ref6","selectAllUsers","total","_ref7","amountRentedPaintings","theme","createMuiTheme","palette","main","secondary","typography","useNextVariants","overrides","MuiButton","root","LOGIN","Login_templateObject","Login","handleChange","defineProperty","target","value","handleSnackbarClick","snackbar","handleSnackbarClose","reason","handleClickShowPassword","showPassword","password","buttonState","localStorage","getItem","history","push","user","isLoggedIn","elevation","src","logo","alt","styles","TextField_default","label","autoComplete","onChange","inputProps","aria-label","FormControl_default","InputLabel_default","htmlFor","Input_default","endAdornment","InputAdornment_default","position","Visibility_default","VisibilityOff_default","mutation","ignoreResults","onCompleted","setItem","login","token","onError","concat","Button_default","variant","disabled","e","preventDefault","test","toLowerCase","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","ALL_USERS","Users_templateObject","GET_USER_DETAILS","Users_templateObject2","ADD_USER","Users_templateObject3","EDIT_USER","Users_templateObject4","DELETE_USER","Users_templateObject5","themeDeleteButton","React","Users","handleClickOpenEdit","userID","dialogEditUser","addedData","TableRow","restProps","objectWithoutProperties","dx_react_grid_material_ui_es","Row","assign","style","cursor","handleChangePage","handleChangeRowsPerPage","rowsPerPage","checked","handleClickOpen","dialogAddUser","Math","floor","random","toString","emptyState","handleNext","activeStep","next","items","mail","adres","housenumber","postalcode","city","paymentmethod","i","length","err","errMsg","mailError","mailErrorMsg","handleBack","nameError","nameErrorMsg","surnameError","surnameErrorMsg","passwordError","passwordErrorMsg","adresError","adresErrorMsg","housenumberError","housenumberErrorMsg","postalcodeError","postalcodeErrorMsg","cityError","cityErrorMsg","paymentmethodError","paymentmethodErrorMsg","adminError","adminErrorMsg","ID","rows","totalCount","pageSize","currentPage","pageSizes","sorting","columnName","direction","tableColumnExtensions","hiddenColumnNames","changeCurrentPage","bind","assertThisInitialized","changePageSize","changeSorting","hiddenColumnNamesChange","stepIndex","_this3","selectUserById","spacing","sm","RadioGroup_default","FormControlLabel_default","control","Radio_default","fullWidth","FormHelperText_default","Select_default","renderValue","input","FormGroup_default","Switch_default","FormLabel_default","Checkbox_default","padding","_this4","steps","_this$state","totaluser","columns","dx_react_grid_es","onCurrentPageChange","onPageSizeChange","onSortingChange","rowComponent","columnExtensions","showSortingControls","onHiddenColumnNamesChange","Dialog_default","disableBackdropClick","disableEscapeKeyDown","DialogTitle_default","DialogContent_default","Stepper_default","alternativeLabel","Step_default","key","StepLabel_default","handleReset","getStepContent","DialogActions_default","handleSnackbarOpen","addUser","getEditStepContent","deleteUser","vars","alterUser","GET_ART_DETAILS","Paintings_templateObject","PAINTINGS","Paintings_templateObject2","PAINTERS","Paintings_templateObject3","ADD_PAINTING","Paintings_templateObject4","EDIT_PAINTING","Paintings_templateObject5","DELETE_PAINTING","Paintings_templateObject6","Paintings","_this$setState","Date","getFullYear","price","releaseDateError","releaseDateErrorMsg","handleAanmakenDialog","dialogAddPainting","handleAanpassenDialog","paintingID","dialogEditPainting","handleChoosePainterDialog","dialogChoosePainter","TableRowChoosePainter","handleChosenPainter","handleChoosePainterDialogClose","principalMaker","principalMakerID","id_number","titleError","titleErrorMsg","releaseDate","period","periodError","periodErrorMsg","description","descriptionError","descriptionErrorMsg","physicalMedium","physicalMediumError","physicalMediumErrorMsg","srcError","srcErrorMsg","srcExists","bigsrc","bigsrcError","bigsrcErrorMsg","bigsrcExists","principalMakersProductionPlaces","principalMakersProductionPlacesError","principalMakersProductionPlacesErrorMsg","productWidth","productHeight","principalMakerError","principalMakerErrorMsg","changeState","_ret","v","handeImage","w","h","rented","inputChanged","paintingByID","releasedate","physicalmedium","principalmakersproductionplaces","display","flexFlow","justifyContent","multiline","_ref8","paintersAll","defaultValue","react_currency_formatter_umd_default","quantity","symbol","decimal","group","maker","_ref9","paintingOrderedByPagination","collection","periode","readOnly","lib_default","onLoad","addProduct","addPainting","_ref10","parseInt","prodplace","painterId","deleteProduct","deletePainting","editProduct","editPainting","_ref11","checkRented","Painters_templateObject","GET_PAINTER_DETAILS","Painters_templateObject2","ADD_PAINTER","Painters_templateObject3","EDIT_PAINTER","Painters_templateObject4","DELETE_PAINTER","Painters_templateObject5","Painters","datebirthError","datebirthErrorMsg","datedeathError","datedeathErrorMsg","dialogAddPainter","dialogEditPainter","painterID","datebirth","datedeath","placedeath","occupation","nationality","headerimage","thumbnail","dataHeaderImage","dataThumbnail","dataAmountWatched","placedeathError","placedeathErrorMsg","occupationError","occupationErrorMsg","nationalityError","nationalityErrorMsg","headerimageError","headerimageErrorMsg","thumbnailError","thumbnailErrorMsg","painterByID","dateofbirth","dateofdeath","placeofdeath","paintersAdmin","painterpagination","dateBirth","dateDeath","placeDeath","headerImage","deletePainter","alterPainter","editPainter","FAQS","FAQ_templateObject","GET_FAQ_DETAILS","FAQ_templateObject2","ADD_FAQ","FAQ_templateObject3","EDIT_FAQ","FAQ_templateObject4","DELETE_FAQ","FAQ_templateObject5","FAQ","handleClickOpenAdd","dialogAddFAQ","dialogEditFAQ","question","answer","faqId","questionError","questionErrorMsg","answerError","answerErrorMsg","toggleDelete","body","faq","faqCreate","faqDelete","faqUpdate","noMatch","link","ApolloLink","from","graphQLErrors","networkError","locations","path","createHttpLink","uri","authLink","setContext","_","headers","objectSpread","authorization","client","ApolloClient","cache","InMemoryCache","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","SnackbarContentWrapper","withStyles","green","dark","amber","icon","fontSize","iconVariant","opacity","marginRight","unit","alignItems","classes","other","Icon","SnackbarContent_default","classNames","action","close","Close_default","PrivateRoute","rest","Route","render","Redirect","pathname","HomeRedirect","App","loggedIn","JSON","stringify","removeItem","snackbarOpen","snackbarVariant","snackbarMessage","localUser","parse","BrowserRouter","basename","components_header_Header","components_sidebar_Sidebar","Switch","exact","views_login_Login","NoMatch","hostname","match","grey","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sPCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,ivBCaxC,IAAMC,GAASC,IAAHC,MA0EGC,eAnEb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAOJ,KAMTQ,YAAc,SAAAC,GACZR,EAAKS,SAAS,CAAEC,SAAUF,EAAMG,iBARfX,EAWnBY,YAAc,WACZZ,EAAKS,SAAS,CAAEC,SAAU,QAZTV,EAenBa,WAAa,WASXb,EAAKD,MAAMe,QARA,CACTC,GAAI,GACJC,OAAQ,GACRC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,OAAO,IAEgB,GACzBpB,EAAKY,cACLS,OAAOC,SAASC,UAxBhBvB,EAAKwB,MAAQ,CACXd,SAAU,MAHKV,wEA6BV,IACCU,EAAaP,KAAKqB,MAAlBd,SACFe,EAAOC,QAAQhB,GAErB,OACEiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,uBACAH,EAAAC,EAAAC,cAACE,EAAA,MAAD,CACEC,MAAOrC,GACPsC,aAAc,KAEb,SAAAC,GAA8B,IAA3BC,EAA2BD,EAA3BC,QAASC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,KAClB,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UACHK,EAAU,0BAA4BC,EAAQ,8BAAgD,MAAhBC,EAAKC,OAAiB,gCAAkC,SAK9IX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEE,UAAU,cACVU,QAASrC,KAAKI,aAEdoB,EAAAC,EAAAC,cAACY,GAAAb,EAAD,OAEFD,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CACEb,GAAG,YACHL,SAAUA,EACVe,KAAMA,EACNkB,QAASxC,KAAKS,aAEde,EAAAC,EAAAC,cAACe,GAAAhB,EAAD,CAAUY,QAASrC,KAAKU,YAAxB,oBA7DWgC,4JC2ENC,eAjFb,SAAAA,EAAY/C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,IACjB9C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6C,GAAAxC,KAAAH,KAAOJ,KACFyB,MAAQ,GAFIxB,wEAOjB,OACE2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACkB,GAAAnB,EAAD,CAAUoB,UAAU,OAClBrB,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CACEC,GAAG,aACHpB,UAAU,aAEVH,EAAAC,EAAAC,cAACsB,GAAAvB,EAAD,CAAUwB,QAAM,GACZzB,EAAAC,EAAAC,cAACwB,GAAAzB,EAAD,CACEE,UAAU,kBAEVH,EAAAC,EAAAC,cAACyB,GAAA1B,EAAD,OAEFD,EAAAC,EAAAC,cAAC0B,GAAA3B,EAAD,CACEE,UAAU,iBACV0B,QAAQ,gBAIhB7B,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CACEC,GAAG,cACHpB,UAAU,aAEVH,EAAAC,EAAAC,cAACsB,GAAAvB,EAAD,CAAUwB,QAAM,GACdzB,EAAAC,EAAAC,cAACwB,GAAAzB,EAAD,CACEE,UAAU,kBAEVH,EAAAC,EAAAC,cAAC4B,GAAA7B,EAAD,OAEFD,EAAAC,EAAAC,cAAC0B,GAAA3B,EAAD,CACEE,UAAU,iBACV0B,QAAQ,iBAId7B,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CACEC,GAAG,gBACHpB,UAAU,aAEVH,EAAAC,EAAAC,cAACsB,GAAAvB,EAAD,CAAUwB,QAAM,GACdzB,EAAAC,EAAAC,cAAC0B,GAAA3B,EAAD,CACEE,UAAU,iBACV0B,QAAQ,mBAId7B,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CACEC,GAAG,aACHpB,UAAU,aAEVH,EAAAC,EAAAC,cAACsB,GAAAvB,EAAD,CAAUwB,QAAM,GACdzB,EAAAC,EAAAC,cAAC0B,GAAA3B,EAAD,CACEE,UAAU,iBACV0B,QAAQ,gBAId7B,EAAAC,EAAAC,cAACoB,GAAA,EAAD,CACEC,GAAG,OACHpB,UAAU,aAEVH,EAAAC,EAAAC,cAACsB,GAAAvB,EAAD,CAAUwB,QAAM,GACdzB,EAAAC,EAAAC,cAAC0B,GAAA3B,EAAD,CACEE,UAAU,iBACV0B,QAAQ,mBAxEFX,4FCgBPa,eAvBb,SAAAA,EAAY3D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,IACjB1D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyD,GAAApD,KAAAH,KAAMJ,KACDyB,MAAQ,GAFIxB,wEAQjB,OACE2B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,GAAA,EAAD,CAAWC,MAAO,IAAMC,OAAQ,IAAKxB,KAAMlC,KAAKJ,MAAMsC,KAAMyB,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,OAAQ,EAAGC,KAAM,KACxGvC,EAAAC,EAAAC,cAACsC,GAAA,EAAD,CAAeC,OAAO,OAAOC,gBAAgB,QAC7C1C,EAAAC,EAAAC,cAACyC,GAAA,EAAD,CAAOF,OAAO,QAAQG,QAASpE,KAAKJ,MAAMyE,QAC1C7C,EAAAC,EAAAC,cAAC4C,GAAA,EAAD,CAAOL,OAAO,UACdzC,EAAAC,EAAAC,cAAC6C,GAAA,EAAD,CAASC,aAAc,CAAEC,gBAAiB,QAASC,MAAO,WAC1DlD,EAAAC,EAAAC,cAACiD,GAAA,EAAD,MACAnD,EAAAC,EAAAC,cAACkD,GAAA,EAAD,CAAMC,KAAK,WAAW/D,KAAK,SAASsD,QAASpE,KAAKJ,MAAMkF,cAAeb,OAAO,mBAjBpEvB,wICmELqC,eAnCb,SAAAA,EAAYnF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+E,IACjBlF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiF,GAAA5E,KAAAH,KAAMJ,KACDyB,MAAQ,GAFIxB,wEAMV,IAAAmF,EAAAhF,KACP,OACEwB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,KACED,EAAAC,EAAAC,cAACwD,GAAAzD,EAAD,KACED,EAAAC,EAAAC,cAACyD,GAAA1D,EAAD,KACED,EAAAC,EAAAC,cAAC0D,GAAA3D,EAAD,KACED,EAAAC,EAAAC,cAAC2D,GAAA5D,EAAD,SAAazB,KAAKJ,MAAMyE,MAAxB,KACA7C,EAAAC,EAAAC,cAAC2D,GAAA5D,EAAD,SAAazB,KAAKJ,MAAM0F,QAAxB,KACA9D,EAAAC,EAAAC,cAAC2D,GAAA5D,EAAD,SAAazB,KAAKJ,MAAM2F,cAI5B/D,EAAAC,EAAAC,cAAC8D,GAAA/D,EAAD,KAEIzB,KAAKJ,MAAMsC,KAAKuD,IAAI,SAAAC,GAAG,OACrBlE,EAAAC,EAAAC,cAAC0D,GAAA3D,EAAD,KACGuD,EAAKpF,MAAM+F,UAAUD,GAAKD,IAAI,SAAAG,GAAC,OAAIpE,EAAAC,EAAAC,cAAC2D,GAAA5D,EAAD,KAAYmE,mBAxB/ClD,k2CCzBrB,IAAMmD,GAAkBpG,IAAHqG,MASfC,GAAWtG,IAAHuG,MAURC,GAAWxG,IAAHyG,MAYRC,GAAY1G,IAAH2G,MAWTC,GAAa5G,IAAH6G,MAWVC,GAAmB9G,IAAH+G,MAQhBC,GAAehH,IAAHiH,MA0JHC,eAnJb,SAAAA,EAAY/G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2G,IACjB9G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6G,GAAAxG,KAAAH,KAAMJ,KACDyB,MAAQ,GAFIxB,wEAOjB,OACE2B,EAAAC,EAAAC,cAAA,WAASC,UAAU,oBACjBH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,GAEbrF,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAACjG,GAAG,wBACjBY,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOC,MAAOgE,GAAiB/D,aAAc,KAC1C,SAAAC,GAA8B,IAA3BC,EAA2BD,EAA3BC,QAASC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,KAClB,OAAIF,EAAgBR,EAAAC,EAAAC,cAAA,uBAChBO,EAAcT,EAAAC,EAAAC,cAAA,mBAClBoF,QAAQC,IAAI,yCAEVvF,EAAAC,EAAAC,cAAA,yCAEEF,EAAAC,EAAAC,cAACsF,GAAD,CAAQ9E,KAAMA,EAAK+E,eAAgB5C,MAAM,iBAAiBS,cAAc,uBAQlFtD,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAACjG,GAAG,0BAEjBY,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,IAAE,EAACvG,GAAG,0BACfY,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOC,MAAOoE,GAAUnE,aAAc,KACnC,SAAAsF,GAA8B,IAA3BpF,EAA2BoF,EAA3BpF,QAASC,EAAkBmF,EAAlBnF,MAAOC,EAAWkF,EAAXlF,KAClB,GAAIF,EAAS,OAAOR,EAAAC,EAAAC,cAAA,uBACpB,GAAIO,EAAO,OAAOT,EAAAC,EAAAC,cAAA,kBAIlB,OACEF,EAAAC,EAAAC,cAAA,8CAEAF,EAAAC,EAAAC,cAAC2F,GAAD,CAAQnF,KAAMA,EAAKoF,iBAAkB3B,UALvB,SAACD,GAAD,MAAS,CAACA,EAAIrB,MAAOqB,EAAI6B,eAAgB7B,EAAIZ,gBAKFT,MAAM,QAAQiB,QAAQ,WAAWC,WAAW,eAO7G/D,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,IAEf3F,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,IAAE,EAACvG,GAAG,iBAEfY,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOC,MAAOkE,GAAUjE,aAAc,KACnC,SAAA0F,GAA8B,IAA3BxF,EAA2BwF,EAA3BxF,QAASC,EAAkBuF,EAAlBvF,MAAOC,EAAWsF,EAAXtF,KAClB,GAAIF,EAAS,OAAOR,EAAAC,EAAAC,cAAA,uBACpB,GAAIO,EAAO,OAAOT,EAAAC,EAAAC,cAAA,kBAIlB,OACEF,EAAAC,EAAAC,cAAA,6CAEAF,EAAAC,EAAAC,cAAC2F,GAAD,CAAQnF,KAAMA,EAAKuF,qBAAsB9B,UAL3B,SAACD,GAAD,MAAS,CAACA,EAAIrB,MAAOqB,EAAI6B,eAAiB,IAAM7B,EAAIgC,oBAKLrD,MAAM,QAAQiB,QAAQ,WAAWC,WAAW,gBASnH/D,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAACjG,GAAG,0BAEjBY,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,IAAE,EAACvG,GAAG,gBACfY,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOC,MAAOwE,GAAYvE,aAAc,KACrC,SAAA6F,GAA8B,IAA3B3F,EAA2B2F,EAA3B3F,QAASC,EAAkB0F,EAAlB1F,MAAOC,EAAWyF,EAAXzF,KAClB,GAAIF,EAAS,OAAOR,EAAAC,EAAAC,cAAA,uBACpB,GAAIO,EAAO,OAAOT,EAAAC,EAAAC,cAAA,kBAIlB,OACEF,EAAAC,EAAAC,cAAA,8CAEAF,EAAAC,EAAAC,cAAC2F,GAAD,CAAQnF,KAAMA,EAAK0F,mBAAoBjC,UALzB,SAACD,GAAD,MAAS,CAACA,EAAIrB,MAAOqB,EAAI6B,eAAgB7B,EAAIZ,gBAKAT,MAAM,QAAQiB,QAAQ,WAAWC,WAAW,eAO/G/D,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,IAEf3F,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,IAAE,EAACvG,GAAG,iBACfY,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOC,MAAOsE,GAAWrE,aAAc,KACpC,SAAA+F,GAA8B,IAA3B7F,EAA2B6F,EAA3B7F,QAASC,EAAkB4F,EAAlB5F,MAAOC,EAAW2F,EAAX3F,KAClB,GAAIF,EAAS,OAAOR,EAAAC,EAAAC,cAAA,uBACpB,GAAIO,EAAO,OAAOT,EAAAC,EAAAC,cAAA,kBAIlB,OACEF,EAAAC,EAAAC,cAAA,gDAEAF,EAAAC,EAAAC,cAAC2F,GAAD,CAAQnF,KAAMA,EAAK4F,sBAAuBnC,UAL5B,SAACD,GAAD,MAAS,CAACA,EAAIrB,MAAOqB,EAAI6B,eAAiB,IAAM7B,EAAIgC,oBAKJrD,MAAM,QAAQiB,QAAQ,WAAWC,WAAW,gBASpH/D,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAACjG,GAAG,8BAEjBY,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,IAAE,EAACvG,GAAG,oBACfY,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOC,MAAO0E,GAAkBwB,UAAW,CAAEC,OAAQ,EAAGC,KAAM,IAC3D,SAAAC,GAA8B,IAA3BlG,EAA2BkG,EAA3BlG,QAASC,EAAkBiG,EAAlBjG,MAAOC,EAAWgG,EAAXhG,KAClB,OAAIF,EAAgBR,EAAAC,EAAAC,cAAA,uBAChBO,EAAcT,EAAAC,EAAAC,cAAA,kBAEhBF,EAAAC,EAAAC,cAAA,wCAAgCQ,EAAKiG,eAAeC,UAM5D5G,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,IAAE,EAACvG,GAAG,kBACfY,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOC,MAAO4E,GAAc3E,aAAc,KACvC,SAAAuG,GAA8B,IAA3BrG,EAA2BqG,EAA3BrG,QAASC,EAAkBoG,EAAlBpG,MAAOC,EAAWmG,EAAXnG,KAClB,OAAIF,EAAgBR,EAAAC,EAAAC,cAAA,uBAChBO,EAAcT,EAAAC,EAAAC,cAAA,kBAEhBF,EAAAC,EAAAC,cAAA,uDAA+CQ,EAAKoG,oCAtIhD5F,ifCrDxB,IAAM6F,GAAQ,IAAIC,iBAAe,CAC/BC,QAAS,CACPpF,QAAS,CACPqF,KAAM,WAERC,UAAW,CACTD,KAAM,WAER7D,KAAM,QAER+D,WAAY,CACVC,iBAAiB,GAEnBC,UAAW,CACTC,UAAW,CACTC,KAAM,CACJtE,MAAO,aAMTuE,GAAQxJ,IAAHyJ,MAmLIC,eApKb,SAAAA,EAAYvJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmJ,IACjBtJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqJ,GAAAhJ,KAAAH,KAAOJ,KAkBTwJ,aAAe,SAAAtI,GAAI,OAAI,SAAAT,GACrBR,EAAKS,SAALR,OAAAuJ,GAAA,EAAAvJ,CAAA,GACGgB,EAAOT,EAAMiJ,OAAOC,UArBN1J,EAyBnB2J,oBAAsB,WACpB3J,EAAKS,SAAS,CACZmJ,UAAU,KA3BK5J,EA+BnB6J,oBAAsB,SAACrJ,EAAOsJ,GACb,cAAXA,GAIJ9J,EAAKS,SAAS,CACZmJ,UAAU,KArCK5J,EAyCnB+J,wBAA0B,WACxB/J,EAAKS,SAAS,SAAAe,GAAK,MAAK,CAAEwI,cAAexI,EAAMwI,iBAxC/ChK,EAAKwB,MAAQ,CACXL,MAAO,GACP8I,SAAU,GACVD,cAAc,EACdE,aAAa,EACbN,UAAU,GAPK5J,oFAabmK,aAAaC,QAAQ,gBACvBjK,KAAKJ,MAAMsK,QAAQC,KAAnB,cACAjJ,OAAOC,SAASC,6CA8BTgJ,EAAMC,GACfrK,KAAKJ,MAAMe,QAAQyJ,EAAMC,oCAGlB,IAAArF,EAAAhF,KACP,OACEwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,CAAO6I,UAAW,EAAG3I,UAAU,iBAC7BH,EAAAC,EAAAC,cAAA,OAAK6I,IAAKC,KAAMC,IAAI,OAAO/G,OAAO,MAAM/B,UAAU,eAClDH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOA,IACvB/G,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACdH,EAAAC,EAAAC,cAACiJ,GAAAlJ,EAAD,CACEb,GAAG,cACHe,UAAU,cACViJ,MAAM,QACN/F,KAAK,QACL/D,KAAK,QACL+J,aAAa,QACbtB,MAAOvJ,KAAKqB,MAAML,MAClB8J,SAAU9K,KAAKoJ,aAAa,SAC5B2B,WAAY,CACVC,aAAc,WAGlBxJ,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAaE,UAAU,eACrBH,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,sBAApB,cACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CACEb,GAAG,qBACHiE,KAAM7E,KAAKqB,MAAMwI,aAAe,OAAS,WACzCN,MAAOvJ,KAAKqB,MAAMyI,SAClBe,aAAa,mBACbC,SAAU9K,KAAKoJ,aAAa,YAC5B2B,WAAY,CACVC,aAAc,cAEhBK,aACE7J,EAAAC,EAAAC,cAAC4J,GAAA7J,EAAD,CAAgB8J,SAAS,OACvB/J,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEuJ,aAAW,6BACX3I,QAASrC,KAAK4J,yBAEb5J,KAAKqB,MAAMwI,aAAerI,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,MAAiBD,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,YAOxDD,EAAAC,EAAAC,cAACE,EAAA,SAAD,CACE8J,SAAUzC,GACV0C,eAAe,EACfC,YAAa,SAAC1J,GACZ8H,aAAa6B,QAAQ,mBAAoB3J,EAAK4J,MAAMC,OACpD/G,EAAKtE,WAAWwB,EAAK4J,OAAO,GAC5B9G,EAAKpF,MAAMsK,QAAQC,KAAnB,cACAjJ,OAAOC,SAASC,UAElB4K,QAAS,SAAC/J,GACR6E,QAAQ7E,MAAR,iBAAAgK,OAA+BhK,IAC/B+C,EAAKwE,sBACLxE,EAAK1E,SAAS,CACZyJ,aAAa,MAIhB,SAAC+B,GAAD,OACCtK,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACEiD,MAAM,YACN/C,UAAU,eACVwK,QAAQ,YACRC,SAAUpH,EAAK3D,MAAM0I,YACrB1H,QAAS,SAAAgK,GAQP,GAPAA,EAAEC,iBAEFtH,EAAK1E,SAAS,CACZyJ,aAAa,KAIV,eAAgBwC,KAAKvH,EAAK3D,MAAML,OAKnC,OAJAgE,EAAKwE,2BACLxE,EAAK1E,SAAS,CACZyJ,aAAa,IAMjB+B,EAAM,CAAE/D,UAAW,CACjB/G,MAAOgE,EAAK3D,MAAML,MAAMwL,cACxB1C,SAAU9E,EAAK3D,MAAMyI,cAxB3B,gBAkCRtI,EAAAC,EAAAC,cAAC+K,EAAAhL,EAAD,CACEiL,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdtL,KAAMtB,KAAKqB,MAAMoI,SACjBoD,iBAAkB,IAClBrK,QAASxC,KAAK0J,oBACdoD,aAAc,CACZC,mBAAoB,cAEtBC,QAASxL,EAAAC,EAAAC,cAAA,QAAMd,GAAG,cAAT,6CAAgEY,EAAAC,EAAAC,cAAA,WAAhE,kCA9JCgB,+iFCMpB,IAAMuK,GAAYxN,IAAHyN,MAsBTC,GAAmB1N,IAAH2N,MAmBhBC,GAAW5N,IAAH6N,MA4BRC,GAAY9N,IAAH+N,MA4BTC,GAAchO,IAAHiO,MAMXnF,GAAQ,IAAIC,iBAAe,CAC/BC,QAAS,CACPpF,QAAS,CACPqF,KAAM,WAER7D,KAAM,QAER+D,WAAY,CACVC,iBAAiB,KAIf8E,GAAoB,IAAInF,iBAAe,CAC3CC,QAAS,CACPpF,QAAS,CACPqF,KAAM,WAER7D,KAAM,QAER+D,WAAY,CACVC,iBAAiB,KAwLgB+E,IAAMlL,cAk0B5BmL,eAvwBb,SAAAA,EAAYjO,GAAO,IAAAoF,EAAA,OAAAlF,OAAAC,EAAA,EAAAD,CAAAE,KAAA6N,IACjB7I,EAAAlF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+N,GAAA1N,KAAAH,KAAMJ,KAgERkO,oBAAsB,SAACC,GACrB/I,EAAK1E,SAAS,CACZ0N,gBAAgB,EAChBD,OAAQA,EACRE,WAAW,KArEIjJ,EAyEnBkJ,SAAW,SAAAnM,GAAA,IAAG2D,EAAH3D,EAAG2D,IAAQyI,EAAXrO,OAAAsO,EAAA,EAAAtO,CAAAiC,EAAA,gBACTP,EAAAC,EAAAC,cAAC2M,GAAA,EAAMC,IAAPxO,OAAAyO,OAAA,GACMJ,EADN,CAGE9L,QAAS,kBAAM2C,EAAK8I,oBAAoBpI,EAAI9E,KAC5C4N,MAAO,CACLC,OAAQ,eA/EKzJ,EAyRnB0J,iBAAmB,SAACrO,EAAO4H,GACzBjD,EAAK1E,SAAS,CAAE2H,UA1RCjD,EA6RnB2J,wBAA0B,SAAAtO,GACxB2E,EAAK1E,SAAS,CAAEsO,YAAavO,EAAMiJ,OAAOC,SA9RzBvE,EAsSnBoE,aAAe,SAAAtI,GAAI,OAAI,SAAAT,GACR,UAATS,EACFkE,EAAK1E,SAALR,OAAAuJ,GAAA,EAAAvJ,CAAA,GACGgB,EAAOT,EAAMiJ,OAAOuF,UAGvB7J,EAAK1E,SAALR,OAAAuJ,GAAA,EAAAvJ,CAAA,GACGgB,EAAOT,EAAMiJ,OAAOC,UA7SRvE,EAmTnB8J,gBAAkB,WAChB9J,EAAK1E,SAAS,CACZyO,eAAe,EACfnO,GAAIoO,KAAKC,MAAuB,KAAhBD,KAAKE,SAA6B,GAAGC,cAtTtCnK,EA2TnBvE,YAAc,WACZuE,EAAK1E,SAAS,CAAEyO,eAAe,EAAOf,gBAAgB,IACtDhJ,EAAKoK,cA7TYpK,EAwWnBqK,WAAa,WACX,GAA8B,IAA1BrK,EAAK3D,MAAMiO,WAAkB,CAC/B,IAAIC,GAAO,EACPC,EAAQ,CAAC,CAAC,OAAQxK,EAAK3D,MAAMP,MACjC,CAAC,UAAWkE,EAAK3D,MAAMN,SACvB,CAAC,OAAQiE,EAAK3D,MAAMoO,MACpB,CAAC,WAAYzK,EAAK3D,MAAMyI,UACxB,CAAC,QAAS9E,EAAK3D,MAAMqO,OACrB,CAAC,cAAe1K,EAAK3D,MAAMsO,aAC3B,CAAC,aAAc3K,EAAK3D,MAAMuO,YAC1B,CAAC,OAAQ5K,EAAK3D,MAAMwO,MACpB,CAAC,gBAAiB7K,EAAK3D,MAAMyO,gBAE7BhJ,QAAQC,IAAIyI,GAEZ,IAAK,IAAIO,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAChCjJ,QAAQC,IAAR,SAAAkF,OAAqBuD,EAAMO,GAAG,GAA9B,cAAA9D,OAA6CuD,EAAMO,GAAG,KACjDP,EAAMO,GAAG,GASP,WACL,IAAIE,EAAMT,EAAMO,GAAG,GAAK,QACpBG,EAASD,EAAM,MACnBjL,EAAK1E,SAAS,SAAAe,GAAK,IAAAmG,EAAA,OAAAA,EAAA,GAAA1H,OAAAuJ,GAAA,EAAAvJ,CAAA0H,EAChByI,GAAM,GADUnQ,OAAAuJ,GAAA,EAAAvJ,CAAA0H,EAEhB0I,EAAS,IAFO1I,IAHd,GATW,WAChB+H,GAAO,EACPzI,QAAQ7E,MAAR,SAAAgK,OAAuBuD,EAAMO,GAAG,GAAhC,cACA,IAAIE,EAAMT,EAAMO,GAAG,GAAK,QACpBG,EAASD,EAAM,MACnBjL,EAAK1E,SAAS,SAAAe,GAAK,IAAA+F,EAAA,OAAAA,EAAA,GAAAtH,OAAAuJ,GAAA,EAAAvJ,CAAAsH,EAChB6I,GAAM,GADUnQ,OAAAuJ,GAAA,EAAAvJ,CAAAsH,EAEhB8I,EAAS,yBAFO9I,IALH,GAmBpBN,QAAQC,IAAR,wBAAAkF,OAAoCjH,EAAK3D,MAAMJ,QAEzC,eAAgBsL,KAAKvH,EAAK3D,MAAMoO,QACpCF,GAAO,EACPvK,EAAK1E,SAAS,SAAAe,GAAK,MAAK,CACtB8O,WAAW,EACXC,aAAc,qCAIdb,GACFvK,EAAK1E,SAAS,SAAAe,GAAK,MAAK,CAAEiO,WAAYjO,EAAMiO,WAAa,OAvZ5CtK,EA6ZnBqL,WAAa,WACXrL,EAAK1E,SAAS,SAAAe,GAAK,MAAK,CAAEiO,WAAYjO,EAAMiO,WAAa,MA5ZzDtK,EAAK3D,MAAQ,CACXiO,WAAY,EACZP,eAAe,EACff,gBAAgB,EAChBnN,OAAQ,OACRC,KAAM,GACNwP,WAAW,EACXC,aAAc,GACdxP,QAAS,GACTyP,cAAc,EACdC,gBAAiB,GACjBhB,KAAM,GACNU,WAAW,EACXC,aAAc,GACdtG,SAAU,GACV4G,eAAe,EACfC,iBAAkB,GAClBjB,MAAO,GACPkB,YAAY,EACZC,cAAe,GACflB,YAAa,GACbmB,kBAAkB,EAClBC,oBAAqB,GACrBnB,WAAY,GACZoB,iBAAiB,EACjBC,mBAAoB,GACpBpB,KAAM,GACNqB,WAAW,EACXC,aAAc,GACdrB,cAAe,GACfsB,oBAAoB,EACpBC,sBAAuB,GACvBpQ,OAAO,EACPqQ,YAAY,EACZC,cAAe,GACfC,GAAI,IACJvJ,KAAM,EACN2G,YAAa,GACbb,OAAQ,EACRE,WAAW,EACXwD,KAAM,GACNC,WAAY,EACZC,SAAU,GACVC,YAAa,EACbC,UAAW,CAAC,GAAI,GAAI,GAAI,IACxBC,QAAS,CAAC,CAAEC,WAAY,KAAMC,UAAW,QACzCC,sBAAuB,CACrB,CAAEF,WAAY,KAAMtO,MAAO,IAC3B,CAAEsO,WAAY,SAAUtO,MAAO,IAC/B,CAAEsO,WAAY,OAAQtO,MAAO,KAC7B,CAAEsO,WAAY,UAAWtO,MAAO,KAChC,CAAEsO,WAAY,QAAStO,MAAO,MAEhCyO,kBAAmB,CAAC,QAAS,OAAQ,aAAc,WAAY,cAAe,kBAGhFlN,EAAKmN,kBAAoBnN,EAAKmN,kBAAkBC,KAAvBtS,OAAAuS,GAAA,EAAAvS,QAAAuS,GAAA,EAAAvS,CAAAkF,KACzBA,EAAKsN,eAAiB,SAAAX,GAAQ,OAAI3M,EAAK1E,SAAS,CAAEqR,cAClD3M,EAAKuN,cAAgB,SAAAT,GAAO,OAAI9M,EAAK1E,SAAS,CAAEwR,aAChD9M,EAAKwN,wBAA0B,SAACN,GAAwBlN,EAAK1E,SAAS,CAAE4R,uBA7DvDlN,kFAoFAyN,EAAWpR,EAAO+H,GAAc,IAAAsJ,EAAA1S,KACjD,OAAQyS,GACN,KAAK,EACH,OACEjR,EAAAC,EAAAC,cAACE,EAAA,MAAD,CACEC,MAAOsL,GACPpF,UAAW,CAAEnH,GAAIS,EAAM0M,QACvBnC,YAAa,SAAC1J,IACiB,IAAzBwQ,EAAKrR,MAAM4M,WACbyE,EAAKpS,SAAS,CACZyN,OAAQ7L,EAAKyQ,eAAe/R,GAC5BC,OAAQqB,EAAKyQ,eAAe9R,OAC5BC,KAAMoB,EAAKyQ,eAAe7R,KAC1BC,QAASmB,EAAKyQ,eAAe5R,QAC7B0O,KAAMvN,EAAKyQ,eAAelD,KAC1B3F,SAAU5H,EAAKyQ,eAAe7I,SAC9B4F,MAAOxN,EAAKyQ,eAAejD,MAC3BC,YAAazN,EAAKyQ,eAAehD,YACjCC,WAAY1N,EAAKyQ,eAAe/C,WAChCC,KAAM3N,EAAKyQ,eAAe9C,KAC1BC,cAAe5N,EAAKyQ,eAAe7C,cACnC7O,MAAOiB,EAAKyQ,eAAe1R,MAC3BgN,WAAW,MAKhB,SAAAtG,GAAwB,IAArB3F,EAAqB2F,EAArB3F,QAASC,EAAY0F,EAAZ1F,MACX,OAAID,EAAgBR,EAAAC,EAAAC,cAAA,uBAChBO,EAAcT,EAAAC,EAAAC,cAAA,kBAGhBF,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAaoB,UAAU,WAAWlB,UAAU,4BAC1CH,EAAAC,EAAAC,cAACoR,GAAArR,EAAD,CACEE,UAAU,2BACVqJ,aAAW,SACXlK,KAAK,SACLyI,MAAOlI,EAAMR,OACbiK,SAAU1B,EAAa,WAEvB5H,EAAAC,EAAAC,cAACqR,GAAAtR,EAAD,CAAkB8H,MAAM,OAAOyJ,QAASxR,EAAAC,EAAAC,cAACuR,GAAAxR,EAAD,CAAOiD,MAAM,YAAckG,MAAM,SACzEpJ,EAAAC,EAAAC,cAACqR,GAAAtR,EAAD,CAAkB8H,MAAM,QAAQyJ,QAASxR,EAAAC,EAAAC,cAACuR,GAAAxR,EAAD,CAAOiD,MAAM,YAAckG,MAAM,aAIhFpJ,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMiP,WAClC9O,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,YAApB,QACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,WAAW2I,MAAOlI,EAAMP,KAAMgK,SAAU1B,EAAa,UAC/D5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,uBAAuBS,EAAMkP,gBAGpD/O,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMmP,cAClChP,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,eAApB,cACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,cAAc2I,MAAOlI,EAAMN,QAAS+J,SAAU1B,EAAa,aACrE5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,0BAA0BS,EAAMoP,mBAGvDjP,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM8O,WAClC3O,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,YAApB,UACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,WAAWiE,KAAK,OAAO0E,MAAOlI,EAAMoO,KAAM3E,SAAU1B,EAAa,UAC3E5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,uBAAuBS,EAAM+O,gBAGpD5O,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMuP,YAClCpP,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,aAApB,SACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,YAAY2I,MAAOlI,EAAMqO,MAAO5E,SAAU1B,EAAa,WACjE5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,wBAAwBS,EAAMwP,iBAGrDrP,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMyP,kBAClCtP,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,mBAApB,cACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,kBAAkB2I,MAAOlI,EAAMsO,YAAa7E,SAAU1B,EAAa,iBAC7E5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,8BAA8BS,EAAM0P,uBAG3DvP,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM2P,iBAClCxP,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,kBAApB,YACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,iBAAiB2I,MAAOlI,EAAMuO,WAAY9E,SAAU1B,EAAa,gBAC3E5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,6BAA6BS,EAAM4P,sBAG1DzP,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM6P,WAClC1P,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,YAApB,QACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,WAAW2I,MAAOlI,EAAMwO,KAAM/E,SAAU1B,EAAa,UAC/D5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,uBAAuBS,EAAM8P,gBAGpD3P,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM+P,oBAClC5P,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,sBAApB,eACA3J,EAAAC,EAAAC,cAAC0R,GAAA3R,EAAD,CACE8H,MAAOlI,EAAMyO,cACbhF,SAAU1B,EAAa,iBACvBtI,KAAK,cACLuS,YAAa,SAAA9J,GAAK,SAAA0C,OAAO1C,IACzB+J,MAAO9R,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,wBAEjBY,EAAAC,EAAAC,cAACe,GAAAhB,EAAD,CAAU8H,MAAM,IACd/H,EAAAC,EAAAC,cAAA,mBAEFF,EAAAC,EAAAC,cAACe,GAAAhB,EAAD,CAAU8H,MAAM,SAAhB,SACA/H,EAAAC,EAAAC,cAACe,GAAAhB,EAAD,CAAU8H,MAAM,cAAhB,cACA/H,EAAAC,EAAAC,cAACe,GAAAhB,EAAD,CAAU8H,MAAM,UAAhB,WAEF/H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,KAAiBJ,EAAMgQ,yBAG3B7P,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAAC6R,GAAA9R,EAAD,KACED,EAAAC,EAAAC,cAACqR,GAAAtR,EAAD,CACEuR,QACExR,EAAAC,EAAAC,cAAC8R,GAAA/R,EAAD,CACEoN,QAASxN,EAAMJ,MACf6J,SAAU1B,EAAa,SACvBG,MAAM,UAGVqB,MAAM,WAIVpJ,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAaQ,MAAOZ,EAAMiQ,WAAYzO,UAAU,YAC9CrB,EAAAC,EAAAC,cAAC+R,GAAAhS,EAAD,CAAWoB,UAAU,UAArB,8BACArB,EAAAC,EAAAC,cAAC6R,GAAA9R,EAAD,KACED,EAAAC,EAAAC,cAACqR,GAAAtR,EAAD,CACEuR,QACExR,EAAAC,EAAAC,cAACgS,GAAAjS,EAAD,CAAUoN,QAASxN,EAAMJ,MAAO6J,SAAU1B,EAAa,SAAUG,MAAM,UAEzEqB,MAAM,WAGVpJ,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,KAAiBJ,EAAMkQ,oBAQvC,KAAK,EACH,OACE/P,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,KACED,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,6BAC3BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAyBN,EAAMR,OAA/C,IAAwDQ,EAAMP,KAA9D,IAAqEO,EAAMN,SAC3ES,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBN,EAAMJ,MAAQ,QAAU,cAE3DO,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,6BAC1BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,SAEFH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,6BAC1BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAyBN,EAAMoO,OAEjDjO,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,sCAE7BH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,sCAC7BH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,6BAC1BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,UAEFH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,6BAC1BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAyBN,EAAMqO,MAA/C,IAAuDrO,EAAMsO,cAE/DnO,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,8BAC5BH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,4BAA4B6M,MAAO,CAAEmF,QAAS,qBACxEnS,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAyBN,EAAMuO,WAA/C,IAA4DvO,EAAMwO,OAEpErO,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,sCAC7BH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,6BAC1BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,gBAEFH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,6BAC1BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAyBN,EAAMyO,kBAKzD,QACE,MAAO,8DAIK8B,GAChB5R,KAAKM,SAAS,CACZ0B,SAAS,EACT4P,iDAYKhR,GACP,MAAO,cAAgBA,uCA+BvBZ,KAAKM,SAAS,CACZgP,WAAY,EACZP,eAAe,EACflO,OAAQ,OACRC,KAAM,GACNwP,WAAW,EACXC,aAAc,GACdxP,QAAS,GACTyP,cAAc,EACdC,gBAAiB,GACjBhB,KAAM,GACNU,WAAW,EACXC,aAAc,GACdtG,SAAU,GACV4G,eAAe,EACfC,iBAAkB,GAClBjB,MAAO,GACPkB,YAAY,EACZC,cAAe,GACflB,YAAa,GACbmB,kBAAkB,EAClBC,oBAAqB,GACrBnB,WAAY,GACZoB,iBAAiB,EACjBC,mBAAoB,GACpBpB,KAAM,GACNqB,UAAW,GACXC,cAAc,EACdrB,cAAe,GACfsB,oBAAoB,EACpBC,sBAAuB,GACvBpQ,OAAO,EACPuQ,GAAI,IACJvD,WAAW,EACXF,OAAQ,qCA8DH,IAAA6F,EAAA5T,KACD6T,EAhpBD,CAAC,oBAAqB,oBAipBnBvE,EAAetP,KAAKqB,MAApBiO,WAFDwE,EAKH9T,KAAKqB,MADPsQ,EAJKmC,EAILnC,SAAUC,EAJLkC,EAIKlC,YAAaC,EAJlBiC,EAIkBjC,UAAWC,EAJ7BgC,EAI6BhC,QAASG,EAJtC6B,EAIsC7B,sBAAuBC,EAJ7D4B,EAI6D5B,kBAGpE,OACE1Q,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACR9J,QAASrC,KAAK8O,iBAFhB,wBAOFtN,EAAAC,EAAAC,cAACE,EAAA,MAAD,CACEC,MAAOoL,GACPnL,aAAc,IACdiG,UAAW,CACTE,KAAM2J,EACN5J,OAAQ2J,IAIT,SAAA9J,GAA8B,IAA3B7F,EAA2B6F,EAA3B7F,QAASC,EAAkB4F,EAAlB5F,MAAOC,EAAW2F,EAAX3F,KAClB,GAAIF,EAAS,OAAOR,EAAAC,EAAAC,cAAA,0BACpB,GAAIO,EAAO,OAAOT,EAAAC,EAAAC,cAAA,qBAkBlB,IAhBA,IAcI+P,EAAO,GAEF1B,EAAI,EAAGA,EAAI7N,EAAKiG,eAAe4L,UAAU/D,OAAQD,IACxD0B,EAAKtH,KACH,CACEvJ,GAAIsB,EAAKiG,eAAe4L,UAAUhE,GAAGnP,GACrCC,OAAQqB,EAAKiG,eAAe4L,UAAUhE,GAAGlP,OACzCC,KAAMoB,EAAKiG,eAAe4L,UAAUhE,GAAGjP,KACvCC,QAASmB,EAAKiG,eAAe4L,UAAUhE,GAAGhP,QAC1C0O,KAAMvN,EAAKiG,eAAe4L,UAAUhE,GAAGN,KACvCC,MAAOxN,EAAKiG,eAAe4L,UAAUhE,GAAGL,MACxCC,YAAazN,EAAKiG,eAAe4L,UAAUhE,GAAGJ,YAC9CC,WAAY1N,EAAKiG,eAAe4L,UAAUhE,GAAGH,WAC7CC,KAAM3N,EAAKiG,eAAe4L,UAAUhE,GAAGF,KACvC5O,QAAOiB,EAAKiG,eAAe4L,UAAUhE,GAAG9O,OAAQiB,EAAKiG,eAAe4L,UAAUhE,GAAG9O,MAAMkO,WACvFW,cAAe5N,EAAKiG,eAAe4L,UAAUhE,GAAGD,gBAKtD,OACEtO,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,KACED,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACEoD,KAAMA,EACNuC,QAtCQ,CACZ,CAAElT,KAAM,KAAMuD,MAAO,MACrB,CAAEvD,KAAM,SAAUuD,MAAO,UACzB,CAAEvD,KAAM,OAAQuD,MAAO,QACvB,CAAEvD,KAAM,UAAWuD,MAAO,cAC1B,CAAEvD,KAAM,OAAQuD,MAAO,QACvB,CAAEvD,KAAM,QAASuD,MAAO,SACxB,CAAEvD,KAAM,cAAeuD,MAAO,cAC9B,CAAEvD,KAAM,aAAcuD,MAAO,YAC7B,CAAEvD,KAAM,OAAQuD,MAAO,QACvB,CAAEvD,KAAM,QAASuD,MAAO,SACxB,CAAEvD,KAAM,gBAAiBuD,MAAO,iBA6B5B7C,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CACErC,YAAaA,EACbsC,oBAAqBN,EAAKzB,kBAC1BR,SAAUA,EACVwC,iBAAkBP,EAAKtB,iBAEzB9Q,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CACEvC,WAAYxP,EAAKiG,eAAeC,QAElC5G,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CACEnC,QAASA,EACTsC,gBAAiBR,EAAKrB,gBAExB/Q,EAAAC,EAAAC,cAACuS,GAAA,EAAD,MACAzS,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACEgG,aAAcT,EAAK1F,SACnBoG,iBAAkBrC,IAEpBzQ,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CAAgBkG,qBAAmB,IACnC/S,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACE6D,kBAAmBA,EACnBsC,0BAA2BZ,EAAKpB,0BAElChR,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,MACA7M,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,MACA7M,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACEwD,UAAWA,QASvBrQ,EAAAC,EAAAC,cAAC+S,GAAAhT,EAAD,CACEH,KAAMtB,KAAKqB,MAAM0N,cACjBvM,QAASxC,KAAKS,YACdiU,sBAAoB,EACpBC,sBAAoB,GAGpBnT,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAab,GAAG,qBAAhB,uBACAY,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOA,IACvB/G,EAAAC,EAAAC,cAACmT,GAAApT,EAAD,CACEE,UAAU,uBAEVH,EAAAC,EAAAC,cAACoT,GAAArT,EAAD,CAAS6N,WAAYA,EAAYyF,kBAAgB,GAC9ClB,EAAMpO,IAAI,SAAAmF,GACT,OACEpJ,EAAAC,EAAAC,cAACsT,GAAAvT,EAAD,CAAMwT,IAAKrK,GACTpJ,EAAAC,EAAAC,cAACwT,GAAAzT,EAAD,KAAYmJ,OAKpBpJ,EAAAC,EAAAC,cAAA,WACG1B,KAAKqB,MAAMiO,aAAeuE,EAAM7D,OAC/BxO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKmV,aAAtB,UAGA3T,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAnxBtB,SAAwB+Q,EAAWpR,EAAO+H,GACxC,OAAQqJ,GACN,KAAK,EACH,OACEjR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAaoB,UAAU,WAAWlB,UAAU,4BAC1CH,EAAAC,EAAAC,cAACoR,GAAArR,EAAD,CACEE,UAAU,2BACVqJ,aAAW,SACXlK,KAAK,SACLyI,MAAOlI,EAAMR,OACbiK,SAAU1B,EAAa,WAEvB5H,EAAAC,EAAAC,cAACqR,GAAAtR,EAAD,CAAkB8H,MAAM,OAAOyJ,QAASxR,EAAAC,EAAAC,cAACuR,GAAAxR,EAAD,CAAOiD,MAAM,YAAckG,MAAM,SACzEpJ,EAAAC,EAAAC,cAACqR,GAAAtR,EAAD,CAAkB8H,MAAM,QAAQyJ,QAASxR,EAAAC,EAAAC,cAACuR,GAAAxR,EAAD,CAAOiD,MAAM,YAAckG,MAAM,aAIhFpJ,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMiP,WAClC9O,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,YAApB,QACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,WAAW2I,MAAOlI,EAAMP,KAAMgK,SAAU1B,EAAa,UAC/D5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,uBAAuBS,EAAMkP,gBAGpD/O,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMmP,cAClChP,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,eAApB,cACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,cAAc2I,MAAOlI,EAAMN,QAAS+J,SAAU1B,EAAa,aACrE5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,0BAA0BS,EAAMoP,mBAGvDjP,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM8O,WAClC3O,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,YAApB,UACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,WAAWiE,KAAK,OAAO0E,MAAOlI,EAAMoO,KAAM3E,SAAU1B,EAAa,UAC3E5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,uBAAuBS,EAAM+O,gBAGpD5O,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMqP,eAClClP,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,gBAApB,cACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,eAAe2I,MAAOlI,EAAMyI,SAAUgB,SAAU1B,EAAa,cACvE5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,2BAA2BS,EAAMsP,oBAGxDnP,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMuP,YAClCpP,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,aAApB,SACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,YAAY2I,MAAOlI,EAAMqO,MAAO5E,SAAU1B,EAAa,WACjE5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,wBAAwBS,EAAMwP,iBAGrDrP,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMyP,kBAClCtP,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,mBAApB,cACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,kBAAkB2I,MAAOlI,EAAMsO,YAAa7E,SAAU1B,EAAa,iBAC7E5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,8BAA8BS,EAAM0P,uBAG3DvP,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM2P,iBAClCxP,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,kBAApB,YACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,iBAAiB2I,MAAOlI,EAAMuO,WAAY9E,SAAU1B,EAAa,gBAC3E5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,6BAA6BS,EAAM4P,sBAG1DzP,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM6P,WAClC1P,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,YAApB,QACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,WAAW2I,MAAOlI,EAAMwO,KAAM/E,SAAU1B,EAAa,UAC/D5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,uBAAuBS,EAAM8P,gBAGpD3P,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GAMrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM+P,oBAClC5P,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,sBAApB,eACA3J,EAAAC,EAAAC,cAAC0R,GAAA3R,EAAD,CACE8H,MAAOlI,EAAMyO,cACbhF,SAAU1B,EAAa,iBACvBtI,KAAK,cACLuS,YAAa,SAAA9J,GAAK,SAAA0C,OAAO1C,IACzB+J,MAAO9R,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,wBAEjBY,EAAAC,EAAAC,cAACe,GAAAhB,EAAD,CAAU8H,MAAM,IACd/H,EAAAC,EAAAC,cAAA,mBAEFF,EAAAC,EAAAC,cAACe,GAAAhB,EAAD,CAAU8H,MAAM,SAAhB,SACA/H,EAAAC,EAAAC,cAACe,GAAAhB,EAAD,CAAU8H,MAAM,cAAhB,cACA/H,EAAAC,EAAAC,cAACe,GAAAhB,EAAD,CAAU8H,MAAM,UAAhB,WAEF/H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,KAAiBJ,EAAMgQ,yBAG3B7P,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GAcrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAaQ,MAAOZ,EAAMiQ,WAAYzO,UAAU,YAC9CrB,EAAAC,EAAAC,cAAC+R,GAAAhS,EAAD,CAAWoB,UAAU,UAArB,8BACArB,EAAAC,EAAAC,cAAC6R,GAAA9R,EAAD,KACED,EAAAC,EAAAC,cAACqR,GAAAtR,EAAD,CACEuR,QACExR,EAAAC,EAAAC,cAACgS,GAAAjS,EAAD,CAAUoN,QAASxN,EAAMJ,MAAO6J,SAAU1B,EAAa,SAAUG,MAAM,UAEzEqB,MAAM,WAGVpJ,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,KAAiBJ,EAAMkQ,kBAKjC,KAAK,EACH,OACE/P,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,KACED,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,6BAC3BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAyBN,EAAMR,OAA/C,IAAwDQ,EAAMP,KAA9D,IAAqEO,EAAMN,SAC3ES,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBN,EAAMJ,MAAQ,QAAU,cAE3DO,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,6BAC1BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,SAEFH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,6BAC1BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAyBN,EAAMoO,OAEjDjO,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,sCAC7BH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,6BAC1BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,eAEFH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,6BAC1BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAyBN,EAAMyI,WAEjDtI,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,sCAC7BH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,6BAC1BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,UAEFH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,6BAC1BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAyBN,EAAMqO,MAA/C,IAAuDrO,EAAMsO,cAE/DnO,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,8BAC5BH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,4BAA4B6M,MAAO,CAAEmF,QAAS,qBACxEnS,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAyBN,EAAMuO,WAA/C,IAA4DvO,EAAMwO,OAEpErO,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,sCAC7BH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,6BAC1BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,gBAEFH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,EAAGxF,UAAU,6BAC1BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAyBN,EAAMyO,kBAKzD,QACE,MAAO,oBAumBesF,CAAe9F,EAAYtP,KAAKqB,MAAOrB,KAAKoJ,kBAK5D5H,EAAAC,EAAAC,cAAC2T,GAAA5T,EAAD,KACED,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKS,aAAtB,aAGgB,IAAf6O,EACC9N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE2K,SAAyB,IAAfkD,EACVjN,QAASrC,KAAKqQ,YAFhB,UAOA,KACY,IAAff,EACC9N,EAAAC,EAAAC,cAACE,EAAA,SAAD,CACE8J,SAAU2B,GACVzB,YAAa,SAAC1J,GACZ4E,QAAQC,IAAR,mBAAAkF,OAA+B/J,IAC/B0R,EAAKnT,cACLmT,EAAKhU,MAAM0V,mBAAmB,qBAEhCtJ,QAAS,SAACiE,GACRnJ,QAAQC,IAAR,iBAAAkF,OAA6BgE,EAAIsF,YAGlC,SAACA,EAADrN,KAAYhG,KAAZ,OACCV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACRzH,MAAM,UACNrC,QAAS,SAAAgK,GACPA,EAAEC,iBACFiJ,EAAQ,CACNxN,UAAW,CACTjH,KAAM8S,EAAKvS,MAAMP,KACjBC,QAAS6S,EAAKvS,MAAMN,QACpB0O,KAAMmE,EAAKvS,MAAMoO,KACjB3F,SAAU8J,EAAKvS,MAAMyI,SACrBjJ,OAAQ+S,EAAKvS,MAAMR,OACnB6O,MAAOkE,EAAKvS,MAAMqO,MAClBG,KAAM+D,EAAKvS,MAAMwO,KACjBD,WAAYgE,EAAKvS,MAAMuO,WACvBD,YAAaiE,EAAKvS,MAAMsO,YACxBG,cAAe8D,EAAKvS,MAAMyO,cAC1B7O,MAAO2S,EAAKvS,MAAMJ,WAjB1B,cA2BJO,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQ0K,QAAQ,YAAYzH,MAAM,UAAUrC,QAASrC,KAAKqP,YAA1D,eASV7N,EAAAC,EAAAC,cAAC+S,GAAAhT,EAAD,CACEH,KAAMtB,KAAKqB,MAAM2M,eACjBxL,QAASxC,KAAKS,YACdiU,sBAAoB,EACpBC,sBAAoB,GAGpBnT,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAab,GAAG,qBAAhB,uBACAY,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOA,IACvB/G,EAAAC,EAAAC,cAACmT,GAAApT,EAAD,CACEE,UAAU,uBAEVH,EAAAC,EAAAC,cAACoT,GAAArT,EAAD,CAAS6N,WAAYA,EAAYyF,kBAAgB,GAC9ClB,EAAMpO,IAAI,SAAAmF,GACT,OACEpJ,EAAAC,EAAAC,cAACsT,GAAAvT,EAAD,CAAMwT,IAAKrK,GACTpJ,EAAAC,EAAAC,cAACwT,GAAAzT,EAAD,KAAYmJ,OAKpBpJ,EAAAC,EAAAC,cAAA,WACG1B,KAAKqB,MAAMiO,aAAeuE,EAAM7D,OAC/BxO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKmV,aAAtB,UAGA3T,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAAM1B,KAAKwV,mBAAmBlG,EAAYtP,KAAKqB,MAAOrB,KAAKoJ,kBAKrE5H,EAAAC,EAAAC,cAAC2T,GAAA5T,EAAD,CAAeE,UAAU,mBACvBH,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOoF,IACvBnM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACG,IAAf2N,EACC9N,EAAAC,EAAAC,cAACE,EAAA,SAAD,CACE8J,SAAU+B,GACV7B,YAAa,SAAC1J,GACZ4E,QAAQC,IAAR,sBAAAkF,OAAkC/J,EAAKuT,aACvC7B,EAAKnT,cAELmT,EAAKhU,MAAM0V,mBAAmB,wBAEhCtJ,QAAS,SAACiE,GACRnJ,QAAQC,IAAR,oBAAAkF,OAAgCgE,IAChC2D,EAAKhU,MAAM0V,mBAAmB,uBAG/B,SAACG,GAAD,OACCjU,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACRzH,MAAM,UACNrC,QAAS,SAAAgK,GACPA,EAAEC,iBAEF,IAAIoJ,EAAO,CACT9U,GAAIgT,EAAKvS,MAAM0M,QAGjBjH,QAAQC,IAAI2O,GAEZD,EAAW,CAAE1N,UAAW2N,MAZ5B,YAqBF,OAGRlU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKS,aAAtB,cAIc,IAAf6O,EACC9N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE2K,SAAyB,IAAfkD,EACVjN,QAASrC,KAAKqQ,YAFhB,UAOA,KACY,IAAff,EACC9N,EAAAC,EAAAC,cAACE,EAAA,SAAD,CACE8J,SAAU6B,GACV3B,YAAa,SAAC1J,GACZ4E,QAAQC,IAAR,mBAAAkF,OAA+B/J,IAC/B0R,EAAKnT,cAELmT,EAAKhU,MAAM0V,mBAAmB,sBAEhCtJ,QAAS,SAACiE,GACRnJ,QAAQC,IAAR,iBAAAkF,OAA6BgE,IAC7B2D,EAAKhU,MAAM0V,mBAAmB,qBAG/B,SAACK,GAAD,OACCnU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACRzH,MAAM,UACNrC,QAAS,SAAAgK,GACPA,EAAEC,iBAEF,IAAIvE,EAAY,CACdnH,GAAIgT,EAAKvS,MAAM0M,OACfjN,KAAM8S,EAAKvS,MAAMP,KACjBC,QAAS6S,EAAKvS,MAAMN,QACpBF,OAAQ+S,EAAKvS,MAAMR,OACnB4O,KAAMmE,EAAKvS,MAAMoO,KACjBC,MAAOkE,EAAKvS,MAAMqO,MAClBC,YAAaiE,EAAKvS,MAAMsO,YACxBC,WAAYgE,EAAKvS,MAAMuO,WACvBC,KAAM+D,EAAKvS,MAAMwO,KACjBC,cAAe8D,EAAKvS,MAAMyO,cAC1B7O,MAAO2S,EAAKvS,MAAMJ,OAGpB6F,QAAQC,IAAIgB,GAEZ4N,EAAU,CAAE5N,UAAWA,MAtB3B,cA+BJvG,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQ0K,QAAQ,YAAYzH,MAAM,UAAUrC,QAASrC,KAAKqP,YAA1D,uBAxvBE3M,koGC7XpB,IAAMkT,GAAkBnW,IAAHoW,MAyBfC,GAAYrW,IAAHsW,MAmBTC,GAAWvW,IAAHwW,MASRC,GAAezW,IAAH0W,MAsCZC,GAAgB3W,IAAH4W,MAwCbC,GAAkB7W,IAAH8W,MAMfhO,GAAQ,IAAIC,iBAAe,CAC/BC,QAAS,CACPpF,QAAS,CACPqF,KAAM,WAER7D,KAAM,QAER+D,WAAY,CACVC,iBAAiB,KAIf8E,GAAoB,IAAInF,iBAAe,CAC3CC,QAAS,CACPpF,QAAS,CACPqF,KAAM,WAER7D,KAAM,QAER+D,WAAY,CACVC,iBAAiB,SAmoCN2N,eA75Bb,SAAAA,EAAY5W,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwW,IACjB3W,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0W,GAAArW,KAAAH,KAAMJ,KA8TRwJ,aAAe,SAAAtI,GAAI,OAAI,SAAAT,GAAS,IAAAoW,EAC9B5W,EAAKS,UAALmW,EAAA,GAAA3W,OAAAuJ,GAAA,EAAAvJ,CAAA2W,EACG3V,EAAOT,EAAMiJ,OAAOC,OADvBzJ,OAAAuJ,GAAA,EAAAvJ,CAAA2W,EAAA,gBAEgB,GAFhBA,IAKa,gBAAT3V,IACGT,EAAMiJ,OAAOC,MAIPlJ,EAAMiJ,OAAOC,OAAQ,IAAImN,MAAOC,eACzC7P,QAAQC,IAAR,iBACAlH,EAAKS,SAAS,CACZsW,MAAO,EACPC,kBAAkB,EAClBC,oBAAmB,oCAAA7K,QAAsC,IAAIyK,MAAOC,cAAjD,YAGrB9W,EAAKS,SAAS,CACZsW,MAAqC,KAA7B,IAAOvW,EAAMiJ,OAAOC,OAC5BsN,kBAAkB,EAClBC,oBAAqB,KAdvBjX,EAAKS,SAAS,CACZsW,MAAO,OAxUI/W,EA4VnBkX,qBAAuB,WACrBlX,EAAKS,SAAS,CACZ0W,mBAAmB,EACnBpW,GAAIoO,KAAKC,MAAuB,KAAhBD,KAAKE,SAA6B,GAAGC,cA/VtCtP,EAmWnBoX,sBAAwB,SAACC,GACvBrX,EAAKS,SAAS,CACZ4W,WAAYA,EAAW/H,WACvBgI,oBAAoB,EACpBlJ,WAAW,EACXrN,GAAIoO,KAAKC,MAAuB,KAAhBD,KAAKE,SAA6B,GAAGC,cAxWtCtP,EA4WnBqO,SAAW,SAAA1G,GAAA,IAAG9B,EAAH8B,EAAG9B,IAAQyI,EAAXrO,OAAAsO,EAAA,EAAAtO,CAAA0H,EAAA,gBACThG,EAAAC,EAAAC,cAAC2M,GAAA,EAAMC,IAAPxO,OAAAyO,OAAA,GACMJ,EADN,CAGE9L,QAAS,kBAAMxC,EAAKoX,sBAAsBvR,EAAI9E,KAC9C4N,MAAO,CACLC,OAAQ,eAlXK5O,EAuXnBuX,0BAA4B,WAC1BvX,EAAKS,SAAS,CACZ+W,qBAAqB,KAzXNxX,EA6XnByX,sBAAwB,SAAA3P,GAAA,IAAGjC,EAAHiC,EAAGjC,IAAQyI,EAAXrO,OAAAsO,EAAA,EAAAtO,CAAA6H,EAAA,gBACtBnG,EAAAC,EAAAC,cAAC2M,GAAA,EAAMC,IAAPxO,OAAAyO,OAAA,GACMJ,EADN,CAGE9L,QAAS,WACPyE,QAAQC,IAAIrB,GACZ7F,EAAK0X,oBAAoB7R,IAE3B8I,MAAO,CACLC,OAAQ,eAtYK5O,EA2YnB2X,+BAAiC,WAC/B3X,EAAKS,SAAS,CACZ+W,qBAAqB,KA7YNxX,EAiZnB0X,oBAAsB,SAAC7R,GACrB7F,EAAKS,SAAS,CACZmX,eAAgB/R,EAAI5E,KACpB4W,iBAAkBhS,EAAI9E,GACtByW,qBAAqB,KArZNxX,EA0ZnBY,YAAc,WACZZ,EAAKS,SAAS,CACZ0W,mBAAmB,EACnBG,oBAAoB,EACpBvW,GAAI,EACJ+W,UAAW,EACXtT,MAAO,GACPuT,YAAY,EACZC,cAAe,GACfC,YAAa,GACbjB,kBAAkB,EAClBC,oBAAqB,GACrBiB,OAAQ,GACRC,aAAa,EACbC,eAAgB,GAChBC,YAAa,GACbC,kBAAkB,EAClBC,oBAAqB,GACrBC,eAAgB,GAChBC,qBAAqB,EACrBC,uBAAwB,GACxBhO,IAAK,GACLiO,UAAU,EACVC,YAAa,GACbC,WAAW,EACXC,OAAQ,GACRC,aAAa,EACbC,eAAgB,GAChBC,cAAc,EACdC,gCAAiC,GACjCC,sCAAsC,EACtCC,wCAAyC,GACzCxV,MAAO,EACPC,OAAQ,EACRwV,aAAc,EACdC,cAAe,EACf1B,eAAgB,GAChB2B,qBAAqB,EACrBC,uBAAwB,GACxBzC,MAAO,EACPtH,WAAY,EACZgK,aAAa,KAncEzZ,EAycnBwP,WAAa,WACX,GAA8B,IAA1BxP,EAAKwB,MAAMiO,WAAkB,CAC/B,IAAIC,GAAO,EACPC,EAAQ,CAAC,CAAC,QAAS3P,EAAKwB,MAAMgD,OAClC,CAAC,cAAexE,EAAKwB,MAAMyW,aAC3B,CAAC,SAAUjY,EAAKwB,MAAM0W,QACtB,CAAC,cAAelY,EAAKwB,MAAM6W,aAC3B,CAAC,iBAAkBrY,EAAKwB,MAAMgX,gBAC9B,CAAC,MAAOxY,EAAKwB,MAAMkJ,KACnB,CAAC,SAAU1K,EAAKwB,MAAMsX,QACtB,CAAC,kCAAmC9Y,EAAKwB,MAAM0X,kCAE/CjS,QAAQC,IAAIyI,GAEZ,IAAK,IAAIO,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAEhC,GADAjJ,QAAQC,IAAR,SAAAkF,OAAqBuD,EAAMO,GAAG,GAA9B,cAAA9D,OAA6CuD,EAAMO,GAAG,KACjDP,EAAMO,GAAG,IAYP,WACL,IAAIE,EAAMT,EAAMO,GAAG,GAAK,QACpBG,EAASD,EAAM,MACnBpQ,EAAKS,SAAS,SAAAe,GAAK,IAAA6G,EAAA,OAAAA,EAAA,GAAApI,OAAAuJ,GAAA,EAAAvJ,CAAAoI,EAChB+H,GAAM,GADUnQ,OAAAuJ,GAAA,EAAAvJ,CAAAoI,EAEhBgI,EAAS,IAFOhI,IAHd,OAZW,KAAAqR,EAAA,WAGhB,GAFAhK,GAAO,EACPzI,QAAQ7E,MAAR,SAAAgK,OAAuBuD,EAAMO,GAAG,GAAhC,cACIP,EAAM,GAAG,IAAK,IAAIkH,MAAOC,cAC3B,OAAA6C,OAAA,GAEF,IAAIvJ,EAAMT,EAAMO,GAAG,GAAK,QACpBG,EAASD,EAAM,MACnBpQ,EAAKS,SAAS,SAAAe,GAAK,IAAAwG,EAAA,OAAAA,EAAA,GAAA/H,OAAAuJ,GAAA,EAAAvJ,CAAA+H,EAChBoI,GAAM,GADUnQ,OAAAuJ,GAAA,EAAAvJ,CAAA+H,EAEhBqI,EAAS,yBAFOrI,IARH,wBAAA0R,EAAA,OAAAA,EAAAC,EAsBhBjK,GACF1P,EAAKS,SAAS,SAAAe,GAAK,MAAK,CAAEiO,WAAYjO,EAAMiO,WAAa,OAhf5CzP,EAsfnBwQ,WAAa,WACXxQ,EAAKS,SAAS,SAAAe,GAAK,MAAK,CAAEiO,WAAYjO,EAAMiO,WAAa,MAvfxCzP,EA0fnB4Z,WAAa,SAACC,EAAGC,GACf9Z,EAAKS,SAAS,SAAAe,GAAK,MAAK,CAAEoC,MAAOiW,KACjC7Z,EAAKS,SAAS,SAAAe,GAAK,MAAK,CAAEqC,OAAQiW,MA1flC9Z,EAAKwB,MAAQ,CACXiO,WAAY,EACZ0H,mBAAmB,EACnBK,qBAAqB,EACrBzW,GAAI,EACJ+W,UAAW,EACXtT,MAAO,GACPuT,YAAY,EACZC,cAAe,GACfC,YAAa,GACbjB,kBAAkB,EAClBC,oBAAqB,GACrBiB,OAAQ,GACRC,aAAa,EACbC,eAAgB,GAChBC,YAAa,GACbC,kBAAkB,EAClBC,oBAAqB,GACrBC,eAAgB,GAChBC,qBAAqB,EACrBC,uBAAwB,GACxBvQ,OAAQ,EACRuC,IAAK,GACLiO,UAAU,EACVC,YAAa,GACbC,WAAW,EACXC,OAAQ,GACRC,aAAa,EACbC,eAAgB,GAChBC,cAAc,EACdC,gCAAiC,GACjCC,sCAAsC,EACtCC,wCAAyC,GACzCxV,MAAO,EACPC,OAAQ,EACRwV,aAAc,EACdC,cAAe,EACf1B,eAAgB,GAChBC,iBAAkB,EAClBd,MAAO,EACPgD,QAAQ,EACR1C,WAAY,GACZC,oBAAoB,EACpBrS,cAAe,EACfwU,aAAa,EACb7H,KAAM,GACNC,WAAY,EACZC,SAAU,GACVC,YAAa,EACbC,UAAW,CAAC,GAAI,GAAI,GAAI,IACxBC,QAAS,CAAC,CAAEC,WAAY,KAAMC,UAAW,QACzCC,sBAAuB,CACrB,CAAEF,WAAY,KAAMtO,MAAO,KAE7ByO,kBAAmB,CAAC,IACpBjK,KAAM,EACN2G,YAAa,GACbX,WAAW,EACX4L,cAAc,GAGhBha,EAAKsS,kBAAoBtS,EAAKsS,kBAAkBC,KAAvBtS,OAAAuS,GAAA,EAAAvS,QAAAuS,GAAA,EAAAvS,CAAAD,KACzBA,EAAKyS,eAAiB,SAAAX,GAAQ,OAAI9R,EAAKS,SAAS,CAAEqR,cAClD9R,EAAK0S,cAAgB,SAAAT,GAAO,OAAIjS,EAAKS,SAAS,CAAEwR,aAChDjS,EAAK2S,wBAA0B,SAACN,GAAwBrS,EAAKS,SAAS,CAAE4R,uBAlEvDrS,6EAsEQ,MAArBG,KAAKqB,MAAMuY,QACb5Z,KAAKM,SAAS,CACZsZ,QAAQ,IAGZ9S,QAAQC,IAAI/G,KAAKqB,MAAM8X,0DAGN1G,EAAWpR,EAAO+H,GAAc,IAAApE,EAAAhF,KACjD,OAAQyS,GACN,KAAK,EACH,OACEjR,EAAAC,EAAAC,cAACE,EAAA,MAAD,CACEC,MAAO+T,GACP7N,UAAW,CAAEnH,GAAIS,EAAM6V,YACvBtL,YAAa,SAAC1J,IACiB,IAAzB8C,EAAK3D,MAAM4M,WACbjJ,EAAK1E,SAAS,CACZM,GAAIsB,EAAK4X,aAAa,GAAGlZ,GACzB+W,UAAWzV,EAAK4X,aAAa,GAAGnC,UAChCtT,MAAOnC,EAAK4X,aAAa,GAAGzV,MAC5ByT,YAAa5V,EAAK4X,aAAa,GAAGC,YAClChC,OAAQ7V,EAAK4X,aAAa,GAAG/B,OAC7BG,YAAahW,EAAK4X,aAAa,GAAG5B,YAClCG,eAAgBnW,EAAK4X,aAAa,GAAGE,eACrChS,OAAQ9F,EAAK4X,aAAa,GAAGpS,kBAC7B6C,IAAKrI,EAAK4X,aAAa,GAAGvP,IAC1BoO,OAAQzW,EAAK4X,aAAa,GAAGnB,OAC7BI,gCAAiC7W,EAAK4X,aAAa,GAAGG,gCACtDf,aAAchX,EAAK4X,aAAa,GAAGrW,MACnC0V,cAAejX,EAAK4X,aAAa,GAAGpW,OACpC+T,eAAgBvV,EAAK4X,aAAa,GAAGvS,eACrCqP,MAAO1U,EAAK4X,aAAa,GAAGlD,MAC5BgD,OAAQ1X,EAAK4X,aAAa,GAAGF,OAC7B9U,cAAe5C,EAAK4X,aAAa,GAAGhV,cACpCmJ,WAAW,MAKhB,SAAA5F,GAAwB,IAArBrG,EAAqBqG,EAArBrG,QAASC,EAAYoG,EAAZpG,MACX,OAAID,EAAgBR,EAAAC,EAAAC,cAAA,uBAChBO,EAAcT,EAAAC,EAAAC,cAAA,kBAEhBF,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,GACpB1R,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,WACAD,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAO2K,UAAU,EAAM7C,MAAOlI,EAAM6V,WAAYpM,SAAU1B,EAAa,aAG3E5H,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CACEyF,MAAI,EACJC,GAAI,GACJ0L,GAAI,EACJrE,MAAO,CACL0L,QAAS,OACTC,SAAU,gBACVC,eAAgB,UAElB/X,QAAS2C,EAAKoS,2BAEd5V,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQ0K,QAAQ,WAAW+G,WAAS,GACjC7R,EAAMoW,eAAezH,OAAS,EAAI3O,EAAMoW,eAAiB,sBAG9DjW,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,GACpB1R,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,aAApB,SACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAO8H,MAAOlI,EAAMgD,MAAOyG,SAAU1B,EAAa,WAClD5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,KAAiBJ,EAAMwW,iBAG3BrW,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMwV,kBAClCrV,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,oBAApB,qBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,mBAAmBiE,KAAK,SAAS0E,MAAOlI,EAAMyW,YAAahN,SAAU1B,EAAa,iBAC5F5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,+BAA+BS,EAAMyV,uBAG5DtV,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM2W,aAClCxW,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,eAApB,kBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,cAAciE,KAAK,SAAS0E,MAAOlI,EAAM0W,OAAQjN,SAAU1B,EAAa,YAClF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,0BAA0BS,EAAM4W,kBAGvDzW,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,IACb3F,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM8W,kBAClC3W,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,mBAApB,gBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,kBAAkByZ,WAAS,EAAC9Q,MAAOlI,EAAM6W,YAAapN,SAAU1B,EAAa,iBACvF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,8BAA8BS,EAAM+W,uBAG3D5W,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMiX,qBAClC9W,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,uBAApB,0BACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,sBAAsB2I,MAAOlI,EAAMgX,eAAgBvN,SAAU1B,EAAa,oBACpF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,kCAAkCS,EAAMkX,0BAG/D/W,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,GACpB1R,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,cAApB,4BACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,aAAawL,UAAU,EAAM7C,MAAOlI,EAAM2G,SACpDxG,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,4BAGvBY,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM2X,sCAClCxX,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,yBAApB,qBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,wBAAwB2I,MAAOlI,EAAM0X,gCAAiCjO,SAAU1B,EAAa,qCACvG5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,oCAAoCS,EAAM4X,2CAGjEzX,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,GACpB1R,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,aAApB,yBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,YAAYwL,UAAU,EAAM7C,MAAOlI,EAAMuV,QACnDpV,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,2BAIvBY,EAAAC,EAAAC,cAAC+S,GAAAhT,EAAD,CACEH,KAAM0D,EAAK3D,MAAMgW,oBACjB7U,QAASwC,EAAKwS,+BACd9C,sBAAoB,EACpBC,sBAAoB,GAGpBnT,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAab,GAAG,qBAAhB,qBACAY,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOA,IACvB/G,EAAAC,EAAAC,cAACmT,GAAApT,EAAD,KACED,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOC,MAAOmU,IACX,SAAAsE,GAA8B,IAA3BtY,EAA2BsY,EAA3BtY,QAASC,EAAkBqY,EAAlBrY,MAAOC,EAAWoY,EAAXpY,KAClB,GAAIF,EAAS,MAAO,aACpB,GAAIC,EAAO,gBAAAgK,OAAiBhK,EAAM+K,SASlC,IAPA,IAKIyE,EAAO,GAEF1B,EAAI,EAAGA,EAAI7N,EAAKqY,YAAYvK,OAAQD,IAC3C0B,EAAKtH,KACH,CAAEvJ,GAAIsB,EAAKqY,YAAYxK,GAAGnP,GAAIE,KAAMoB,EAAKqY,YAAYxK,GAAGjP,OAG5D,OACEU,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACEoD,KAAMA,EACNuC,QAfU,CACZ,CAAElT,KAAM,KAAMuD,MAAO,MACrB,CAAEvD,KAAM,OAAQuD,MAAO,UAerB7C,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CAAauG,aAAa,KAC1BhZ,EAAAC,EAAAC,cAACuS,GAAA,EAAD,MACAzS,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CAAOgG,aAAcrP,EAAKsS,wBAC1B9V,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,MACA7M,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,MACA7M,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,UAMV7M,EAAAC,EAAAC,cAAC2T,GAAA5T,EAAD,KACED,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,WACR+G,WAAS,EACT7Q,QAAS,WACP2C,EAAKwS,mCAJT,mBAiBlB,KAAK,EACH,OACEhW,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,KACED,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,uCAClCH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,iCAC3BH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMgD,QAEf7C,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,iCAC3BH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMoW,iBAEfjW,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,iCAC3BH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CACEiZ,SAAUrZ,EAAMuV,MAChB+D,OAAO,UACPC,QAAQ,IACRC,MAAM,SAKdrZ,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,iCAC3BH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM6W,cAEf1W,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMyW,cAEftW,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM0W,SAEfvW,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMgX,iBAEf7W,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM0X,kCAEfvX,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM2G,WAKvB,QACE,MAAO,+DAIK4J,GAChB5R,KAAKM,SAAS,CACZ0B,SAAS,EACT4P,qDAsMF5R,KAAKM,SAAS,CACZM,GAAI,EACJyD,MAAO,GACPuT,YAAY,EACZC,cAAe,GACfC,YAAa,GACbjB,kBAAkB,EAClBC,oBAAqB,GACrBiB,OAAQ,GACRC,aAAa,EACbC,eAAgB,GAChBC,YAAa,GACbC,kBAAkB,EAClBC,oBAAqB,GACrBC,eAAgB,GAChBC,qBAAqB,EACrBC,uBAAwB,GACxBhO,IAAK,GACLiO,UAAU,EACVC,YAAa,GACbC,WAAW,EACXC,OAAQ,GACRC,aAAa,EACbC,eAAgB,GAChBC,cAAc,EACdC,gCAAiC,GACjCC,sCAAsC,EACtCC,wCAAyC,GACzCxV,MAAO,EACPC,OAAQ,EACRwV,aAAc,EACdC,cAAe,EACf1B,eAAgB,GAChB2B,qBAAqB,EACrBC,uBAAwB,GACxBzC,MAAO,EACPtH,WAAY,EACZgK,aAAa,EACbO,cAAc,IAEhB/S,QAAQC,IAAI,uDAGDmQ,EAAY4D,GACvB,MAAc,YAAVA,EAEAA,EAIA,2CAKG,IAAApI,EAAA1S,KACD6T,EAzxBD,CAAC,oBAAqB,qBA0xBnBvE,EAAetP,KAAKqB,MAApBiO,WAFDwE,EAKH9T,KAAKqB,MADPsQ,EAJKmC,EAILnC,SAAUC,EAJLkC,EAIKlC,YAAaC,EAJlBiC,EAIkBjC,UAAWC,EAJ7BgC,EAI6BhC,QAASG,EAJtC6B,EAIsC7B,sBAAuBC,EAJ7D4B,EAI6D5B,kBAGpE,OACE1Q,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACR9J,QAASrC,KAAK+W,sBAFhB,yBAUFvV,EAAAC,EAAAC,cAACE,EAAA,MAAD,CACEC,MAAOiU,GACP/N,UAAW,CACTE,KAAM2J,EACN5J,OAAQ2J,GAEV7P,aAAc,KAEb,SAAAiZ,GAA8B,IAA3B/Y,EAA2B+Y,EAA3B/Y,QAASC,EAAkB8Y,EAAlB9Y,MAAOC,EAAW6Y,EAAX7Y,KAClB,GAAIF,EAAS,OAAOR,EAAAC,EAAAC,cAAA,0BACpB,GAAIO,EAAO,OAAOT,EAAAC,EAAAC,cAAA,qBAgBlB,IAdA,IAYI+P,EAAO,GAEF1B,EAAI,EAAGA,EAAI7N,EAAK8Y,4BAA4BC,WAAWjL,OAAQD,IACtE0B,EAAKtH,KACH,CACEvJ,GAAIsB,EAAK8Y,4BAA4BC,WAAWlL,GAAG4H,UACnDtT,MAAOnC,EAAK8Y,4BAA4BC,WAAWlL,GAAG1L,MACtDkD,eAAgBrF,EAAK8Y,4BAA4BC,WAAWlL,GAAGxI,eAC/DqP,MAAO1U,EAAK8Y,4BAA4BC,WAAWlL,GAAG6G,MACtDmD,YAAa7X,EAAK8Y,4BAA4BC,WAAWlL,GAAGgK,YAC5DhC,OAAQ7V,EAAK8Y,4BAA4BC,WAAWlL,GAAGgI,OACvDiC,eAAgB9X,EAAK8Y,4BAA4BC,WAAWlL,GAAGiK,eAC/DtS,kBAAmBxF,EAAK8Y,4BAA4BC,WAAWlL,GAAGrI,kBAClEuS,gCAAiC/X,EAAK8Y,4BAA4BC,WAAWlL,GAAGkK,kCAItF,OACEzY,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,KACED,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACEoD,KAAMA,EACNuC,QAjCQ,CACZ,CAAElT,KAAM,KAAMuD,MAAO,MACrB,CAAEvD,KAAM,QAASuD,MAAO,SACxB,CAAEvD,KAAM,iBAAkBuD,MAAO,YACjC,CAAEvD,KAAM,QAASuD,MAAO,SACxB,CAAEvD,KAAM,cAAeuD,MAAO,qBAC9B,CAAEvD,KAAM,SAAUuD,MAAO,oBACzB,CAAEvD,KAAM,iBAAkBuD,MAAO,aACjC,CAAEvD,KAAM,oBAAqBuD,MAAO,YACpC,CAAEvD,KAAM,kCAAmCuD,MAAO,wBA0B9C7C,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CACErC,YAAaA,EACbsC,oBAAqBxB,EAAKP,kBAC1BR,SAAUA,EACVwC,iBAAkBzB,EAAKJ,iBAEzB9Q,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CACEvC,WAAYxP,EAAK8Y,4BAA4B5S,QAE/C5G,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CACEnC,QAASA,EACTsC,gBAAiB1B,EAAKH,gBAExB/Q,EAAAC,EAAAC,cAACuS,GAAA,EAAD,MACAzS,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACEgG,aAAc3B,EAAKxE,SACnBoG,iBAAkBrC,IAEpBzQ,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CAAgBkG,qBAAmB,IACnC/S,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACE6D,kBAAmBA,EACnBsC,0BAA2B9B,EAAKF,0BAElChR,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,MACA7M,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,MACA7M,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACEwD,UAAWA,QASvBrQ,EAAAC,EAAAC,cAAC+S,GAAAhT,EAAD,CACEH,KAAMtB,KAAKqB,MAAM2V,kBACjBxU,QAASxC,KAAKS,YACdiU,sBAAoB,EACpBC,sBAAoB,GAGpBnT,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAab,GAAG,qBAAhB,wBACAY,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOA,IACvB/G,EAAAC,EAAAC,cAACmT,GAAApT,EAAD,CACEE,UAAU,uBAEVH,EAAAC,EAAAC,cAACoT,GAAArT,EAAD,CAAS6N,WAAYA,EAAYyF,kBAAgB,GAC9ClB,EAAMpO,IAAI,SAAAmF,GACT,OACEpJ,EAAAC,EAAAC,cAACsT,GAAAvT,EAAD,CAAMwT,IAAKrK,GACTpJ,EAAAC,EAAAC,cAACwT,GAAAzT,EAAD,KAAYmJ,OAKpBpJ,EAAAC,EAAAC,cAAA,WACG1B,KAAKqB,MAAMiO,aAAeuE,EAAM7D,OAC/BxO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKmV,aAAtB,UAGA3T,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAr5BtB,SAAwB+Q,EAAWpR,EAAO+H,EAAcqQ,EAAYrC,EAA2BI,EAAgCF,GAC7H,OAAQ7E,GACN,KAAK,EACH,OACEjR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMuW,YAClCpW,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,aAApB,SACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,YAAY2I,MAAOlI,EAAMgD,MAAOyG,SAAU1B,EAAa,WACjE5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,wBAAwBS,EAAMwW,iBAGrDrW,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CACEyF,MAAI,EACJC,GAAI,GACJ0L,GAAI,EACJrE,MAAO,CACL0L,QAAS,OACTC,SAAU,gBACVC,eAAgB,UAElB/X,QAAS+U,GAET5V,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQ0K,QAAQ,WAAW+G,WAAS,GACjC7R,EAAMoW,eAAezH,OAAS,EAAI3O,EAAMoW,eAAiB,sBAG9DjW,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMwV,kBAClCrV,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,oBAApB,qBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,mBAAmBiE,KAAK,SAAS0E,MAAOlI,EAAMyW,YAAahN,SAAU1B,EAAa,iBAC5F5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,+BAA+BS,EAAMyV,uBAG5DtV,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM2W,aAClCxW,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,eAApB,kBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,cAAciE,KAAK,SAAS0E,MAAOlI,EAAM6Z,QAASpQ,SAAU1B,EAAa,YACnF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,0BAA0BS,EAAM4W,kBAGvDzW,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,IACb3F,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM8W,kBAClC3W,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,mBAApB,gBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,kBAAkByZ,WAAS,EAAC9Q,MAAOlI,EAAM6W,YAAapN,SAAU1B,EAAa,iBACvF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,8BAA8BS,EAAM+W,uBAG3D5W,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMiX,qBAClC9W,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,uBAApB,0BACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,sBAAsB2I,MAAOlI,EAAMgX,eAAgBvN,SAAU1B,EAAa,oBACpF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,kCAAkCS,EAAMkX,0BAG/D/W,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,GACpB1R,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,cAApB,4BACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,aAAamK,WAAY,CAAEoQ,UAAU,GAAS5R,MAAOlI,EAAM2G,SACrExG,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,4BAGvBY,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMmX,UAClChX,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,WAApB,2BACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,UAAU2I,MAAOlI,EAAMkJ,IAAKO,SAAU1B,EAAa,SAC7D5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,sBAAsBS,EAAMoX,eAGnDjX,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMuX,aAClCpX,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,eAApB,0BACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,cAAc2I,MAAOlI,EAAMsX,OAAQ7N,SAAU1B,EAAa,YACpE5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,0BAA0BS,EAAMwX,kBAGvDrX,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM2X,sCAClCxX,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,yBAApB,qBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,wBAAwB2I,MAAOlI,EAAM0X,gCAAiCjO,SAAU1B,EAAa,qCACvG5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,oCAAoCS,EAAM4X,2CAGjEzX,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,GACpB1R,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,aAApB,0BACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,YAAYmK,WAAY,CAAEoQ,UAAU,GAAS5R,MAAOlI,EAAMuV,QACpEpV,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,2BAGvBY,EAAAC,EAAAC,cAAC+S,GAAAhT,EAAD,CACEH,KAAMD,EAAMgW,oBACZ7U,QAASgV,EACT9C,sBAAoB,EACpBC,sBAAoB,GAGpBnT,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAab,GAAG,qBAAhB,qBACAY,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOA,IACvB/G,EAAAC,EAAAC,cAACmT,GAAApT,EAAD,KACED,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOC,MAAOmU,GAAUlU,aAAc,KACnC,SAAAC,GAA8B,IAA3BC,EAA2BD,EAA3BC,QAASC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,KAClB,GAAIF,EAAS,MAAO,aACpB,GAAIC,EAAO,gBAAAgK,OAAiBhK,EAAM+K,SASlC,IAPA,IAKIyE,EAAO,GAEF1B,EAAI,EAAGA,EAAI7N,EAAKqY,YAAYvK,OAAQD,IAC3C0B,EAAKtH,KACH,CAAEvJ,GAAIsB,EAAKqY,YAAYxK,GAAGnP,GAAIE,KAAMoB,EAAKqY,YAAYxK,GAAGjP,OAG5D,OACEU,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACEoD,KAAMA,EACNuC,QAfU,CACZ,CAAElT,KAAM,KAAMuD,MAAO,MACrB,CAAEvD,KAAM,OAAQuD,MAAO,UAerB7C,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CAAauG,aAAa,KAC1BhZ,EAAAC,EAAAC,cAACuS,GAAA,EAAD,MACAzS,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CAAOgG,aAAciD,IACrB9V,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,MACA7M,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,MACA7M,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,UAMV7M,EAAAC,EAAAC,cAAC2T,GAAA5T,EAAD,KACED,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,WACR+G,WAAS,EACT7Q,QAAS,WACPmV,MAJJ,iBAcZ,KAAK,EACH,OACEhW,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,KACED,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,6CAElCH,EAAAC,EAAAC,cAAC0Z,GAAA3Z,EAAD,CACE4Z,OAAQ,SAAAjU,GAAuB,IAApB3D,EAAoB2D,EAApB3D,MAAOC,EAAa0D,EAAb1D,OAChBoD,QAAQC,IAAR,GAAAkF,OAAexI,EAAf,KAAAwI,OAAwBvI,IACxB+V,EAAWhW,EAAOC,IAEpB6G,IAAKlJ,EAAMsX,OACXlO,IAAI,UACJ9I,UAAU,qCAGdH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,uCAClCH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,iCAC3BH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMgD,QAEf7C,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,iCAC3BH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMoW,iBAEfjW,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,iCAC3BH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CACEiZ,SAAUrZ,EAAMuV,MAChB+D,OAAO,UACPC,QAAQ,IACRC,MAAM,SAKdrZ,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,iCAC3BH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM6W,cAEf1W,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMyW,cAEftW,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM0W,SAEfvW,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMgX,iBAEf7W,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM0X,kCAEfvX,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM2G,WAKvB,QACE,MAAO,oBAgsBeoN,CAAe9F,EAAYtP,KAAKqB,MAAOrB,KAAKoJ,aAAcpJ,KAAKyZ,WAAYzZ,KAAKoX,0BAA2BpX,KAAKwX,+BAAgCxX,KAAKsX,2BAKrK9V,EAAAC,EAAAC,cAAC2T,GAAA5T,EAAD,KACED,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKS,aAAtB,aAGgB,IAAf6O,EACC9N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE2K,SAAyB,IAAfkD,EACVjN,QAASrC,KAAKqQ,YAFhB,UAOA,KACY,IAAff,EACC9N,EAAAC,EAAAC,cAACE,EAAA,SAAD,CACE8J,SAAUwK,GACVtK,YAAa,SAAC1J,GACZ4E,QAAQC,IAAR,mBAAAkF,OAA+B/J,EAAKoZ,aACpC5I,EAAKjS,cACLiS,EAAKtD,aACLsD,EAAK9S,MAAM0V,mBAAmB,yBAEhCtJ,QAAS,SAACiE,GACRnJ,QAAQC,IAAR,iBAAAkF,OAA6BgE,IAC7ByC,EAAK9S,MAAM0V,mBAAmB,wBAG/B,SAACiG,EAADC,KAAgBtZ,KAAhB,OACCV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACRzH,MAAM,UACNrC,QAAS,SAAAgK,GACPA,EAAEC,iBAEF,IAAIoJ,EAAO,CACT9U,GAAI8R,EAAKrR,MAAMT,GACfyD,MAAOqO,EAAKrR,MAAMgD,MAClB0V,YAAa0B,SAAS/I,EAAKrR,MAAMyW,aACjCC,OAAQ0D,SAAS/I,EAAKrR,MAAM0W,QAC5BG,YAAaxF,EAAKrR,MAAM6W,YACxB8B,eAAgBtH,EAAKrR,MAAMgX,eAC3B3Q,kBAAmBgL,EAAKrR,MAAM2G,OAC9BuC,IAAKmI,EAAKrR,MAAMkJ,IAChBoO,OAAQjG,EAAKrR,MAAMsX,OACnB+C,UAAWhJ,EAAKrR,MAAM0X,gCACtBtV,MAAOiP,EAAKrR,MAAMoC,MAClBC,OAAQgP,EAAKrR,MAAMqC,OACnB6D,eAAgBmL,EAAKrR,MAAMoW,eAC3Bb,MAAOlE,EAAKrR,MAAMuV,MAClBgD,OAAQlH,EAAKrR,MAAMuY,OACnB+B,UAAWjJ,EAAKrR,MAAMqW,kBAGxB5Q,QAAQC,IAAI2O,GAEZ6F,EAAY,CAAExT,UAAW2N,MA3B7B,cAmCJlU,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQ0K,QAAQ,YAAYzH,MAAM,UAAUrC,QAASrC,KAAKqP,YAA1D,eASV7N,EAAAC,EAAAC,cAAC+S,GAAAhT,EAAD,CACEH,KAAMtB,KAAKqB,MAAM8V,mBACjB3U,QAASxC,KAAKS,YACdiU,sBAAoB,EACpBC,sBAAoB,GAEpBnT,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAab,GAAG,qBAAhB,wBAGAY,EAAAC,EAAAC,cAACmT,GAAApT,EAAD,CAAeE,UAAU,uBAGvBH,EAAAC,EAAAC,cAACoT,GAAArT,EAAD,CAAS6N,WAAYA,EAAYyF,kBAAgB,GAC9ClB,EAAMpO,IAAI,SAAAmF,GACT,OACEpJ,EAAAC,EAAAC,cAACsT,GAAAvT,EAAD,CAAMwT,IAAKrK,GAAOpJ,EAAAC,EAAAC,cAACwT,GAAAzT,EAAD,KAAYmJ,OAMnC5K,KAAKqB,MAAMiO,aAAeuE,EAAM7D,OAC/BxO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKS,aAAtB,UAGAe,EAAAC,EAAAC,cAAA,WACG1B,KAAKwV,mBAAmBlG,EAAYtP,KAAKqB,MAAOrB,KAAKoJ,gBAK9D5H,EAAAC,EAAAC,cAAC2T,GAAA5T,EAAD,CAAeE,UAAU,mBACvBH,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOoF,IACvBnM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACG,IAAf2N,EACC9N,EAAAC,EAAAC,cAACE,EAAA,SAAD,CACE8J,SAAU4K,GACV1K,YAAa,SAAC1J,GACZ4E,QAAQC,IAAR,sBAAAkF,OAAkC/J,EAAK0Z,gBACvClJ,EAAKjS,cACLiS,EAAK9S,MAAM0V,mBAAmB,4BAEhCtJ,QAAS,SAACiE,GACRnJ,QAAQC,IAAR,oBAAAkF,OAAgCgE,IAChCyC,EAAK9S,MAAM0V,mBAAmB,2BAG/B,SAACuG,GAAD,OACCra,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACRzH,MAAM,UACNrC,QAAS,SAAAgK,GACPA,EAAEC,iBAEF,IAAIoJ,EAAO,CACT9U,GAAI8R,EAAKrR,MAAM6V,YAGjBpQ,QAAQC,IAAI2O,GAEZmG,EAAe,CAAE9T,UAAW2N,MAZhC,YAqBF,OAERlU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAuBH,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKS,aAAtB,cACtB,IAAf6O,EACC9N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQ2K,SAAyB,IAAfkD,EAAkBjN,QAASrC,KAAKqQ,YAAlD,UAIA,KACY,IAAff,EACC9N,EAAAC,EAAAC,cAACE,EAAA,SAAD,CACE8J,SAAU0K,GACVxK,YAAa,SAAC1J,GACZ4E,QAAQC,IAAR,mBAAAkF,OAA+B/J,EAAK4Z,cACpCpJ,EAAKjS,cACLiS,EAAKtD,aACLsD,EAAK9S,MAAM0V,mBAAmB,0BAEhCtJ,QAAS,SAACiE,GACRnJ,QAAQC,IAAR,iBAAAkF,OAA6BgE,IAC7ByC,EAAKjS,cACLiS,EAAKtD,aACLlO,OAAOC,SAASC,SAChBsR,EAAK9S,MAAM0V,mBAAmB,2BAG/B,SAACyG,EAADC,KAAiB9Z,KAAjB,OACCV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACRzH,MAAM,UACNrC,QAAS,SAAAgK,GACPA,EAAEC,iBACFoG,EAAKuJ,cACL,IAAIvG,EAAO,CACT9U,GAAI8R,EAAKrR,MAAMT,GACf+W,UAAWjF,EAAKrR,MAAMsW,UACtBtT,MAAOqO,EAAKrR,MAAMgD,MAClB0V,YAAa0B,SAAS/I,EAAKrR,MAAMyW,aACjCC,OAAQ0D,SAAS/I,EAAKrR,MAAM0W,QAC5BG,YAAaxF,EAAKrR,MAAM6W,YACxB8B,eAAgBtH,EAAKrR,MAAMgX,eAC3B3Q,kBAAmBgL,EAAKrR,MAAM2G,OAC9BuC,IAAKmI,EAAKrR,MAAMkJ,IAChBoO,OAAQjG,EAAKrR,MAAMsX,OACnB+C,UAAWhJ,EAAKrR,MAAM0X,gCACtBtV,MAAOiP,EAAKrR,MAAM6X,aAClBxV,OAAQgP,EAAKrR,MAAM8X,cACnB5R,eAAgBmL,EAAKrR,MAAMoW,eAC3Bb,MAAOlE,EAAKrR,MAAMuV,MAClBgD,QAAQ,EACR9U,cAAe4N,EAAKrR,MAAMyD,eAG5BgC,QAAQC,IAAI2O,GAEZqG,EAAa,CAAEhU,UAAW2N,MA5B9B,cAoCJlU,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQ0K,QAAQ,YAAYzH,MAAM,UAAUrC,QAASrC,KAAKqP,YAA1D,sBAn5BQ3M,qmECvYxB,IAAMsT,GAAWvW,IAAHyc,MAmBRC,GAAsB1c,IAAH2c,MAiBnBC,GAAc5c,IAAH6c,MA2BXC,GAAe9c,IAAH+c,MAyBZC,GAAiBhd,IAAHid,MAMdnU,GAAQ,IAAIC,iBAAe,CAC/BC,QAAS,CACPpF,QAAS,CACPqF,KAAM,WAER7D,KAAM,QAER+D,WAAY,CACVC,iBAAiB,KAIf8E,GAAoB,IAAInF,iBAAe,CAC3CC,QAAS,CACPpF,QAAS,CACPqF,KAAM,WAER7D,KAAM,QAER+D,WAAY,CACVC,iBAAiB,SA+1BN8T,eAntBb,SAAAA,EAAY/c,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2c,IACjB9c,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6c,GAAAxc,KAAAH,KAAMJ,KA2MRsO,SAAW,SAAAnM,GAAA,IAAG2D,EAAH3D,EAAG2D,IAAQyI,EAAXrO,OAAAsO,EAAA,EAAAtO,CAAAiC,EAAA,gBACTP,EAAAC,EAAAC,cAAC2M,GAAA,EAAMC,IAAPxO,OAAAyO,OAAA,GACMJ,EADN,CAGE9L,QAAS,kBAAMxC,EAAKiO,oBAAoBpI,EAAI9E,KAC5C4N,MAAO,CACLC,OAAQ,eAlNK5O,EAuNnB6O,iBAAmB,SAACrO,EAAO4H,GACzBpI,EAAKS,SAAS,CAAE2H,UAxNCpI,EA2NnB8O,wBAA0B,SAAAtO,GACxBR,EAAKS,SAAS,CAAEsO,YAAavO,EAAMiJ,OAAOC,SA5NzB1J,EAgOnBuJ,aAAe,SAAAtI,GAAI,OAAI,SAAAT,GACrBR,EAAKS,SAALR,OAAAuJ,GAAA,EAAAvJ,CAAA,GACGgB,EAAOT,EAAMiJ,OAAOC,QAGV,cAATzI,IACET,EAAMiJ,OAAOC,OAAQ,IAAImN,MAAOC,cAClC9W,EAAKS,SAAS,CACZsc,gBAAgB,EAChBC,kBAAiB,wCAAA5Q,QAA0C,IAAIyK,MAAOC,cAArD,WAGnB9W,EAAKS,SAAS,CACZsc,gBAAgB,EAChBC,kBAAiB,MAKV,cAAT/b,IACET,EAAMiJ,OAAOC,OAAQ,IAAImN,MAAOC,cAClC9W,EAAKS,SAAS,CACZwc,gBAAgB,EAChBC,kBAAiB,0CAAA9Q,QAA4C,IAAIyK,MAAOC,cAAvD,WAGnB9W,EAAKS,SAAS,CACZwc,gBAAgB,EAChBC,kBAAiB,QA5PNld,EAmQnBiP,gBAAkB,WAChBjP,EAAKS,SAAS,CACZ0c,kBAAkB,KArQHnd,EA0QnBiO,oBAAsB,SAAClN,GACrBf,EAAKS,SAAS,CACZ2c,mBAAmB,EACnBC,UAAWtc,EAAGuO,WACdlB,WAAW,KA9QIpO,EAmRnBwP,WAAa,WACX,GAA8B,IAA1BxP,EAAKwB,MAAMiO,WAAkB,CAC/B,IAAIC,GAAO,EACPC,EAAQ,CAAC,CAAC,OAAQ3P,EAAKwB,MAAMP,MACjC,CAAC,OAAQjB,EAAKwB,MAAMwO,MACpB,CAAC,YAAahQ,EAAKwB,MAAM8b,WACzB,CAAC,YAAatd,EAAKwB,MAAM+b,WACzB,CAAC,aAAcvd,EAAKwB,MAAMgc,YAC1B,CAAC,aAAcxd,EAAKwB,MAAMic,YAC1B,CAAC,cAAezd,EAAKwB,MAAMkc,aAC3B,CAAC,cAAe1d,EAAKwB,MAAMmc,aAC3B,CAAC,YAAa3d,EAAKwB,MAAMoc,WACzB,CAAC,cAAe5d,EAAKwB,MAAM6W,cAK3B,GAHApR,QAAQC,IAAIyI,GAGR3P,EAAKwB,MAAM2b,iBACb,IAAK,IAAIjN,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAChCjJ,QAAQC,IAAR,SAAAkF,OAAqBuD,EAAMO,GAAG,GAA9B,cAAA9D,OAA6CuD,EAAMO,GAAG,KACjDP,EAAMO,GAAG,GASP,WACL,IAAIE,EAAMT,EAAMO,GAAG,GAAK,QACpBG,EAASD,EAAM,MACnBpQ,EAAKS,SAAS,SAAAe,GAAK,IAAAmG,EAAA,OAAAA,EAAA,GAAA1H,OAAAuJ,GAAA,EAAAvJ,CAAA0H,EAChByI,GAAM,GADUnQ,OAAAuJ,GAAA,EAAAvJ,CAAA0H,EAEhB0I,EAAS,IAFO1I,IAHd,GATW,WAChB+H,GAAO,EACPzI,QAAQ7E,MAAR,SAAAgK,OAAuBuD,EAAMO,GAAG,GAAhC,cACA,IAAIE,EAAMT,EAAMO,GAAG,GAAK,QACpBG,EAASD,EAAM,MACnBpQ,EAAKS,SAAS,SAAAe,GAAK,IAAA+F,EAAA,OAAAA,EAAA,GAAAtH,OAAAuJ,GAAA,EAAAvJ,CAAAsH,EAChB6I,GAAM,GADUnQ,OAAAuJ,GAAA,EAAAvJ,CAAAsH,EAEhB8I,EAAS,yBAFO9I,IALH,GAqBlBmI,GACF1P,EAAKS,SAAS,SAAAe,GAAK,MAAK,CAAEiO,WAAYjO,EAAMiO,WAAa,OA7T5CzP,EAmUnBY,YAAc,WACZZ,EAAKS,SAAS,CAAE0c,kBAAkB,EAAOC,mBAAmB,EAAOhP,WAAW,IAC9EpO,EAAKuP,cArUYvP,EAiXnBwQ,WAAa,WACXxQ,EAAKS,SAAS,SAAAe,GAAK,MAAK,CAAEiO,WAAYjO,EAAMiO,WAAa,MAhXzDzP,EAAKwB,MAAQ,CACXiO,WAAY,EACZ0N,kBAAkB,EAClBC,mBAAmB,EACnBC,UAAW,GACXQ,gBAAiB,GACjBC,cAAe,GACfC,kBAAmB,GACnB3P,WAAW,EACXnN,KAAM,GACNwP,WAAW,EACXC,cAAc,EACdV,KAAM,GACNqB,WAAW,EACXC,cAAc,EACdgM,UAAW,GACXP,gBAAgB,EAChBC,mBAAmB,EACnBO,UAAW,GACXN,gBAAgB,EAChBC,mBAAmB,EACnBM,WAAY,GACZQ,iBAAiB,EACjBC,oBAAoB,EACpBR,WAAY,GACZS,iBAAiB,EACjBC,oBAAoB,EACpBT,YAAa,GACbU,kBAAkB,EAClBC,qBAAqB,EACrBV,YAAa,GACbW,kBAAkB,EAClBC,qBAAqB,EACrBX,UAAW,GACXY,gBAAgB,EAChBC,mBAAmB,EACnBpG,YAAa,GACbC,kBAAkB,EAClBC,qBAAqB,EACrB3G,KAAM,GACNC,WAAY,EACZC,SAAU,GACVC,YAAa,EACbC,UAAW,CAAC,GAAI,GAAI,GAAI,IACxBC,QAAS,CAAC,CAAEC,WAAY,KAAMC,UAAW,QACzCC,sBAAuB,CACrB,CAAEF,WAAY,KAAMtO,MAAO,KAE7ByO,kBAAmB,CAAC,cAAe,eACnCjK,KAAM,EACN2G,YAAa,IAGf/O,EAAKsS,kBAAoBtS,EAAKsS,kBAAkBC,KAAvBtS,OAAAuS,GAAA,EAAAvS,QAAAuS,GAAA,EAAAvS,CAAAD,KACzBA,EAAKyS,eAAiB,SAAAX,GAAQ,OAAI9R,EAAKS,SAAS,CAAEqR,cAClD9R,EAAK0S,cAAgB,SAAAT,GAAO,OAAIjS,EAAKS,SAAS,CAAEwR,aAChDjS,EAAK2S,wBAA0B,SAACN,GAAwBrS,EAAKS,SAAS,CAAE4R,uBA1DvDrS,kFA6DA4S,EAAWpR,EAAO+H,GAAc,IAAApE,EAAAhF,KACjD,OAAQyS,GACN,KAAK,EACH,OACEjR,EAAAC,EAAAC,cAACE,EAAA,MAAD,CACEC,MAAOsa,GACPpU,UAAW,CAAEnH,GAAIS,EAAM6b,WACvBtR,YAAa,SAAC1J,IACiB,IAAzB8C,EAAK3D,MAAM4M,WACbjJ,EAAK1E,SAAS,CACZQ,KAAMoB,EAAKqc,YAAY,GAAGzd,KAC1Byc,YAAarb,EAAKqc,YAAY,GAAGhB,YACjCJ,UAAWjb,EAAKqc,YAAY,GAAGC,YAC/B3O,KAAM3N,EAAKqc,YAAY,GAAG1O,KAC1BuN,UAAWlb,EAAKqc,YAAY,GAAGE,YAC/BpB,WAAYnb,EAAKqc,YAAY,GAAGG,aAChCxG,YAAahW,EAAKqc,YAAY,GAAGrG,YACjCoF,WAAYpb,EAAKqc,YAAY,GAAGjB,WAChCrP,WAAW,MAKhB,SAAAtG,GAAwB,IAArB3F,EAAqB2F,EAArB3F,QAASC,EAAY0F,EAAZ1F,MACX,OAAID,EAAgBR,EAAAC,EAAAC,cAAA,uBAChBO,EAAcT,EAAAC,EAAAC,cAAA,kBAEhBF,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMiP,WAClC9O,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,YAApB,QACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,WAAW2I,MAAOlI,EAAMP,KAAMgK,SAAU1B,EAAa,UAC/D5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,uBAAuBS,EAAMkP,gBAGpD/O,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM6c,qBAClC1c,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,mBAApB,iBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,kBAAkB2I,MAAOlI,EAAMkc,YAAazS,SAAU1B,EAAa,iBAC7E5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,8BAA8BS,EAAM6c,uBAG3D1c,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMub,gBAClCpb,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,iBAApB,qBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,gBAAgBiE,KAAK,SAAS0E,MAAOlI,EAAM8b,UAAWrS,SAAU1B,EAAa,eACvF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,4BAA4BS,EAAMwb,qBAGzDrb,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM6P,WAClC1P,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,YAApB,qBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,WAAW2I,MAAOlI,EAAMwO,KAAM/E,SAAU1B,EAAa,UAC/D5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,uBAAuBS,EAAM8P,gBAGpD3P,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMyb,gBAClCtb,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,iBAApB,uBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,gBAAgBiE,KAAK,SAAS0E,MAAOlI,EAAM+b,UAAWtS,SAAU1B,EAAa,eACvF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,4BAA4BS,EAAM0b,qBAGzDvb,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMwc,iBAClCrc,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,kBAApB,uBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,iBAAiB2I,MAAOlI,EAAMgc,WAAYvS,SAAU1B,EAAa,gBAC3E5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,6BAA6BS,EAAMyc,sBAG1Dtc,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,IACb3F,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM8W,kBAClC3W,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,mBAApB,gBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,kBAAkByZ,WAAS,EAAC9Q,MAAOlI,EAAM6W,YAAapN,SAAU1B,EAAa,iBACvF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,8BAA8BS,EAAM+W,uBAG3D5W,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM0c,iBAClCvc,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,kBAApB,UACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,iBAAiByZ,WAAS,EAAC9Q,MAAOlI,EAAMic,WAAYxS,SAAU1B,EAAa,gBACrF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,6BAA6BS,EAAM2c,yBAStE,KAAK,EACH,OACExc,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,KACED,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMP,OAEfU,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMkc,cAEf/b,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM8b,YAEf3b,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMwO,OAEfrO,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM+b,YAEf5b,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMgc,aAEf7b,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,iCAC3BH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM6W,cAEf1W,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMic,eAKvB,QACE,MAAO,8DAKK1L,GAChB5R,KAAKM,SAAS,CACZ0B,SAAS,EACT4P,qDAkIF5R,KAAKM,SAAS,CACZgP,WAAY,EACZ0N,kBAAkB,EAClBC,mBAAmB,EACnBC,UAAW,GACXjP,WAAW,EACXnN,KAAM,GACNwP,WAAW,EACXC,cAAc,EACdV,KAAM,GACNqB,WAAW,EACXC,cAAc,EACdgM,UAAW,GACXP,gBAAgB,EAChBC,mBAAmB,EACnBO,UAAW,GACXN,gBAAgB,EAChBC,mBAAmB,EACnBM,WAAY,GACZQ,iBAAiB,EACjBC,oBAAoB,EACpBR,WAAY,GACZS,iBAAiB,EACjBC,oBAAoB,EACpBT,YAAa,GACbU,kBAAkB,EAClBC,qBAAqB,EACrBV,YAAa,GACbW,kBAAkB,EAClBC,qBAAqB,EACrBX,UAAW,GACXY,gBAAgB,EAChBC,mBAAmB,EACnBpG,YAAa,GACbC,kBAAkB,EAClBC,qBAAqB,qCAShB,IAAA1F,EAAA1S,KACD6T,EA7fD,CAAC,oBAAqB,mBA8fnBvE,EAAetP,KAAKqB,MAApBiO,WAFDwE,EAKH9T,KAAKqB,MADPsQ,EAJKmC,EAILnC,SAAUC,EAJLkC,EAIKlC,YAAaC,EAJlBiC,EAIkBjC,UAAWC,EAJ7BgC,EAI6BhC,QAASG,EAJtC6B,EAIsC7B,sBAAuBC,EAJ7D4B,EAI6D5B,kBAGpE,OACE1Q,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACR9J,QAASrC,KAAK8O,iBAFhB,uBAOFtN,EAAAC,EAAAC,cAACE,EAAA,MAAD,CACEC,MAAOmU,GACPjO,UAAW,CACTE,KAAM2J,EACN5J,OAAQ2J,GAEV7P,aAAc,KAEb,SAAA+F,GAA8B,IAA3B7F,EAA2B6F,EAA3B7F,QAASC,EAAkB4F,EAAlB5F,MAAOC,EAAW2F,EAAX3F,KAClB,GAAIF,EAAS,OAAOR,EAAAC,EAAAC,cAAA,0BACpB,GAAIO,EAAO,OAAOT,EAAAC,EAAAC,cAAA,qBAgBlB,IAdA,IAYI+P,EAAO,GAEF1B,EAAI,EAAGA,EAAI7N,EAAKyc,cAAcC,kBAAkB5O,OAAQD,IAC/D0B,EAAKtH,KACH,CACEvJ,GAAIsB,EAAKyc,cAAcC,kBAAkB7O,GAAGnP,GAC5CE,KAAMoB,EAAKyc,cAAcC,kBAAkB7O,GAAGjP,KAC9Cwc,WAAYpb,EAAKyc,cAAcC,kBAAkB7O,GAAGuN,WACpDC,YAAarb,EAAKyc,cAAcC,kBAAkB7O,GAAGwN,YACrDJ,UAAWjb,EAAKyc,cAAcC,kBAAkB7O,GAAGyO,YACnD3O,KAAM3N,EAAKyc,cAAcC,kBAAkB7O,GAAGF,KAC9CuN,UAAWlb,EAAKyc,cAAcC,kBAAkB7O,GAAG0O,YACnDC,aAAcxc,EAAKyc,cAAcC,kBAAkB7O,GAAG2O,aACtDxG,YAAahW,EAAKyc,cAAcC,kBAAkB7O,GAAGmI,cAK3D,OACE1W,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,KACED,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACEoD,KAAMA,EACNuC,QAlCQ,CACZ,CAAElT,KAAM,KAAMuD,MAAO,MACrB,CAAEvD,KAAM,OAAQuD,MAAO,QACvB,CAAEvD,KAAM,aAAcuD,MAAO,UAC7B,CAAEvD,KAAM,cAAeuD,MAAO,iBAC9B,CAAEvD,KAAM,YAAauD,MAAO,sBAC5B,CAAEvD,KAAM,OAAQuD,MAAO,qBACvB,CAAEvD,KAAM,YAAauD,MAAO,wBAC5B,CAAEvD,KAAM,eAAgBuD,MAAO,uBAC/B,CAAEvD,KAAM,cAAeuD,MAAO,kBA2B1B7C,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CACErC,YAAaA,EACbsC,oBAAqBxB,EAAKP,kBAC1BR,SAAUA,EACVwC,iBAAkBzB,EAAKJ,iBAEzB9Q,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CACEvC,WAAYxP,EAAKyc,cAAcvW,QAEjC5G,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CACEnC,QAASA,EACTsC,gBAAiB1B,EAAKH,gBAExB/Q,EAAAC,EAAAC,cAACuS,GAAA,EAAD,MACAzS,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACEgG,aAAc3B,EAAKxE,SACnBoG,iBAAkBrC,IAEpBzQ,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CAAgBkG,qBAAmB,IACnC/S,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACE6D,kBAAmBA,EACnBsC,0BAA2B9B,EAAKF,0BAElChR,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,MACA7M,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,MACA7M,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACEwD,UAAWA,QASvBrQ,EAAAC,EAAAC,cAAC+S,GAAAhT,EAAD,CACEH,KAAMtB,KAAKqB,MAAM2b,iBACjBxa,QAASxC,KAAKS,YACdiU,sBAAoB,EACpBC,sBAAoB,GAGpBnT,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAab,GAAG,qBAAhB,sBACAY,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOA,IACvB/G,EAAAC,EAAAC,cAACmT,GAAApT,EAAD,CACEE,UAAU,uBAEVH,EAAAC,EAAAC,cAACoT,GAAArT,EAAD,CAAS6N,WAAYA,EAAYyF,kBAAgB,GAC9ClB,EAAMpO,IAAI,SAAAmF,GACT,OACEpJ,EAAAC,EAAAC,cAACsT,GAAAvT,EAAD,CAAMwT,IAAKrK,GACTpJ,EAAAC,EAAAC,cAACwT,GAAAzT,EAAD,KAAYmJ,OAKpBpJ,EAAAC,EAAAC,cAAA,WACG1B,KAAKqB,MAAMiO,aAAeuE,EAAM7D,OAC/BxO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKmV,aAAtB,UAGA3T,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WA3nBtB,SAAwB+Q,EAAWpR,EAAO+H,GACxC,OAAQqJ,GACN,KAAK,EACH,OACEjR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMiP,WAClC9O,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,YAApB,QACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,WAAW2I,MAAOlI,EAAMP,KAAMgK,SAAU1B,EAAa,UAC/D5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,uBAAuBS,EAAMkP,gBAGpD/O,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM6c,qBAClC1c,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,mBAApB,iBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,kBAAkB2I,MAAOlI,EAAMkc,YAAazS,SAAU1B,EAAa,iBAC7E5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,8BAA8BS,EAAM6c,uBAG3D1c,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMub,gBAClCpb,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,iBAApB,qBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,gBAAgBiE,KAAK,SAAS0E,MAAOlI,EAAM8b,UAAWrS,SAAU1B,EAAa,eACvF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,4BAA4BS,EAAMwb,qBAGzDrb,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM6P,WAClC1P,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,YAApB,qBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,WAAW2I,MAAOlI,EAAMwO,KAAM/E,SAAU1B,EAAa,UAC/D5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,uBAAuBS,EAAM8P,gBAGpD3P,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMyb,gBAClCtb,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,iBAApB,uBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,gBAAgBiE,KAAK,SAAS0E,MAAOlI,EAAM+b,UAAWtS,SAAU1B,EAAa,eACvF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,4BAA4BS,EAAM0b,qBAGzDvb,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMwc,iBAClCrc,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,kBAApB,uBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,iBAAiB2I,MAAOlI,EAAMgc,WAAYvS,SAAU1B,EAAa,gBAC3E5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,6BAA6BS,EAAMyc,sBAG1Dtc,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,IACb3F,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM8W,kBAClC3W,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,mBAApB,gBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,kBAAkByZ,WAAS,EAAC9Q,MAAOlI,EAAM6W,YAAapN,SAAU1B,EAAa,iBACvF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,8BAA8BS,EAAM+W,uBAG3D5W,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM8c,kBAClC3c,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,mBAApB,uBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,kBAAkB2I,MAAOlI,EAAMmc,YAAa1S,SAAU1B,EAAa,iBAC7E5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,8BAA8BS,EAAM+c,uBAG3D5c,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMgd,gBAClC7c,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,iBAApB,oBACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,gBAAgB2I,MAAOlI,EAAMoc,UAAW3S,SAAU1B,EAAa,eACzE5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,4BAA4BS,EAAMid,qBAGzD9c,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,GACrBrR,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAM0c,iBAClCvc,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,kBAApB,UACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,iBAAiByZ,WAAS,EAAC9Q,MAAOlI,EAAMic,WAAYxS,SAAU1B,EAAa,gBACrF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,6BAA6BS,EAAM2c,uBAKhE,KAAK,EACH,OACExc,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,KACED,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,4CAC3BH,EAAAC,EAAAC,cAAA,OAAK6I,IAAKlJ,EAAMmc,YAAa/S,IAAI,UAAU9I,UAAU,qCAQzDH,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMP,OAEfU,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMkc,cAEf/b,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM8b,YAEf3b,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMwO,OAEfrO,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM+b,YAEf5b,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMgc,aAEf7b,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,iCAC3BH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM6W,cAEf1W,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAI0L,GAAI,EAAGlR,UAAU,iCAClCH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAMic,eAKvB,QACE,MAAO,oBA4felI,CAAe9F,EAAYtP,KAAKqB,MAAOrB,KAAKoJ,aAAcpJ,KAAKyZ,gBAK/EjY,EAAAC,EAAAC,cAAC2T,GAAA5T,EAAD,CAAeE,UAAU,mBACvBH,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKS,aAAtB,aAGgB,IAAf6O,EACC9N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE2K,SAAyB,IAAfkD,EACVjN,QAASrC,KAAKqQ,YAFhB,UAOA,KACY,IAAff,EACC9N,EAAAC,EAAAC,cAACE,EAAA,SAAD,CACE8J,SAAU2Q,GACVzQ,YAAa,SAAC1J,GACZ4E,QAAQC,IAAR,mBAAAkF,OAA+B/J,EAAKoZ,aACpC5I,EAAKjS,cACLiS,EAAKpS,SAAS,IAEdoS,EAAK9S,MAAM0V,mBAAmB,wBAEhCtJ,QAAS,SAACiE,GACRnJ,QAAQC,IAAR,iBAAAkF,OAA6BgE,IAC7ByC,EAAK9S,MAAM0V,mBAAmB,uBAG/B,SAACiG,EAADrT,KAAgBhG,KAAhB,OACCV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACRzH,MAAM,UACNrC,QAAS,SAAAgK,GACPA,EAAEC,iBAEF,IAAIoJ,EAAO,CACT5U,KAAM4R,EAAKrR,MAAMP,KACjB+O,KAAM6C,EAAKrR,MAAMwO,KACjBgP,UAAWnM,EAAKrR,MAAM8b,UACtB2B,UAAWpM,EAAKrR,MAAM+b,UACtB2B,WAAYrM,EAAKrR,MAAMgc,WACvBC,WAAY5K,EAAKrR,MAAMic,WACvBC,YAAa7K,EAAKrR,MAAMkc,YACxByB,YAAatM,EAAKrR,MAAMmc,YACxBC,UAAW/K,EAAKrR,MAAMoc,UACtBvF,YAAaxF,EAAKrR,MAAM6W,aAG1BpR,QAAQC,IAAI2O,GAEZ6F,EAAY,CAAExT,UAAW2N,MArB7B,cA6BJlU,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQ0K,QAAQ,YAAYzH,MAAM,UAAUrC,QAASrC,KAAKqP,YAA1D,eAQV7N,EAAAC,EAAAC,cAAC+S,GAAAhT,EAAD,CACEH,KAAMtB,KAAKqB,MAAM4b,kBACjBza,QAASxC,KAAKS,YACdiU,sBAAoB,EACpBC,sBAAoB,GAGpBnT,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAab,GAAG,qBAAhB,sBACAY,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOA,IACvB/G,EAAAC,EAAAC,cAACmT,GAAApT,EAAD,CACEE,UAAU,uBAEVH,EAAAC,EAAAC,cAACoT,GAAArT,EAAD,CAAS6N,WAAYA,EAAYyF,kBAAgB,GAC9ClB,EAAMpO,IAAI,SAAAmF,GACT,OACEpJ,EAAAC,EAAAC,cAACsT,GAAAvT,EAAD,CAAMwT,IAAKrK,GACTpJ,EAAAC,EAAAC,cAACwT,GAAAzT,EAAD,KAAYmJ,OAKpBpJ,EAAAC,EAAAC,cAAA,WACG1B,KAAKqB,MAAMiO,aAAeuE,EAAM7D,OAC/BxO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKmV,aAAtB,UAGA3T,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAAM1B,KAAKwV,mBAAmBlG,EAAYtP,KAAKqB,MAAOrB,KAAKoJ,kBAKrE5H,EAAAC,EAAAC,cAAC2T,GAAA5T,EAAD,CAAeE,UAAU,mBACzBH,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOoF,IACrBnM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACG,IAAf2N,EACC9N,EAAAC,EAAAC,cAACE,EAAA,SAAD,CACE8J,SAAU+Q,GACV7Q,YAAa,SAAC1J,GACZ4E,QAAQC,IAAR,sBAAAkF,OAAkC/J,EAAK+c,gBACvCvM,EAAKjS,cACLiS,EAAK9S,MAAM0V,mBAAmB,2BAEhCtJ,QAAS,SAACiE,GACRnJ,QAAQC,IAAR,oBAAAkF,OAAgCgE,IAChCyC,EAAK9S,MAAM0V,mBAAmB,0BAG/B,SAAC2J,GAAD,OACCzd,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACA0K,QAAQ,YACRzH,MAAM,UACNrC,QAAS,SAAAgK,GACPA,EAAEC,iBAEF,IAAIoJ,EAAO,CACT9U,GAAI8R,EAAKrR,MAAM6b,WAGjBpW,QAAQC,IAAI2O,GAEZuJ,EAAc,CAAElX,UAAW2N,MAZ7B,YAoBF,OAIRlU,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKS,aAAtB,aAGgB,IAAf6O,EACC9N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE2K,SAAyB,IAAfkD,EACVjN,QAASrC,KAAKqQ,YAFhB,UAOA,KACY,IAAff,EACC9N,EAAAC,EAAAC,cAACE,EAAA,SAAD,CACE8J,SAAU6Q,GACV3Q,YAAa,SAAC1J,GACZ4E,QAAQC,IAAR,mBAAAkF,OAA+B/J,EAAKgd,eACpCxM,EAAKjS,cACLiS,EAAKpS,SAAS,IAEdoS,EAAK9S,MAAM0V,mBAAmB,yBAEhCtJ,QAAS,SAACiE,GACRnJ,QAAQC,IAAR,iBAAAkF,OAA6BgE,IAC7ByC,EAAK9S,MAAM0V,mBAAmB,wBAG/B,SAAC6J,EAAD9W,KAAgBnG,KAAhB,OACCV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACRzH,MAAM,UACNrC,QAAS,SAAAgK,GACPA,EAAEC,iBAEF,IAAIoJ,EAAO,CACT9U,GAAI6a,SAAS/I,EAAKrR,MAAM6b,WACxBpc,KAAM4R,EAAKrR,MAAMP,KACjB+O,KAAM6C,EAAKrR,MAAMwO,KACjBgP,UAAWnM,EAAKrR,MAAM8b,UACtB2B,UAAWpM,EAAKrR,MAAM+b,UACtB2B,WAAYrM,EAAKrR,MAAMgc,WACvBC,WAAY5K,EAAKrR,MAAMic,WACvBC,YAAa7K,EAAKrR,MAAMkc,YACxBrF,YAAaxF,EAAKrR,MAAM6W,aAG1BpR,QAAQC,IAAI2O,GAEZyJ,EAAY,CAAEpX,UAAW2N,MApB7B,cA4BJlU,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQ0K,QAAQ,YAAYzH,MAAM,UAAUrC,QAASrC,KAAKqP,YAA1D,uBAtsBK3M,63BC9PvB,IAAM0c,GAAO3f,IAAH4f,MAUJC,GAAkB7f,IAAH8f,MAUfC,GAAU/f,IAAHggB,MAWPC,GAAWjgB,IAAHkgB,MAYRC,GAAangB,IAAHogB,MAMVtX,GAAQ,IAAIC,iBAAe,CAC/BC,QAAS,CACPpF,QAAS,CACPqF,KAAM,WAER7D,KAAM,QAER+D,WAAY,CACVC,iBAAiB,KAIf8E,GAAoB,IAAInF,iBAAe,CAC3CC,QAAS,CACPpF,QAAS,CACPqF,KAAM,WAER7D,KAAM,QAER+D,WAAY,CACVC,iBAAiB,SA2hBNiX,eAlhBb,SAAAA,EAAYlgB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8f,IACjBjgB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAggB,GAAA3f,KAAAH,KAAMJ,KA+HRwJ,aAAe,SAAAtI,GAAI,OAAI,SAAAT,GACrBR,EAAKS,SAALR,OAAAuJ,GAAA,EAAAvJ,CAAA,GACGgB,EAAOT,EAAMiJ,OAAOC,UAlIN1J,EAuInBkgB,mBAAqB,WACnBlgB,EAAKS,SAAS,CACZ0f,cAAc,EACdC,eAAe,EACfC,SAAU,GACVC,OAAQ,GACRlS,WAAW,KA7IIpO,EAkJnBiO,oBAAsB,SAACsS,GACrBvgB,EAAKS,SAAS,CACZ2f,eAAe,EACfG,MAAOA,EACPnS,WAAW,KAtJIpO,EA0JnBqO,SAAW,SAAAnM,GAAA,IAAG2D,EAAH3D,EAAG2D,IAAQyI,EAAXrO,OAAAsO,EAAA,EAAAtO,CAAAiC,EAAA,gBACTP,EAAAC,EAAAC,cAAC2M,GAAA,EAAMC,IAAPxO,OAAAyO,OAAA,GACMJ,EADN,CAGE9L,QAAS,kBAAMxC,EAAKiO,oBAAoBpI,EAAI9E,KAC5C4N,MAAO,CACLC,OAAQ,eAhKK5O,EAsKnBwP,WAAa,WACX,GAA8B,IAA1BxP,EAAKwB,MAAMiO,WAAkB,CAC/B,IAAIC,GAAO,EACPC,EAAQ,CAAC,CAAC,WAAY3P,EAAKwB,MAAM6e,UACrC,CAAC,SAAUrgB,EAAKwB,MAAM8e,SAEtBrZ,QAAQC,IAAIyI,GAEZ,IAAK,IAAIO,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAChCjJ,QAAQC,IAAR,SAAAkF,OAAqBuD,EAAMO,GAAG,GAA9B,cAAA9D,OAA6CuD,EAAMO,GAAG,KACjDP,EAAMO,GAAG,GASP,WACL,IAAIE,EAAMT,EAAMO,GAAG,GAAK,QACpBG,EAASD,EAAM,MACnBpQ,EAAKS,SAAS,SAAAe,GAAK,IAAAmG,EAAA,OAAAA,EAAA,GAAA1H,OAAAuJ,GAAA,EAAAvJ,CAAA0H,EAChByI,GAAM,GADUnQ,OAAAuJ,GAAA,EAAAvJ,CAAA0H,EAEhB0I,EAAS,IAFO1I,IAHd,GATW,WAChB+H,GAAO,EACPzI,QAAQ7E,MAAR,SAAAgK,OAAuBuD,EAAMO,GAAG,GAAhC,cACA,IAAIE,EAAMT,EAAMO,GAAG,GAAK,QACpBG,EAASD,EAAM,MACnBpQ,EAAKS,SAAS,SAAAe,GAAK,IAAA+F,EAAA,OAAAA,EAAA,GAAAtH,OAAAuJ,GAAA,EAAAvJ,CAAAsH,EAChB6I,GAAM,GADUnQ,OAAAuJ,GAAA,EAAAvJ,CAAAsH,EAEhB8I,EAAS,yBAFO9I,IALH,GAmBhBmI,GACF1P,EAAKS,SAAS,SAAAe,GAAK,MAAK,CAAEiO,WAAYjO,EAAMiO,WAAa,OApM5CzP,EA0MnBY,YAAc,WACZZ,EAAKS,SAAS,CAAE0f,cAAc,EAAOC,eAAe,EAAOC,SAAU,GAAIC,OAAQ,GAAIlS,WAAW,KA3M/EpO,EAgNnBwQ,WAAa,WACXxQ,EAAKS,SAAS,SAAAe,GAAK,MAAK,CAAEiO,WAAYjO,EAAMiO,WAAa,MA/MzDzP,EAAKwB,MAAQ,CACX+e,MAAO,EACP9Q,WAAY,EACZ0Q,cAAc,EACdC,eAAe,EACfC,SAAU,GACVG,eAAe,EACfC,iBAAkB,GAClBH,OAAQ,GACRI,aAAa,EACbC,eAAgB,GAChBvS,WAAW,EACXwS,cAAc,EACd3O,QAAS,CAAC,CAAEC,WAAY,KAAMC,UAAW,QACzCC,sBAAuB,CACrB,CAAEF,WAAY,KAAMtO,MAAO,MAI/B5D,EAAK0S,cAAgB,SAAAT,GAAO,OAAIjS,EAAKS,SAAS,CAAEwR,aArB/BjS,8EAwBJ4S,EAAWpR,EAAO+H,GAC/B,OAAQqJ,GACN,KAAK,EACH,OACEjR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,IACb3F,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMgf,eAClC7e,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,gBAApB,SACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,eAAeyZ,WAAS,EAAC9Q,MAAOlI,EAAM6e,SAAUpV,SAAU1B,EAAa,cACjF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,2BAA2BS,EAAMif,oBAGxD9e,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,IACb3F,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMkf,aAClC/e,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,cAApB,YACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,aAAayZ,WAAS,EAAC9Q,MAAOlI,EAAM8e,OAAQrV,SAAU1B,EAAa,YAC7E5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,yBAAyBS,EAAMmf,mBAK5D,KAAK,EACH,OACEhf,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,KACED,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,iCAC3BH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM6e,WAEf1e,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,iCAC3BH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM8e,WAKvB,QACE,MAAO,+DAIM1N,EAAWpR,EAAO+H,GAAc,IAAApE,EAAAhF,KACjD,OAAQyS,GACN,KAAK,EACH,OACEjR,EAAAC,EAAAC,cAACE,EAAA,MAAD,CACEC,MAAOyd,GACPvX,UAAW,CAAEnH,GAAIS,EAAM+e,OACvBxU,YAAa,SAAC1J,IACiB,IAAzB8C,EAAK3D,MAAM4M,WACbjJ,EAAK1E,SAAS,CACZ4f,SAAUhe,EAAKke,MAAM/b,MACrB8b,OAAQje,EAAKke,MAAMM,KACnBzS,WAAW,MAKhB,SAAAtG,GAAwB,IAArB3F,EAAqB2F,EAArB3F,QAASC,EAAY0F,EAAZ1F,MACX,OAAID,EAAgBR,EAAAC,EAAAC,cAAA,uBAChBO,EAAcT,EAAAC,EAAAC,cAAA,kBAEhBF,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,IACb3F,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMgf,eAClC7e,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,gBAApB,SACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,eAAeyZ,WAAS,EAAC9Q,MAAOlI,EAAM6e,SAAUpV,SAAU1B,EAAa,cACjF5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,2BAA2BS,EAAMif,oBAGxD9e,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,IACb3F,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAayR,WAAS,EAACjR,MAAOZ,EAAMkf,aAClC/e,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAY0J,QAAQ,cAApB,YACA3J,EAAAC,EAAAC,cAAC0J,GAAA3J,EAAD,CAAOb,GAAG,aAAayZ,WAAS,EAAC9Q,MAAOlI,EAAM8e,OAAQrV,SAAU1B,EAAa,YAC7E5H,EAAAC,EAAAC,cAACyR,GAAA1R,EAAD,CAAgBb,GAAG,yBAAyBS,EAAMmf,qBASlE,KAAK,EACH,OACEhf,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,KACED,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMoF,WAAS,EAAC+L,QAAS,IACvBpR,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,iCAC3BH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM6e,WAEf1e,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD,CAAMyF,MAAI,EAACC,GAAI,GAAIxF,UAAU,iCAC3BH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,YAAOL,EAAM8e,WAKvB,QACE,MAAO,qDAyFJ,IAAAzN,EAAA1S,KACD6T,EAzND,CAAC,oBAAqB,cA0NnBvE,EAAetP,KAAKqB,MAApBiO,WAFDwE,EAKH9T,KAAKqB,MADPyQ,EAJKgC,EAILhC,QAASG,EAJJ6B,EAII7B,sBAGX,OACEzQ,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACR9J,QAASrC,KAAK+f,oBAFhB,kBASFve,EAAAC,EAAAC,cAACE,EAAA,MAAD,CACEC,MAAOud,GACPtd,aAAc,KAEb,SAAA+F,GAA8B,IAA3B7F,EAA2B6F,EAA3B7F,QAASC,EAAkB4F,EAAlB5F,MAAOC,EAAW2F,EAAX3F,KAClB,GAAIF,EAAS,OAAOR,EAAAC,EAAAC,cAAA,0BACpB,GAAIO,EAAO,OAAOT,EAAAC,EAAAC,cAAA,qBAUlB,IARA,IAMI+P,EAAO,GAEF1B,EAAI,EAAGA,EAAI7N,EAAKye,IAAI3Q,OAAQD,IACnC0B,EAAKtH,KACH,CACEvJ,GAAIsB,EAAKye,IAAI5Q,GAAGnP,GAChByD,MAAOnC,EAAKye,IAAI5Q,GAAG1L,MACnBqc,KAAMxe,EAAKye,IAAI5Q,GAAG2Q,OAKxB,OACElf,EAAAC,EAAAC,cAACuD,GAAAxD,EAAD,KACED,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACEoD,KAAMA,EACNuC,QAtBQ,CACZ,CAAElT,KAAM,KAAMuD,MAAO,MACrB,CAAEvD,KAAM,QAASuD,MAAO,SACxB,CAAEvD,KAAM,OAAQuD,MAAO,cAqBnB7C,EAAAC,EAAAC,cAACuS,GAAA,EAAD,CACEnC,QAASA,EACTsC,gBAAiB1B,EAAKH,gBAExB/Q,EAAAC,EAAAC,cAACuS,GAAA,EAAD,MACAzS,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CACEgG,aAAc3B,EAAKxE,SACnBoG,iBAAkBrC,IAEpBzQ,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,CAAgBkG,qBAAmB,IACnC/S,EAAAC,EAAAC,cAAC2M,GAAA,EAAD,UAOV7M,EAAAC,EAAAC,cAAC+S,GAAAhT,EAAD,CACEH,KAAMtB,KAAKqB,MAAM2e,aACjBxd,QAASxC,KAAKS,YACdiU,sBAAoB,EACpBC,sBAAoB,GAGpBnT,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAab,GAAG,qBAAhB,iBACAY,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOA,IACvB/G,EAAAC,EAAAC,cAACmT,GAAApT,EAAD,CACEE,UAAU,uBAEVH,EAAAC,EAAAC,cAACoT,GAAArT,EAAD,CAAS6N,WAAYA,EAAYyF,kBAAgB,GAC9ClB,EAAMpO,IAAI,SAAAmF,GACT,OACEpJ,EAAAC,EAAAC,cAACsT,GAAAvT,EAAD,CAAMwT,IAAKrK,GACTpJ,EAAAC,EAAAC,cAACwT,GAAAzT,EAAD,KAAYmJ,OAKpBpJ,EAAAC,EAAAC,cAAA,WACG1B,KAAKqB,MAAMiO,aAAeuE,EAAM7D,OAC/BxO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKmV,aAAtB,UAGA3T,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAAM1B,KAAKoV,eAAe9F,EAAYtP,KAAKqB,MAAOrB,KAAKoJ,aAAcpJ,KAAKyZ,gBAKpFjY,EAAAC,EAAAC,cAAC2T,GAAA5T,EAAD,KACED,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKS,aAAtB,aAGgB,IAAf6O,EACC9N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE2K,SAAyB,IAAfkD,EACVjN,QAASrC,KAAKqQ,YAFhB,UAOA,KACY,IAAff,EACC9N,EAAAC,EAAAC,cAACE,EAAA,SAAD,CACE8J,SAAU8T,GACV5T,YAAa,SAAC1J,GACZ4E,QAAQC,IAAR,mBAAAkF,OAA+B/J,EAAK0e,YACpClO,EAAKjS,cAELiS,EAAKpS,SAAS,CACZgP,WAAY,IAEdoD,EAAK9S,MAAM0V,mBAAmB,oBAEhCtJ,QAAS,SAACiE,GACRnJ,QAAQC,IAAR,iBAAAkF,OAA6BgE,IAC7ByC,EAAK9S,MAAM0V,mBAAmB,mBAG/B,SAACiG,EAADrT,KAAgBhG,KAAhB,OACCV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACRzH,MAAM,UACNrC,QAAS,SAAAgK,GACPA,EAAEC,iBAEF,IAAIoJ,EAAO,CACTwK,SAAUxN,EAAKrR,MAAM6e,SACrBC,OAAQzN,EAAKrR,MAAM8e,QAGrBrZ,QAAQC,IAAI2O,GAEZ6F,EAAY,CAAExT,UAAW2N,MAb7B,cAqBJlU,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQ0K,QAAQ,YAAYzH,MAAM,UAAUrC,QAASrC,KAAKqP,YAA1D,eASV7N,EAAAC,EAAAC,cAAC+S,GAAAhT,EAAD,CACEH,KAAMtB,KAAKqB,MAAM4e,cACjBzd,QAASxC,KAAKS,YACdiU,sBAAoB,EACpBC,sBAAoB,GAEpBnT,EAAAC,EAAAC,cAACkT,GAAAnT,EAAD,CAAab,GAAG,qBAAhB,wBACAY,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOA,IACvB/G,EAAAC,EAAAC,cAACmT,GAAApT,EAAD,CACEE,UAAU,uBAEVH,EAAAC,EAAAC,cAACoT,GAAArT,EAAD,CAAS6N,WAAYA,EAAYyF,kBAAgB,GAC9ClB,EAAMpO,IAAI,SAAAmF,GACT,OACEpJ,EAAAC,EAAAC,cAACsT,GAAAvT,EAAD,CAAMwT,IAAKrK,GACTpJ,EAAAC,EAAAC,cAACwT,GAAAzT,EAAD,KAAYmJ,OAKpBpJ,EAAAC,EAAAC,cAAA,WACG1B,KAAKqB,MAAMiO,aAAeuE,EAAM7D,OAC/BxO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKmV,aAAtB,UAGA3T,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAAM1B,KAAKwV,mBAAmBlG,EAAYtP,KAAKqB,MAAOrB,KAAKoJ,kBAKrE5H,EAAAC,EAAAC,cAAC2T,GAAA5T,EAAD,CAAeE,UAAU,mBACvBH,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOoF,IACvBnM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACG,IAAf2N,EACC9N,EAAAC,EAAAC,cAACE,EAAA,SAAD,CACE8J,SAAUkU,GACVhU,YAAa,SAAC1J,GACZ4E,QAAQC,IAAR,sBAAAkF,OAAkC/J,EAAK2e,YACvCnO,EAAKjS,cACLiS,EAAKpS,SAAS,CACZgP,WAAY,IAGdoD,EAAK9S,MAAM0V,mBAAmB,uBAEhCtJ,QAAS,SAACiE,GACRnJ,QAAQC,IAAR,oBAAAkF,OAAgCgE,IAChCyC,EAAK9S,MAAM0V,mBAAmB,sBAG/B,SAACuG,GAAD,OACCra,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACRzH,MAAM,UACNrC,QAAS,SAAAgK,GACPA,EAAEC,iBAEF,IAAIoJ,EAAO,CACT9U,GAAI8R,EAAKrR,MAAM+e,OAGjBtZ,QAAQC,IAAI2O,GAEZmG,EAAe,CAAE9T,UAAW2N,MAZhC,YAoBF,OAGRlU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQY,QAASrC,KAAKS,aAAtB,aAIgB,IAAf6O,EACC9N,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE2K,SAAyB,IAAfkD,EACVjN,QAASrC,KAAKqQ,YAFhB,UAOA,KACY,IAAff,EACC9N,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACE,EAAA,SAAD,CACE8J,SAAUgU,GACV9T,YAAa,SAAC1J,GACZ4E,QAAQC,IAAR,mBAAAkF,OAA+B/J,EAAK4e,YACpCpO,EAAKjS,cAELiS,EAAK9S,MAAM0V,mBAAmB,oBAC9B5C,EAAKpS,SAAS,CACZgP,WAAY,KAGhBtD,QAAS,SAACiE,GACRnJ,QAAQC,IAAR,iBAAAkF,OAA6BgE,IAC7ByC,EAAK9S,MAAM0V,mBAAmB,oBAG/B,SAACyG,EAAD1T,KAAiBnG,KAAjB,OACCV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CACE0K,QAAQ,YACRzH,MAAM,UACNrC,QAAS,SAAAgK,GACPA,EAAEC,iBAEF,IAAIoJ,EAAO,CACT9U,GAAI8R,EAAKrR,MAAM+e,MACfF,SAAUxN,EAAKrR,MAAM6e,SACrBC,OAAQzN,EAAKrR,MAAM8e,QAGrBrZ,QAAQC,IAAI2O,GAEZqG,EAAa,CAAEhU,UAAW2N,MAd9B,eAwBNlU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAQ0K,QAAQ,YAAYzH,MAAM,UAAUrC,QAASrC,KAAKqP,YAA1D,yBAtgBJ3M,aCtGHqe,uBAfb,SAAAA,EAAYnhB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+gB,IACjBlhB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAihB,GAAA5gB,KAAAH,KAAOJ,KACFyB,MAAQ,GAFIxB,wEAOjB,OACE2B,EAAAC,EAAAC,cAAA,yBATgBgB,cC2ChBse,GAAOC,IAAWC,KAAK,CAC3B,IAAIlV,IAAQ,SAAAjK,GAAqC,IAAlCof,EAAkCpf,EAAlCof,cAAeC,EAAmBrf,EAAnBqf,aACxBD,GACFA,EAAc1b,IAAI,SAAA2B,GAAA,IAAG4F,EAAH5F,EAAG4F,QAASqU,EAAZja,EAAYia,UAAWC,EAAvBla,EAAuBka,KAAvB,OAChBxa,QAAQC,IAAR,6BAAAkF,OAC+Be,EAD/B,gBAAAf,OACqDoV,EADrD,YAAApV,OACyEqV,MAIzEF,GAActa,QAAQC,IAAR,oBAAAkF,OAAgCmV,MAEpD,IAAIG,IAAe,CACjBC,IAAK,eAKHzV,GAAQ/B,aAAaC,QAAQ,oBAE7BwX,GAAWC,YAAW,SAACC,EAADna,GAAoB,IAAdoa,EAAcpa,EAAdoa,QAGhC,MAAO,CACLA,QAAQ9hB,OAAA+hB,EAAA,EAAA/hB,CAAA,GACH8hB,EADE,CAELE,cAAe/V,GAAK,UAAAE,OACRF,IAER,QAMJgW,GAAS,IAAIC,IAAa,CAC9BhB,KAAMS,GAASxV,OAAO+U,IACtBiB,MAAO,IAAIC,MAGPC,GAAc,CAClBC,QAASC,IACTC,QAASC,IACTtgB,MAAOugB,IACPC,KAAMC,KA+DR,IAAMC,GAAyBC,qBA5DT,SAAAra,GAAK,MAAK,CAC9B6Z,QAAS,CACP1d,MAAO,UACPD,gBAAiBoe,IAAM,MAEzB5gB,MAAO,CACLyC,MAAO,UACPD,gBAAiB8D,EAAME,QAAQxG,MAAM6gB,MAEvCL,KAAM,CACJ/d,MAAO,UACPD,gBAAiB8D,EAAME,QAAQpF,QAAQyf,MAEzCR,QAAS,CACP5d,MAAO,UACPD,gBAAiBse,IAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAa7a,EAAMqK,QAAQyQ,MAE7BrW,QAAS,CACPkN,QAAS,OACToJ,WAAY,YAkCeV,CA9B/B,SAAyBhjB,GAAO,IACtB2jB,EAA4D3jB,EAA5D2jB,QAAS5hB,EAAmD/B,EAAnD+B,UAAWqL,EAAwCpN,EAAxCoN,QAASxK,EAA+B5C,EAA/B4C,QAAS2J,EAAsBvM,EAAtBuM,QAAYqX,EAD5B1jB,OAAAsO,EAAA,EAAAtO,CACsCF,EADtC,uDAExB6jB,EAAOtB,GAAYhW,GAEzB,OACE3K,EAAAC,EAAAC,cAACgiB,EAAAjiB,EAAD3B,OAAAyO,OAAA,CACE5M,UAAWgiB,IAAWJ,EAAQpX,GAAUxK,GACxCoL,mBAAiB,kBACjBC,QACExL,EAAAC,EAAAC,cAAA,QAAMd,GAAG,kBAAkBe,UAAW4hB,EAAQvW,SAC5CxL,EAAAC,EAAAC,cAAC+hB,EAAD,CAAM9hB,UAAWgiB,IAAWJ,EAAQP,KAAMO,EAAQL,eACjDlW,GAGL4W,OAAQ,CACNpiB,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEwT,IAAI,QACJjK,aAAW,QACXtG,MAAM,UACN/C,UAAW4hB,EAAQM,MACnBxhB,QAASG,GAEThB,EAAAC,EAAAC,cAACoiB,EAAAriB,EAAD,CAAWE,UAAW4hB,EAAQP,UAG9BQ,MAOV,SAASO,GAATpc,GAAyD,IAAtBjF,EAAsBiF,EAAjC9E,UAAyBmhB,EAAQlkB,OAAAsO,EAAA,EAAAtO,CAAA6H,EAAA,eACvD,OACEnG,EAAAC,EAAAC,cAACuiB,EAAA,EAADnkB,OAAAyO,OAAA,GACMyV,EADN,CAEEE,OAAQ,SAAAtkB,GAAK,OACXmM,GACEvK,EAAAC,EAAAC,cAACgB,EAAD5C,OAAAyO,OAAA,GACMyV,EACApkB,IAGJ4B,EAAAC,EAAAC,cAACyiB,EAAA,EAADrkB,OAAAyO,OAAA,GACMyV,EADN,CAEEjhB,GAAI,CACFqhB,SAAU,SACV/iB,MAAO,CAAE6f,KAAMthB,EAAMuB,kBASrC,SAASkjB,GAATxc,GAAyDA,EAAjChF,UAAiC,IAARmhB,EAAQlkB,OAAAsO,EAAA,EAAAtO,CAAA+H,EAAA,eACvD,OACErG,EAAAC,EAAAC,cAACuiB,EAAA,EAADnkB,OAAAyO,OAAA,GACMyV,EADN,CAEEE,OAAQ,SAAAtkB,GAAK,OAET4B,EAAAC,EAAAC,cAACyiB,EAAA,EAADrkB,OAAAyO,OAAA,GACMyV,EADN,CAEEjhB,GAAI,CACFqhB,SAAU,SACV/iB,MAAO,CAAE6f,KAAMthB,EAAMuB,sBA8UpBmjB,eApUb,SAAAA,EAAY1kB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAskB,IACjBzkB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwkB,GAAAnkB,KAAAH,KAAMJ,KAoCRe,QAAU,SAACuB,EAAMmI,GACfxK,EAAKS,SAAS,CACZ8J,KAAM,CACJxJ,GAAIsB,EAAKtB,GACTC,OAAQqB,EAAKrB,OACbC,KAAMoB,EAAKpB,KACXC,QAASmB,EAAKnB,QACdC,MAAOkB,EAAKlB,MACZC,OAAO,GAETsjB,SAAUla,IAGRA,EACFL,aAAa6B,QAAQ,aAAc2Y,KAAKC,UAAU,CAChD7jB,GAAIsB,EAAKtB,GACTC,OAAQqB,EAAKrB,OACbC,KAAMoB,EAAKpB,KACXC,QAASmB,EAAKnB,QACdC,MAAOkB,EAAKlB,MACZC,OAAO,MAGT+I,aAAa0a,WAAW,oBACxB1a,aAAa0a,WAAW,gBA7DT7kB,EAiEnByV,mBAAqB,SAACzQ,GACpB,OAAQA,GACN,IAAK,mBACHhF,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,UACjBC,gBAAiB,0DAEnB,MACF,IAAK,iBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,QACjBC,gBAAiB,gEAEnB,MACF,IAAK,uBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,UACjBC,gBAAiB,4DAEnB,MACF,IAAK,qBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,QACjBC,gBAAiB,mEAEnB,MACF,IAAK,sBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,UACjBC,gBAAiB,yDAEnB,MACF,IAAK,oBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,QACjBC,gBAAiB,+DAEnB,MACF,IAAK,kBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,UACjBC,gBAAiB,gDAEnB,MACF,IAAK,gBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,QACjBC,gBAAiB,0DAEnB,MACF,IAAK,wBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,UACjBC,gBAAiB,sDAEnB,MACF,IAAK,sBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,QACjBC,gBAAiB,mEAEnB,MACF,IAAK,mBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,UACjBC,gBAAiB,qDAEnB,MACF,IAAK,iBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,QACjBC,gBAAiB,iEAEnB,MACF,IAAK,oBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,UACjBC,gBAAiB,qDAEnB,MACF,IAAK,kBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,QACjBC,gBAAiB,kEAEnB,MACF,IAAK,uBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,UACjBC,gBAAiB,qDAEnB,MACF,IAAK,qBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,QACjBC,gBAAiB,iEAEnB,MACF,IAAK,qBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,UACjBC,gBAAiB,2CAEnB,MACF,IAAK,mBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,QACjBC,gBAAiB,+DAEnB,MACF,IAAK,sBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,UACjBC,gBAAiB,gDAEnB,MACF,IAAK,oBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,QACjBC,gBAAiB,oEAEnB,MACF,IAAK,0BACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,UACjBC,gBAAiB,iDAEnB,MACF,IAAK,wBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,QACjBC,gBAAiB,qEAEnB,MACF,IAAK,yBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,UACjBC,gBAAiB,+CAEnB,MACF,IAAK,uBACHhlB,EAAKS,SAAS,CACZqkB,cAAc,EACdC,gBAAiB,QACjBC,gBAAiB,qEAxONhlB,EAgPnB6J,oBAAsB,SAACrJ,EAAOsJ,GACb,cAAXA,GAIJ9J,EAAKS,SAAS,CACZqkB,cAAc,KApPhB9kB,EAAKwB,MAAQ,CACX+I,KAAM,CACJxJ,GAAI,GACJC,OAAQ,GACRC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,OAAO,GAETsjB,UAAU,EACVI,cAAc,EACdC,gBAAiB,GACjBC,gBAAiB,IAdFhlB,oFAoBjB,GAAImK,aAAaC,QAAQ,cAAe,CACtC,IAAM6a,EAAYN,KAAKO,MAAM/a,aAAaC,QAAQ,eAElDjK,KAAKM,SAAS,CACZ8J,KAAM,CACJxJ,GAAIkkB,EAAUlkB,GACdC,OAAQikB,EAAUjkB,OAClBC,KAAMgkB,EAAUhkB,KAChBC,QAAS+jB,EAAU/jB,QACnBC,MAAO8jB,EAAU9jB,MACjBC,OAAO,GAETsjB,UAAU,sCA0NP,IAAAvf,EAAAhF,KACP,OACEwB,EAAAC,EAAAC,cAACE,EAAA,eAAD,CAAgBmgB,OAAQA,IACtBvgB,EAAAC,EAAAC,cAACsjB,EAAA,EAAD,CAAQC,SAAS,UACfzjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACwjB,GAAD,CACE5P,mBAAoBtV,KAAKsV,mBACzB3U,QAASX,KAAKW,UAEhBa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAACyjB,GAAD,MACA3jB,EAAAC,EAAAC,cAAC0jB,EAAA,EAAD,KACE5jB,EAAAC,EAAAC,cAAC2iB,GAAD,CACEgB,OAAK,EACL/D,KAAK,MAEP9f,EAAAC,EAAAC,cAACqiB,GAAD,CACEsB,OAAK,EACL/D,KAAK,aACLze,UAAW8D,KACbnF,EAAAC,EAAAC,cAACqiB,GAAD,CACEsB,OAAK,EACL/D,KAAK,cACLhM,mBAAoBtV,KAAKsV,mBACzBzS,UAAWgL,KACbrM,EAAAC,EAAAC,cAACqiB,GAAD,CACEsB,OAAK,EACL/D,KAAK,gBACLhM,mBAAoBtV,KAAKsV,mBACzBzS,UAAW2T,KAEbhV,EAAAC,EAAAC,cAACqiB,GAAD,CACEsB,OAAK,EACL/D,KAAK,aACLhM,mBAAoBtV,KAAKsV,mBACzBzS,UAAW8Z,KACbnb,EAAAC,EAAAC,cAACqiB,GAAD,CACEsB,OAAK,EACL/D,KAAK,OACLhM,mBAAoBtV,KAAKsV,mBACzBzS,UAAWid,KACbte,EAAAC,EAAAC,cAACuiB,EAAA,EAAD,CACE3C,KAAK,SACL4C,OAAQ,SAACtkB,GAAD,OAAW4B,EAAAC,EAAAC,cAAC4jB,GAADxlB,OAAAyO,OAAA,GACb3O,EADa,CAEjB0V,mBAAoBtQ,EAAKsQ,mBACzB3U,QAASqE,EAAKrE,cAGlBa,EAAAC,EAAAC,cAACuiB,EAAA,EAAD,CAAOphB,UAAW0iB,SAK1B/jB,EAAAC,EAAAC,cAAC+K,EAAAhL,EAAD,CACEiL,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdtL,KAAMtB,KAAKqB,MAAMsjB,aACjB9X,iBAAkB,IAClBrK,QAASxC,KAAK0J,qBAEdlI,EAAAC,EAAAC,cAACihB,GAAD,CACEngB,QAASxC,KAAK0J,oBACdyC,QAASnM,KAAKqB,MAAMujB,gBACpB5X,QAAShN,KAAKqB,MAAMwjB,2BA7TdniB,kCCzLEnB,QACW,cAA7BL,OAAOC,SAASqkB,UAEe,UAA7BtkB,OAAOC,SAASqkB,UAEhBtkB,OAAOC,SAASqkB,SAASC,MACvB,2DCVN,IAAMld,GAAQC,yBAAe,CAC3BC,QAAS,CACPpF,QAAS,CACPqF,KAAMgd,KAAK,MAEb/c,UAAW,CACTD,KAAMgd,KAAK,MAEb7gB,KAAM,QAER+D,WAAY,CACVC,iBAAiB,KAIrB8c,IAASzB,OACT1iB,EAAAC,EAAAC,cAACgJ,EAAA,iBAAD,CAAkBnC,MAAOA,IACvB/G,EAAAC,EAAAC,cAACkkB,GAAD,OAEFC,SAASC,eAAe,SDsGlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fc8059a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a57e2f19.svg\";","module.exports = __webpack_public_path__ + \"static/media/Edit.12d66116.svg\";","import React, { Component } from 'react';\nimport './Header.css';\n\n// Apollo\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\n\n// Material-UI\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle'\n\nconst STATUS = gql`\n{\n  status\n}\n`\n\nclass Header extends Component {\n  constructor(props) {\n    super (props);\n    this.state = {\n      anchorEl: null,\n    }\n  }\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  setUserApp = () => {\n    let user = {\n      id: '',\n      aanhef: '',\n      name: '',\n      surname: '',\n      email: '',\n      admin: false\n    }\n    this.props.setUser(user, false)\n    this.handleClose()\n    window.location.reload()\n  }\n\n  render() {\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div className=\"header-wrapper\">\n        <span className=\"header-title\">ARTIC - Admin panel</span>\n        <Query\n          query={STATUS}\n          pollInterval={300}\n        >\n          {({ loading, error, data }) => {\n            return (\n              <div className={\n                loading ? 'header-status-indicator' : error ? 'header-status-indicator-red' : data.status === 200 ? 'header-status-indicator-green' : null\n              } />\n            );\n          }}\n        </Query>\n        <IconButton\n          className=\"header-icon\"\n          onClick={this.handleClick}\n        >\n          <AccountCircle/>\n        </IconButton>\n        <Menu\n          id=\"fade-menu\"\n          anchorEl={anchorEl}\n          open={open}\n          onClose={this.handleClose}\n        >\n          <MenuItem onClick={this.setUserApp}>Log uit</MenuItem>\n        </Menu>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom'\nimport './Sidebar.css';\n\n// Material-UI\nimport MenuList from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super (props);\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"sidebar-container\">\n        <MenuList component=\"nav\">\n          <NavLink\n            to=\"/dashboard\"\n            className=\"list-link\"\n          >\n            <MenuItem button>\n                <ListItemIcon\n                  className='list-item-icon'\n                >\n                  <DashboardIcon />\n                </ListItemIcon>\n                <ListItemText\n                  className='list-item-text'\n                  primary=\"Dashboard\"\n                />\n            </MenuItem>\n          </NavLink>\n          <NavLink\n            to=\"/gebruikers\"\n            className=\"list-link\"\n          >\n            <MenuItem button>\n              <ListItemIcon\n                className='list-item-icon'\n              >\n                <SupervisorAccountIcon />\n              </ListItemIcon>\n              <ListItemText\n                className='list-item-text'\n                primary=\"Gebruikers\"\n              />\n            </MenuItem>\n          </NavLink>\n          <NavLink\n            to=\"/schilderijen\"\n            className=\"list-link\"\n          >\n            <MenuItem button>\n              <ListItemText\n                className='list-item-text'\n                primary=\"Schilderijen\"\n              />\n            </MenuItem>\n          </NavLink>\n          <NavLink\n            to=\"/schilders\"\n            className=\"list-link\"\n          >\n            <MenuItem button>\n              <ListItemText\n                className='list-item-text'\n                primary=\"Schilders\"\n              />\n            </MenuItem>\n          </NavLink>\n          <NavLink\n            to=\"/faq\"\n            className=\"list-link\"\n          >\n            <MenuItem button>\n              <ListItemText\n                className='list-item-text'\n                primary=\"FAQ\"\n              />\n            </MenuItem>\n          </NavLink>\n        </MenuList>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;","import React, { Component } from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\n\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  // When calling the Charts component provide the following tags: chartData, showLine(true or false to show the bar), about and legendPosition\n  render() {\n    return (\n      <div>\n        <LineChart width={1000} height={300} data={this.props.data} margin={{ top: 5, right: 30, bottom: 5, left: 50 }}>        \n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n          <XAxis stroke='white' dataKey={this.props.title} />\n          <YAxis stroke='white' />\n          <Tooltip wrapperStyle={{ backgroundColor: 'white', color: 'black' }} />\n          <Legend />\n          <Line type=\"monotone\" name=\"Aantal\" dataKey={this.props.amountwatched} stroke=\"black\" />\n        </LineChart>\n      </div>\n    )\n  }\n}\n\nexport default Chart\n\n","import React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n// export default function Tables(props){\n//   return(\n//     <div>\n//         <Paper>\n//           <Table>\n//             <TableHead>\n//               <TableRow>\n//                 <TableCell> Title </TableCell>\n//                 <TableCell> basic </TableCell>\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {\n//                 props.data.map(rows=>(\n//                   <TableRow>\n//                     <TableCell component=\"th\" scope=\"row\">{rows.title}</TableCell>\n//                     <TableCell component=\"th\" scope=\"row\">{rows.body}</TableCell>\n//                   </TableRow>\n//                 ))\n//               }\n//             </TableBody>\n//           </Table>\n//         </Paper>\n//       </div>\n//   )\n// }\n\nclass Tables extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell> {this.props.title} </TableCell>\n                <TableCell> {this.props.painter} </TableCell>\n                <TableCell> {this.props.colomnName}</TableCell>\n\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                this.props.data.map(row => (\n                  <TableRow>\n                    {this.props.renderRow(row).map(q => <TableCell>{q}</TableCell>)}\n                  </TableRow>\n                ))\n              }\n            </TableBody>\n          </Table>\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default Tables\n\n","import React, { Component } from 'react';\nimport './Dashboard.css';\nimport Charts from '../../components/chart/Charts.js'\nimport Tables from '../../components/table/Tables.js'\nimport Grid from '@material-ui/core/Grid';\n// Apollo\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n\nconst populairpainter = gql`\n  query populairpainter{\n    popularPainter{\n      principalmaker\n      amountwatched\n    }\n  }\n`;\n\nconst bestSold = gql`\n  query bestSold{\n    bestsellingpaintings{\n      title\n      principalmaker\n      amountofpaintings\n    }\n  }\n`;\n\nconst populair = gql`\n  query popularpaintings{\n    popularpaintings{\n      id\n      title\n      principalmaker\n      amountwatched\n      amountofpaintings\n    }\n  }\n`;\n\nconst leastSold = gql`\n  query leastsellingpaintings{\n    leastsellingpaintings{\n      id\n      title\n      principalmaker\n      amountofpaintings\n    }\n  }\n`;\n\nconst unpopulair = gql`\n  query unpopularpaintings{\n    unpopularpaintings{\n      id\n      title\n      principalmaker\n      amountwatched\n    }\n  }\n`;\n\nconst aantalGebruikers = gql`\n  query gebruiker($amount: Int!, $page: Int!){\n    selectAllUsers(amount: $amount, page: $page){\n      total\n    }\n  }\n`;\n\nconst amountRented = gql`\n  query amountRentedPaintings{\n    amountRentedPaintings\n  }\n`;\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"dashboardSection\">\n        <Grid container>\n\n          <Grid container id=\"meestBekekenSchilder\">\n            <Query query={populairpainter} pollInterval={20000}>\n              {({ loading, error, data }) => {\n                if (loading) return <p>Loading...</p>;\n                if (error) return <p>Error</p>;\n                console.log(\"( ͡° ͜ʖ ͡°)\")\n                return (\n                  <div>\n                    Top 5 populairste Schilders\n                    <Charts data={data.popularPainter} title=\"principalmaker\" amountwatched=\"amountwatched\" />\n                  </div>\n\n                )\n              }}\n            </Query>\n          </Grid>\n\n          <Grid container id=\"meestBekekenEnVerkocht\">\n\n            <Grid item xs id=\"meestBekekenSchilderij\">\n              <Query query={populair} pollInterval={5000}>\n                {({ loading, error, data }) => {\n                  if (loading) return <p>Loading...</p>;\n                  if (error) return <p>Error</p>;\n\n                  const rowData = (row) => [row.title, row.principalmaker, row.amountwatched]\n\n                  return (\n                    <div>\n                      Top 5 meest bekeken schilderijen\n                    <Tables data={data.popularpaintings} renderRow={rowData} title=\"Title\" painter=\"Schilder\" colomnName=\"Aantal\" />\n                    </div>\n                  )\n                }}\n              </Query>\n            </Grid>\n\n            <Grid item xs={1} />\n\n            <Grid item xs id=\"meestVerkocht\">\n\n              <Query query={bestSold} pollInterval={5000}>\n                {({ loading, error, data }) => {\n                  if (loading) return <p>Loading...</p>;\n                  if (error) return <p>Error</p>;\n\n                  const rowData = (row) => [row.title, row.principalmaker, (100 - row.amountofpaintings)]\n\n                  return (\n                    <div>\n                      Top 5 meest verkochte artikelen\n                    <Tables data={data.bestsellingpaintings} renderRow={rowData} title=\"Title\" painter=\"Schilder\" colomnName=\"Aantal\" />\n                    </div>\n                  )\n                }}\n              </Query>\n\n            </Grid>\n          </Grid>\n          \n          <Grid container id=\"minstBekekenEnVerkocht\">\n\n            <Grid item xs id=\"minstBekeken\">\n              <Query query={unpopulair} pollInterval={5000}>\n                {({ loading, error, data }) => {\n                  if (loading) return <p>Loading...</p>;\n                  if (error) return <p>Error</p>;\n\n                  const rowData = (row) => [row.title, row.principalmaker, row.amountwatched]\n\n                  return (\n                    <div>\n                      Top 5 minst bekeken schilderijen\n                    <Tables data={data.unpopularpaintings} renderRow={rowData} title=\"Title\" painter=\"Schilder\" colomnName=\"Aantal\" />\n                    </div>\n                  )\n                }}\n              </Query>\n            </Grid>\n\n            <Grid item xs={1} />\n\n            <Grid item xs id=\"minstVerkocht\">\n              <Query query={leastSold} pollInterval={5000}>\n                {({ loading, error, data }) => {\n                  if (loading) return <p>Loading...</p>;\n                  if (error) return <p>Error</p>;\n\n                  const rowData = (row) => [row.title, row.principalmaker, (100 - row.amountofpaintings)]\n\n                  return (\n                    <div>\n                      Top 5 minst verkochte schilderijen\n                    <Tables data={data.leastsellingpaintings} renderRow={rowData} title=\"Title\" painter=\"Schilder\" colomnName=\"Aantal\" />\n                    </div>\n                  )\n                }}\n              </Query>\n\n            </Grid>\n          </Grid>\n\n          <Grid container id=\"aantalGebruikersEnVerhuurd\">\n\n            <Grid item xs id=\"aantalGebruikers\">\n              <Query query={aantalGebruikers} variables={{ amount: 1, page: 1 }}>\n                {({ loading, error, data }) => {\n                  if (loading) return <p>Loading...</p>;\n                  if (error) return <p>Error</p>;\n                  return (\n                    <div>Totaal aantal gebruikers: {data.selectAllUsers.total}</div>\n                  )\n                }}\n              </Query>\n            </Grid>\n\n            <Grid item xs id=\"aantalVerhuurd\">\n              <Query query={amountRented} pollInterval={5000}>\n                {({ loading, error, data }) => {\n                  if (loading) return <p>Loading...</p>\n                  if (error) return <p>Error</p>\n                  return (\n                    <div>Aantal verhuurde schilderijen momenteel: {data.amountRentedPaintings}</div>\n                  )\n                }}\n              </Query>\n            </Grid>\n          </Grid>\n        </Grid>\n      </section >\n    );\n  }\n}\n\n\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport './Login.css';\n\n// Apollo\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n// Material-UI\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\n// Icons\nimport logo from '../../icons/logo.svg';\n\nconst theme = new createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FFFFFF'\n    },\n    secondary: {\n      main: '#43a047'\n    },\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true,\n  },\n  overrides: {\n    MuiButton: { // Name of the component ⚛️ / style sheet\n      root: { // Name of the rule\n        color: 'white', // Some CSS\n      },\n    },\n  },\n});\n\nconst LOGIN = gql`\n  mutation Login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      id\n      aanhef\n      name\n      surname\n      email\n      admin\n      token\n    }\n  }\n`;\n\nclass Login extends Component {\n  constructor(props) {\n    super (props);\n    this.state = {\n      email: '',\n      password: '',\n      showPassword: false,\n      buttonState: false,\n      snackbar: false,\n    }\n  }\n\n  componentWillMount() {\n    // Check if user data is present as a cookie\n    if (localStorage.getItem('ADMIN_USER')) {\n      this.props.history.push(`/dashboard`)\n      window.location.reload()\n    }\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  handleSnackbarClick = () => {\n    this.setState({\n      snackbar: true\n    });\n  };\n\n  handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({\n      snackbar: false,\n    });\n  };\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  }\n\n  setUserApp(user, isLoggedIn) {\n    this.props.setUser(user, isLoggedIn)\n  }\n\n  render() {\n    return (\n      <div className=\"login-container\">\n        <Paper elevation={1} className=\"login-wrapper\">\n          <img src={logo} alt=\"Logo\" height=\"100\" className=\"login-logo\" />\n          <h1>ARTIC</h1>\n          <MuiThemeProvider theme={theme}>\n            <form className=\"login-form\">\n              <TextField\n                id=\"input-email\"\n                className=\"login-input\"\n                label=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={this.state.email}\n                onChange={this.handleChange('email')}\n                inputProps={{\n                  'aria-label': 'Email'\n                }}\n              />\n              <FormControl className=\"login-input\">\n                <InputLabel htmlFor=\"adornment-password\">Wachtwoord</InputLabel>\n                <Input\n                  id=\"adornment-password\"\n                  type={this.state.showPassword ? 'text' : 'password'}\n                  value={this.state.password}\n                  autoComplete=\"current-password\"\n                  onChange={this.handleChange('password')}\n                  inputProps={{\n                    'aria-label': 'Wachtwoord'\n                  }}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"Toggle password visibility\"\n                        onClick={this.handleClickShowPassword}\n                      >\n                        {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            </form>\n            <Mutation\n              mutation={LOGIN}\n              ignoreResults={false}\n              onCompleted={(data) => {\n                localStorage.setItem('ADMIN_AUTH_TOKEN', data.login.token)\n                this.setUserApp(data.login, true)\n                this.props.history.push(`/dashboard`)\n                window.location.reload()\n              }}\n              onError={(error) => {\n                console.error(`Query failed: ${error}`)\n                this.handleSnackbarClick()\n                this.setState({\n                  buttonState: false\n                });\n              }}\n            >\n              {(login) => (\n                <Button\n                  color=\"secondary\"\n                  className=\"login-button\"\n                  variant=\"contained\"\n                  disabled={this.state.buttonState}\n                  onClick={e => {\n                    e.preventDefault();\n                    // Set buttons to disabled\n                    this.setState({\n                      buttonState: true,\n                    });\n\n                    // Check email and password\n                    if(!(/\\S+@\\S+\\.\\S+/).test(this.state.email)) {\n                      this.handleSnackbarClick()\n                      this.setState({\n                        buttonState: false,\n                      });\n                      return\n                    }\n\n                    // Mutate\n                    login({ variables: {\n                      email: this.state.email.toLowerCase(),\n                      password: this.state.password\n                    }});\n                  }}\n                >\n                  Inloggen\n                </Button>\n              )}\n            </Mutation>\n          </MuiThemeProvider>\n        </Paper>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.snackbar}\n          autoHideDuration={6000}\n          onClose={this.handleSnackbarClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">Het email en/of het wachtwoord is onjuist.<br/>Probeer het opnieuw.</span>}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './Users.css';\n\n// Material-UI\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\n// React Grid\nimport {\n  PagingState,\n  CustomPaging,\n  SortingState,\n  IntegratedSorting,\n  SearchState,\n  IntegratedFiltering,\n} from '@devexpress/dx-react-grid';\nimport {\n  Grid as GridR,\n  Table,\n  TableHeaderRow,\n  PagingPanel,\n  ColumnChooser,\n  TableColumnVisibility,\n  Toolbar,\n  SearchPanel,\n} from '@devexpress/dx-react-grid-material-ui';\n\n// Apollo\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n//Edit icon\nimport Edit from '../../icons/Edit.svg';\n\n//Linking to userdetail page\nimport { Link } from 'react-router-dom';\n\nconst ALL_USERS = gql`\n  query AllUsers($page: Int!, $amount: Int!){\n    selectAllUsers(page: $page, amount: $amount){\n      total\n      totaluser{\n        id\n        name\n        surname\n        mail\n        adres\n        city\n        postalcode\n        password\n        aanhef\n        housenumber\n        admin\n        paymentmethod\n      }\n    }\n  }\n`;\n\nconst GET_USER_DETAILS = gql`\n  query User($id: Int!){\n    selectUserById(id: $id){\n      id\n      name\n      surname\n      mail\n      adres\n      city\n      postalcode\n      password\n      aanhef\n      housenumber\n      admin\n      paymentmethod\n    }\n  }\n`;\n\nconst ADD_USER = gql`\n  mutation AddUser(\n    $name: String!\n    $surname: String!\n    $mail: String!\n    $password: String!\n    $aanhef: String!\n    $adres: String\n    $city: String\n    $postalcode: String\n    $housenumber: String\n    $paymentmethod: String,\n    $admin: Boolean!){\n    addUser(\n      name: $name\n      surname: $surname\n      mail: $mail\n      password: $password\n      aanhef: $aanhef\n      adres: $adres\n      city: $city\n      postalcode: $postalcode\n      housenumber: $housenumber\n      paymentmethod: $paymentmethod,\n      admin: $admin)\n  }\n`;\n\nconst EDIT_USER = gql`\n  mutation AlterUser(\n    $id: Int!,\n    $name: String!\n    $surname: String!\n    $mail: String!\n    $aanhef: String!\n    $adres: String!\n    $city: String!\n    $postalcode: String!\n    $housenumber: String!\n    $paymentmethod: String!\n    $admin: Boolean!){\n    alterUser(\n      id: $id\n      name: $name\n      surname: $surname\n      mail: $mail\n      aanhef: $aanhef\n      adres: $adres\n      city: $city\n      postalcode: $postalcode\n      housenumber: $housenumber\n      paymentmethod: $paymentmethod\n      admin: $admin)\n  }\n`;\n\nconst DELETE_USER = gql`\n  mutation USER($id: Int!){\n    deleteUser(id: $id)\n  }\n`\n\nconst theme = new createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FFFFFF'\n    },\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nconst themeDeleteButton = new createMuiTheme({\n  palette: {\n    primary: {\n      main: '#D32F2F'\n    },\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nfunction getSteps() {\n  return ['Vul informatie in', 'Review gebruiker'];\n}\n\nfunction getStepContent(stepIndex, state, handleChange) {\n  switch (stepIndex) {\n    case 0:\n      return (\n        <Grid container spacing={24}>\n          <Grid item xs={12} sm={2}>\n            <FormControl component=\"fieldset\" className=\"order-form-details-radio\">\n              <RadioGroup\n                className=\"order-form-details-radio\"\n                aria-label=\"Aanhef\"\n                name=\"aanhef\"\n                value={state.aanhef}\n                onChange={handleChange('aanhef')}\n              >\n                <FormControlLabel value=\"Dhr.\" control={<Radio color=\"primary\" />} label=\"Dhr.\" />\n                <FormControlLabel value=\"Mevr.\" control={<Radio color=\"primary\" />} label=\"Mevr.\" />\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={5}>\n            <FormControl fullWidth error={state.nameError}>\n              <InputLabel htmlFor=\"add-name\">Naam</InputLabel>\n              <Input id=\"add-name\" value={state.name} onChange={handleChange('name')} />\n              <FormHelperText id=\"add-name-error-text\">{state.nameErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={5}>\n            <FormControl fullWidth error={state.surnameError}>\n              <InputLabel htmlFor=\"add-surname\">Achternaam</InputLabel>\n              <Input id=\"add-surname\" value={state.surname} onChange={handleChange('surname')} />\n              <FormHelperText id=\"add-surname-error-text\">{state.surnameErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.mailError}>\n              <InputLabel htmlFor=\"add-mail\">E-mail</InputLabel>\n              <Input id=\"add-mail\" type=\"mail\" value={state.mail} onChange={handleChange('mail')} />\n              <FormHelperText id=\"add-mail-error-text\">{state.mailErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.passwordError}>\n              <InputLabel htmlFor=\"add-password\">Wachtwoord</InputLabel>\n              <Input id=\"add-password\" value={state.password} onChange={handleChange('password')} />\n              <FormHelperText id=\"add-password-error-text\">{state.passwordErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.adresError}>\n              <InputLabel htmlFor=\"add-adres\">Adres</InputLabel>\n              <Input id=\"add-adres\" value={state.adres} onChange={handleChange('adres')} />\n              <FormHelperText id=\"add-adres-error-text\">{state.adresErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.housenumberError}>\n              <InputLabel htmlFor=\"add-housenumber\">Huisnummer</InputLabel>\n              <Input id=\"add-housenumber\" value={state.housenumber} onChange={handleChange('housenumber')} />\n              <FormHelperText id=\"add-housenumber-error-text\">{state.housenumberErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.postalcodeError}>\n              <InputLabel htmlFor=\"add-postalcode\">Postcode</InputLabel>\n              <Input id=\"add-postalcode\" value={state.postalcode} onChange={handleChange('postalcode')} />\n              <FormHelperText id=\"add-postalcode-error-text\">{state.postalcodeErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.cityError}>\n              <InputLabel htmlFor=\"add-city\">Stad</InputLabel>\n              <Input id=\"add-city\" value={state.city} onChange={handleChange('city')} />\n              <FormHelperText id=\"add-city-error-text\">{state.cityErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {/* <FormControl fullWidth error={state.paymentmethodError}>\n              <InputLabel htmlFor=\"add-paymentmethod\">Betaalwijze</InputLabel>\n              <Input id=\"add-paymentmethod\" value={state.paymentmethod} onChange={handleChange('paymentmethod')} />\n              <FormHelperText id=\"add-paymentmethod-error-text\">{state.paymentmethodErrorMsg}</FormHelperText>\n            </FormControl> */}\n            <FormControl fullWidth error={state.paymentmethodError}>\n              <InputLabel htmlFor=\"name-paymentmethod\">Betaalwijze</InputLabel>\n              <Select\n                value={state.paymentmethod}\n                onChange={handleChange('paymentmethod')}\n                name=\"Betaalwijze\"\n                renderValue={value => `${value}`}\n                input={<Input id=\"name-paymentmethod\" />}\n              >\n                <MenuItem value=\"\">\n                  <em>Geen</em>\n                </MenuItem>\n                <MenuItem value=\"iDeal\">iDeal</MenuItem>\n                <MenuItem value=\"Creditcard\">Creditcard</MenuItem>\n                <MenuItem value=\"Paypal\">Paypal</MenuItem>\n              </Select>\n              <FormHelperText>{state.paymentmethodErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {/* <FormGroup>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={state.admin}\n                    onChange={handleChange('admin')}\n                    value=\"admin\"\n                  />\n                }\n                label=\"Admin\"\n              />\n            </FormGroup> */}\n\n            <FormControl error={state.adminError} component=\"fieldset\">\n              <FormLabel component=\"legend\">Is de gebruiker een admin?</FormLabel>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Checkbox checked={state.admin} onChange={handleChange('admin')} value=\"gilad\" />\n                  }\n                  label=\"Admin\"\n                />\n              </FormGroup>\n              <FormHelperText>{state.adminErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n        </Grid>\n      )\n    case 1:\n      return (\n        <Grid>\n          <Grid container spacing={24}>\n            <Grid item xs={12} className=\"add-user-review-container\">\n              <span className=\"add-user-name-surname\">{state.aanhef} {state.name} {state.surname}</span>\n              <span className=\"add-user-role\">{state.admin ? 'Admin' : 'Gebruiker'}</span>\n            </Grid>\n            <Grid item xs={3} className=\"add-user-review-container\">\n              <span className=\"add-user-column-left\">Mail</span>\n            </Grid>\n            <Grid item xs={7} className=\"add-user-review-container\">\n              <span className=\"add-user-column-right\">{state.mail}</span>\n            </Grid>\n            <Grid item xs={12} className=\"add-user-review-container-divider\" />\n            <Grid item xs={3} className=\"add-user-review-container\">\n              <span className=\"add-user-column-left\">Wachtwoord</span>\n            </Grid>\n            <Grid item xs={7} className=\"add-user-review-container\">\n              <span className=\"add-user-column-right\">{state.password}</span>\n            </Grid>\n            <Grid item xs={12} className=\"add-user-review-container-divider\" />\n            <Grid item xs={3} className=\"add-user-review-container\">\n              <span className=\"add-user-column-left\">Adres</span>\n            </Grid>\n            <Grid item xs={7} className=\"add-user-review-container\">\n              <span className=\"add-user-column-right\">{state.adres} {state.housenumber}</span>\n            </Grid>\n            <Grid item xs={3} className=\"add-user-review-container\"></Grid>\n            <Grid item xs={7} className=\"add-user-review-container\" style={{ padding: '0 12px 12px 12px' }}>\n              <span className=\"add-user-column-right\">{state.postalcode} {state.city}</span>\n            </Grid>\n            <Grid item xs={12} className=\"add-user-review-container-divider\" />\n            <Grid item xs={3} className=\"add-user-review-container\">\n              <span className=\"add-user-column-left\">Betaalwijze</span>\n            </Grid>\n            <Grid item xs={7} className=\"add-user-review-container\">\n              <span className=\"add-user-column-right\">{state.paymentmethod}</span>\n            </Grid>\n          </Grid>\n        </Grid>\n      )\n    default:\n      return 'Uknown stepIndex';\n  }\n}\n\nclass TablePaginationActions extends React.Component {\n  handleFirstPageButtonClick = event => {\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { count, page, rowsPerPage } = this.props;\n\n    return (\n      <div className='footer-actions'>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"Eerste pagina\"\n        >\n          <FirstPageIcon />\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Vorige pagina\"\n        >\n          <KeyboardArrowLeft />\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Volgende pagina\"\n        >\n          <KeyboardArrowRight />\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Laatste pagina\"\n        >\n          <LastPageIcon />\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeStep: 0,\n      dialogAddUser: false,\n      dialogEditUser: false,\n      aanhef: 'Dhr.',\n      name: '',\n      nameError: false,\n      nameErrorMsg: '',\n      surname: '',\n      surnameError: false,\n      surnameErrorMsg: '',\n      mail: '',\n      mailError: false,\n      mailErrorMsg: '',\n      password: '',\n      passwordError: false,\n      passwordErrorMsg: '',\n      adres: '',\n      adresError: false,\n      adresErrorMsg: '',\n      housenumber: '',\n      housenumberError: false,\n      housenumberErrorMsg: '',\n      postalcode: '',\n      postalcodeError: false,\n      postalcodeErrorMsg: '',\n      city: '',\n      cityError: false,\n      cityErrorMsg: '',\n      paymentmethod: '',\n      paymentmethodError: false,\n      paymentmethodErrorMsg: '',\n      admin: false,\n      adminError: false,\n      adminErrorMsg: '',\n      ID: 404,\n      page: 0,\n      rowsPerPage: 10,\n      userID: 0,\n      addedData: false,\n      rows: [],\n      totalCount: 0,\n      pageSize: 15,\n      currentPage: 0,\n      pageSizes: [15, 20, 25, 30],\n      sorting: [{ columnName: 'id', direction: 'asc' }],\n      tableColumnExtensions: [\n        { columnName: 'id', width: 70 },\n        { columnName: 'aanhef', width: 80 },\n        { columnName: 'name', width: 200 },\n        { columnName: 'surname', width: 200 },\n        { columnName: 'admin', width: 100 },\n      ],\n      hiddenColumnNames: ['adres', 'city', 'postalcode', 'password', 'housenumber', 'paymentmethod'],\n    }\n\n    this.changeCurrentPage = this.changeCurrentPage.bind(this);\n    this.changePageSize = pageSize => this.setState({ pageSize });\n    this.changeSorting = sorting => this.setState({ sorting });\n    this.hiddenColumnNamesChange = (hiddenColumnNames) => { this.setState({ hiddenColumnNames }); };\n  }\n\n  // Handle dialog whnen opening\n  handleClickOpenEdit = (userID) => {\n    this.setState({\n      dialogEditUser: true,\n      userID: userID,\n      addedData: false,\n    });\n  }\n\n  TableRow = ({ row, ...restProps }) => (\n    <Table.Row\n      {...restProps}\n      // eslint-disable-next-line no-alert\n      onClick={() => this.handleClickOpenEdit(row.id)}\n      style={{\n        cursor: 'pointer'\n      }}\n    />\n  )\n\n  getEditStepContent(stepIndex, state, handleChange) {\n    switch (stepIndex) {\n      case 0:\n        return (\n          <Query\n            query={GET_USER_DETAILS}\n            variables={{ id: state.userID }}\n            onCompleted={(data) => {\n              if (this.state.addedData === false) {\n                this.setState({\n                  userID: data.selectUserById.id,\n                  aanhef: data.selectUserById.aanhef,\n                  name: data.selectUserById.name,\n                  surname: data.selectUserById.surname,\n                  mail: data.selectUserById.mail,\n                  password: data.selectUserById.password,\n                  adres: data.selectUserById.adres,\n                  housenumber: data.selectUserById.housenumber,\n                  postalcode: data.selectUserById.postalcode,\n                  city: data.selectUserById.city,\n                  paymentmethod: data.selectUserById.paymentmethod,\n                  admin: data.selectUserById.admin,\n                  addedData: true,\n                })\n              }\n            }}\n          >\n            {({ loading, error }) => {\n              if (loading) return <p>Loading...</p>;\n              if (error) return <p>Error</p>;\n\n              return (\n                <Grid container spacing={24}>\n                  <Grid item xs={12} sm={2}>\n                    <FormControl component=\"fieldset\" className=\"order-form-details-radio\">\n                      <RadioGroup\n                        className=\"order-form-details-radio\"\n                        aria-label=\"Aanhef\"\n                        name=\"aanhef\"\n                        value={state.aanhef}\n                        onChange={handleChange('aanhef')}\n                      >\n                        <FormControlLabel value=\"Dhr.\" control={<Radio color=\"primary\" />} label=\"Dhr.\" />\n                        <FormControlLabel value=\"Mevr.\" control={<Radio color=\"primary\" />} label=\"Mevr.\" />\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={5}>\n                    <FormControl fullWidth error={state.nameError}>\n                      <InputLabel htmlFor=\"add-name\">Naam</InputLabel>\n                      <Input id=\"add-name\" value={state.name} onChange={handleChange('name')} />\n                      <FormHelperText id=\"add-name-error-text\">{state.nameErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={5}>\n                    <FormControl fullWidth error={state.surnameError}>\n                      <InputLabel htmlFor=\"add-surname\">Achternaam</InputLabel>\n                      <Input id=\"add-surname\" value={state.surname} onChange={handleChange('surname')} />\n                      <FormHelperText id=\"add-surname-error-text\">{state.surnameErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.mailError}>\n                      <InputLabel htmlFor=\"add-mail\">E-mail</InputLabel>\n                      <Input id=\"add-mail\" type=\"mail\" value={state.mail} onChange={handleChange('mail')} />\n                      <FormHelperText id=\"add-mail-error-text\">{state.mailErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.adresError}>\n                      <InputLabel htmlFor=\"add-adres\">Adres</InputLabel>\n                      <Input id=\"add-adres\" value={state.adres} onChange={handleChange('adres')} />\n                      <FormHelperText id=\"add-adres-error-text\">{state.adresErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.housenumberError}>\n                      <InputLabel htmlFor=\"add-housenumber\">Huisnummer</InputLabel>\n                      <Input id=\"add-housenumber\" value={state.housenumber} onChange={handleChange('housenumber')} />\n                      <FormHelperText id=\"add-housenumber-error-text\">{state.housenumberErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.postalcodeError}>\n                      <InputLabel htmlFor=\"add-postalcode\">Postcode</InputLabel>\n                      <Input id=\"add-postalcode\" value={state.postalcode} onChange={handleChange('postalcode')} />\n                      <FormHelperText id=\"add-postalcode-error-text\">{state.postalcodeErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.cityError}>\n                      <InputLabel htmlFor=\"add-city\">Stad</InputLabel>\n                      <Input id=\"add-city\" value={state.city} onChange={handleChange('city')} />\n                      <FormHelperText id=\"add-city-error-text\">{state.cityErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.paymentmethodError}>\n                      <InputLabel htmlFor=\"name-paymentmethod\">Betaalwijze</InputLabel>\n                      <Select\n                        value={state.paymentmethod}\n                        onChange={handleChange('paymentmethod')}\n                        name=\"Betaalwijze\"\n                        renderValue={value => `${value}`}\n                        input={<Input id=\"name-paymentmethod\" />}\n                      >\n                        <MenuItem value=\"\">\n                          <em>Geen</em>\n                        </MenuItem>\n                        <MenuItem value=\"iDeal\">iDeal</MenuItem>\n                        <MenuItem value=\"Creditcard\">Creditcard</MenuItem>\n                        <MenuItem value=\"Paypal\">Paypal</MenuItem>\n                      </Select>\n                      <FormHelperText>{state.paymentmethodErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormGroup>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={state.admin}\n                            onChange={handleChange('admin')}\n                            value=\"admin\"\n                          />\n                        }\n                        label=\"Admin\"\n                      />\n                    </FormGroup>\n\n                    <FormControl error={state.adminError} component=\"fieldset\">\n                      <FormLabel component=\"legend\">Is de gebruiker een admin?</FormLabel>\n                      <FormGroup>\n                        <FormControlLabel\n                          control={\n                            <Checkbox checked={state.admin} onChange={handleChange('admin')} value=\"gilad\" />\n                          }\n                          label=\"Admin\"\n                        />\n                      </FormGroup>\n                      <FormHelperText>{state.adminErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              )\n            }}\n          </Query>\n        )\n      case 1:\n        return (\n          <Grid>\n            <Grid container spacing={24}>\n              <Grid item xs={12} className=\"add-user-review-container\">\n                <span className=\"add-user-name-surname\">{state.aanhef} {state.name} {state.surname}</span>\n                <span className=\"add-user-role\">{state.admin ? 'Admin' : 'Gebruiker'}</span>\n              </Grid>\n              <Grid item xs={3} className=\"add-user-review-container\">\n                <span className=\"add-user-column-left\">Mail</span>\n              </Grid>\n              <Grid item xs={7} className=\"add-user-review-container\">\n                <span className=\"add-user-column-right\">{state.mail}</span>\n              </Grid>\n              <Grid item xs={12} className=\"add-user-review-container-divider\" />\n\n              <Grid item xs={12} className=\"add-user-review-container-divider\" />\n              <Grid item xs={3} className=\"add-user-review-container\">\n                <span className=\"add-user-column-left\">Adres</span>\n              </Grid>\n              <Grid item xs={7} className=\"add-user-review-container\">\n                <span className=\"add-user-column-right\">{state.adres} {state.housenumber}</span>\n              </Grid>\n              <Grid item xs={3} className=\"add-user-review-container\"></Grid>\n              <Grid item xs={7} className=\"add-user-review-container\" style={{ padding: '0 12px 12px 12px' }}>\n                <span className=\"add-user-column-right\">{state.postalcode} {state.city}</span>\n              </Grid>\n              <Grid item xs={12} className=\"add-user-review-container-divider\" />\n              <Grid item xs={3} className=\"add-user-review-container\">\n                <span className=\"add-user-column-left\">Betaalwijze</span>\n              </Grid>\n              <Grid item xs={7} className=\"add-user-review-container\">\n                <span className=\"add-user-column-right\">{state.paymentmethod}</span>\n              </Grid>\n            </Grid>\n          </Grid>\n        )\n      default:\n        return 'Uknown stepIndex';\n    }\n  }\n\n  changeCurrentPage(currentPage) {\n    this.setState({\n      loading: true,\n      currentPage,\n    });\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  gotolink(id) {\n    return \"/gebruiker/\" + id;\n  }\n\n  // Handle input change\n  handleChange = name => event => {\n    if (name === 'admin') {\n      this.setState({\n        [name]: event.target.checked,\n      });\n    } else {\n      this.setState({\n        [name]: event.target.value,\n      });\n    }\n  };\n\n  // Handle dialog whnen opening\n  handleClickOpen = () => {\n    this.setState({\n      dialogAddUser: true,\n      id: Math.floor((Math.random() * 10000000000000) + 1).toString()\n    });\n  };\n\n  // Handle dialog when closing\n  handleClose = () => {\n    this.setState({ dialogAddUser: false, dialogEditUser: false, });\n    this.emptyState()\n  };\n\n  emptyState() {\n    this.setState({\n      activeStep: 0,\n      dialogAddUser: false,\n      aanhef: 'Dhr.',\n      name: '',\n      nameError: false,\n      nameErrorMsg: '',\n      surname: '',\n      surnameError: false,\n      surnameErrorMsg: '',\n      mail: '',\n      mailError: false,\n      mailErrorMsg: '',\n      password: '',\n      passwordError: false,\n      passwordErrorMsg: '',\n      adres: '',\n      adresError: false,\n      adresErrorMsg: '',\n      housenumber: '',\n      housenumberError: false,\n      housenumberErrorMsg: '',\n      postalcode: '',\n      postalcodeError: false,\n      postalcodeErrorMsg: '',\n      city: '',\n      cityError: '',\n      cityErrorMsg: false,\n      paymentmethod: '',\n      paymentmethodError: false,\n      paymentmethodErrorMsg: '',\n      admin: false,\n      ID: 404,\n      addedData: false,\n      userID: 0,\n    })\n  }\n\n  // Handle next button for stepper and check if fields are empty before continuing\n  handleNext = () => {\n    if (this.state.activeStep === 0) {\n      let next = true\n      let items = [['name', this.state.name],\n      ['surname', this.state.surname],\n      ['mail', this.state.mail],\n      ['password', this.state.password],\n      ['adres', this.state.adres],\n      ['housenumber', this.state.housenumber],\n      ['postalcode', this.state.postalcode],\n      ['city', this.state.city],\n      ['paymentmethod', this.state.paymentmethod]]\n\n      console.log(items)\n\n      for (let i = 0; i < items.length; i++) {\n        console.log(`item: ${items[i][0]} - value: ${items[i][1]}`)\n        if (!items[i][1]) {\n          next = false\n          console.error(`item: ${items[i][0]} is empty`)\n          let err = items[i][0] + \"Error\"\n          let errMsg = err + \"Msg\"\n          this.setState(state => ({\n            [err]: true,\n            [errMsg]: 'Dit veld is verplicht'\n          }));\n        } else {\n          let err = items[i][0] + \"Error\"\n          let errMsg = err + \"Msg\"\n          this.setState(state => ({\n            [err]: false,\n            [errMsg]: ''\n          }));\n        }\n      }\n\n      console.log(`item: admin - value: ${this.state.admin}`)\n\n      if (!(/\\S+@\\S+\\.\\S+/).test(this.state.mail)) {\n        next = false\n        this.setState(state => ({\n          mailError: true,\n          mailErrorMsg: 'Dit is geen geldig email-adres'\n        }));\n      }\n\n      if (next) {\n        this.setState(state => ({ activeStep: state.activeStep + 1, }));\n      }\n    }\n  }\n\n  // Handle back button for stepper\n  handleBack = () => {\n    this.setState(state => ({ activeStep: state.activeStep - 1 }));\n  };\n\n  render() {\n    const steps = getSteps();\n    const { activeStep } = this.state;\n    const {\n      pageSize, currentPage, pageSizes, sorting, tableColumnExtensions, hiddenColumnNames\n    } = this.state;\n\n    return (\n      <section>\n        <div className=\"section-actions\">\n          <h2>Acties</h2>\n          <Button\n            variant=\"contained\"\n            onClick={this.handleClickOpen}\n          >\n            Gebruiker toevoegen\n          </Button>\n        </div>\n        <Query\n          query={ALL_USERS}\n          pollInterval={5000}\n          variables={{\n            page: currentPage,\n            amount: pageSize\n          }}\n          // pollInterval={1000}\n        >\n          {({ loading, error, data }) => {\n            if (loading) return <p>Loading... :)</p>;\n            if (error) return <p>Error :(</p>;\n\n            let columns = [\n              { name: 'id', title: 'ID' },\n              { name: 'aanhef', title: 'Aanhef' },\n              { name: 'name', title: 'Naam' },\n              { name: 'surname', title: 'Achternaam' },\n              { name: 'mail', title: 'Mail' },\n              { name: 'adres', title: 'Adres' },\n              { name: 'housenumber', title: 'Huisnummer' },\n              { name: 'postalcode', title: 'Postcode' },\n              { name: 'city', title: 'Stad' },\n              { name: 'admin', title: 'Admin' },\n              { name: 'paymentmethod', title: 'Betaalwijze' },\n            ]\n\n            let rows = []\n\n            for (let i = 0; i < data.selectAllUsers.totaluser.length; i++) {\n              rows.push(\n                {\n                  id: data.selectAllUsers.totaluser[i].id,\n                  aanhef: data.selectAllUsers.totaluser[i].aanhef,\n                  name: data.selectAllUsers.totaluser[i].name,\n                  surname: data.selectAllUsers.totaluser[i].surname,\n                  mail: data.selectAllUsers.totaluser[i].mail,\n                  adres: data.selectAllUsers.totaluser[i].adres,\n                  housenumber: data.selectAllUsers.totaluser[i].housenumber,\n                  postalcode: data.selectAllUsers.totaluser[i].postalcode,\n                  city: data.selectAllUsers.totaluser[i].city,\n                  admin: data.selectAllUsers.totaluser[i].admin ? data.selectAllUsers.totaluser[i].admin.toString() : false,\n                  paymentmethod: data.selectAllUsers.totaluser[i].paymentmethod,\n                }\n              )\n            }\n\n            return (\n              <Paper>\n                <GridR\n                  rows={rows}\n                  columns={columns}\n                >\n                  <PagingState\n                    currentPage={currentPage}\n                    onCurrentPageChange={this.changeCurrentPage}\n                    pageSize={pageSize}\n                    onPageSizeChange={this.changePageSize}\n                  />\n                  <CustomPaging\n                    totalCount={data.selectAllUsers.total}\n                  />\n                  <SortingState\n                    sorting={sorting}\n                    onSortingChange={this.changeSorting}\n                  />\n                  <IntegratedSorting />\n                  <Table\n                    rowComponent={this.TableRow}\n                    columnExtensions={tableColumnExtensions}\n                  />\n                  <TableHeaderRow showSortingControls />\n                  <TableColumnVisibility\n                    hiddenColumnNames={hiddenColumnNames}\n                    onHiddenColumnNamesChange={this.hiddenColumnNamesChange}\n                  />\n                  <Toolbar />\n                  <ColumnChooser />\n                  <PagingPanel\n                    pageSizes={pageSizes}\n                  />\n                </GridR>\n              </Paper>\n            )\n          }}\n        </Query>\n\n        {/* Dialog Add User */}\n        <Dialog\n          open={this.state.dialogAddUser}\n          onClose={this.handleClose}\n          disableBackdropClick\n          disableEscapeKeyDown\n        // scroll='scroll'\n        >\n          <DialogTitle id=\"form-dialog-title\">Gebruiker toevoegen</DialogTitle>\n          <MuiThemeProvider theme={theme}>\n            <DialogContent\n              className=\"dialog-add-painting\"\n            >\n              <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map(label => {\n                  return (\n                    <Step key={label}>\n                      <StepLabel>{label}</StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n              <div>\n                {this.state.activeStep === steps.length ? (\n                  <div>\n                    <div>All steps completed</div>\n                    <Button onClick={this.handleReset}>Reset</Button>\n                  </div>\n                ) : (\n                    <div>\n                      <div>{getStepContent(activeStep, this.state, this.handleChange)}</div>\n                    </div>\n                  )}\n              </div>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose}>\n                Annuleren\n              </Button>\n              {activeStep === 1 ? (\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={this.handleBack}\n                  >\n                    Terug\n                  </Button>\n                </div>\n              ) : null}\n              {activeStep === 1 ? (\n                <Mutation\n                  mutation={ADD_USER}\n                  onCompleted={(data) => {\n                    console.log(`Query complete: ${data}`)\n                    this.handleClose()\n                    this.props.handleSnackbarOpen('ADD_USER_SUCCESS')\n                  }}\n                  onError={(err) => {\n                    console.log(`Query failed: ${err.addUser}`)\n                  }}\n                >\n                  {(addUser, { data }) => (\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={e => {\n                          e.preventDefault()\n                          addUser({\n                            variables: {\n                              name: this.state.name,\n                              surname: this.state.surname,\n                              mail: this.state.mail,\n                              password: this.state.password,\n                              aanhef: this.state.aanhef,\n                              adres: this.state.adres,\n                              city: this.state.city,\n                              postalcode: this.state.postalcode,\n                              housenumber: this.state.housenumber,\n                              paymentmethod: this.state.paymentmethod,\n                              admin: this.state.admin\n                            }\n                          })\n                        }}>\n                        Opslaan\n                    </Button>\n                    </div>\n                  )}\n                </Mutation>\n              ) : (\n                  <Button variant=\"contained\" color=\"primary\" onClick={this.handleNext}>\n                    Volgende\n              </Button>)}\n            </DialogActions>\n          </MuiThemeProvider>\n        </Dialog>\n\n\n        {/* Dialog Edit User */}\n        <Dialog\n          open={this.state.dialogEditUser}\n          onClose={this.handleClose}\n          disableBackdropClick\n          disableEscapeKeyDown\n        // scroll='scroll'\n        >\n          <DialogTitle id=\"form-dialog-title\">Gebruiker aanpassen</DialogTitle>\n          <MuiThemeProvider theme={theme}>\n            <DialogContent\n              className=\"dialog-add-painting\"\n            >\n              <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map(label => {\n                  return (\n                    <Step key={label}>\n                      <StepLabel>{label}</StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n              <div>\n                {this.state.activeStep === steps.length ? (\n                  <div>\n                    <div>All steps completed</div>\n                    <Button onClick={this.handleReset}>Reset</Button>\n                  </div>\n                ) : (\n                    <div>\n                      <div>{this.getEditStepContent(activeStep, this.state, this.handleChange)}</div>\n                    </div>\n                  )}\n              </div>\n            </DialogContent>\n            <DialogActions className=\"buttonsInDialog\">\n              <MuiThemeProvider theme={themeDeleteButton}>\n                <div className=\"dialog-action-delete\">\n                  {activeStep === 0 ? (\n                    <Mutation\n                      mutation={DELETE_USER}\n                      onCompleted={(data) => {\n                        console.log(`Mutation complete: ${data.deleteUser}`)\n                        this.handleClose()\n                        // window.location.reload();\n                        this.props.handleSnackbarOpen('DELETE_USER_SUCCESS')\n                      }}\n                      onError={(err) => {\n                        console.log(`Mutation failed: ${err}`)\n                        this.props.handleSnackbarOpen('DELETE_USER_ERROR')\n                      }}\n                    >\n                      {(deleteUser) => (\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={e => {\n                            e.preventDefault()\n\n                            let vars = {\n                              id: this.state.userID,\n                            }\n\n                            console.log(vars)\n\n                            deleteUser({ variables: vars })\n                          }}\n                        >\n                          DELETE\n                      </Button>\n                      )}\n\n                    </Mutation>\n\n                  ) : null}\n                </div>\n              </MuiThemeProvider>\n              <div className=\"dialog-action-others\">\n                <Button onClick={this.handleClose}>\n                  Annuleren\n                  </Button>\n              </div>\n              {activeStep === 1 ? (\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={this.handleBack}\n                  >\n                    Terug\n                  </Button>\n                </div>\n              ) : null}\n              {activeStep === 1 ? (\n                <Mutation\n                  mutation={EDIT_USER}\n                  onCompleted={(data) => {\n                    console.log(`Query complete: ${data}`)\n                    this.handleClose()\n                    // window.location.reload();\n                    this.props.handleSnackbarOpen('EDIT_USER_SUCCESS')\n                  }}\n                  onError={(err) => {\n                    console.log(`Query failed: ${err}`)\n                    this.props.handleSnackbarOpen('EDIT_USER_ERROR')\n                  }}\n                >\n                  {(alterUser) => (\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={e => {\n                          e.preventDefault()\n\n                          let variables = {\n                            id: this.state.userID,\n                            name: this.state.name,\n                            surname: this.state.surname,\n                            aanhef: this.state.aanhef,\n                            mail: this.state.mail,\n                            adres: this.state.adres,\n                            housenumber: this.state.housenumber,\n                            postalcode: this.state.postalcode,\n                            city: this.state.city,\n                            paymentmethod: this.state.paymentmethod,\n                            admin: this.state.admin,\n                          }\n\n                          console.log(variables)\n\n                          alterUser({ variables: variables })\n\n                        }}>\n                        Opslaan\n                    </Button>\n                    </div>\n                  )}\n                </Mutation>\n              ) : (\n                  <Button variant=\"contained\" color=\"primary\" onClick={this.handleNext}>\n                    Volgende\n              </Button>)}\n            </DialogActions>\n          </MuiThemeProvider>\n        </Dialog>\n\n\n      </section>\n    );\n  }\n}\n\n// <img src={Edit} alt=\"Edit\" />\n// <Link to={this.gotolink(row.id)}/>\n\nexport default Users;","import React, { Component } from 'react';\nimport './Paintings.css';\n\n// Material-UI\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\n// React Grid\nimport {\n  PagingState,\n  CustomPaging,\n  SortingState,\n  IntegratedSorting,\n  SearchState,\n  IntegratedFiltering,\n} from '@devexpress/dx-react-grid';\nimport {\n  Grid as GridR,\n  Table,\n  TableHeaderRow,\n  PagingPanel,\n  ColumnChooser,\n  TableColumnVisibility,\n  Toolbar,\n  SearchPanel,\n} from '@devexpress/dx-react-grid-material-ui';\n\n// Apollo\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n// Img\nimport ImageOnLoad from 'react-image-onload'\n\n// Currency\nimport Currency from 'react-currency-formatter';\n\nconst GET_ART_DETAILS = gql`\n\tquery Painting($id: String!){\n\t\tpaintingByID(id: $id){\n      id\n      id_number\n\t\t\ttitle\n\t\t\treleasedate\n\t\t\tperiod\n\t\t\tdescription\n\t\t\tphysicalmedium\n\t\t\tamountofpaintings\n      principalmaker\n\t\t\tbigsrc\n\t\t\tsrc\n\t\t\tprice\n      painter\n      principalmakersproductionplaces\n      width\n      height\n      amountwatched\n      rented\n\t\t}\n\t}\n`;\n\nconst PAINTINGS = gql`\n  query Paintings_pagination($page: Int!){\n    paintingOrderedByPagination(page: $page){\n      total\n      collection {\n        id_number\n        title\n        principalmaker\n        price\n        releasedate\n        period\n        physicalmedium\n        amountofpaintings\n        principalmakersproductionplaces\n      }\n    }\n  }\n`;\n\nconst PAINTERS = gql`\n  query PaintersAll {\n    paintersAll{\n      name\n      id\n    }\n  }\n`\n\nconst ADD_PAINTING = gql`\n  mutation AddPainting(\n    $id: String!,\n    $title: String!,\n    $releasedate: Int!,\n    $period: Int!,\n    $description: String!,\n    $physicalmedium: String!,\n    $amountofpaintings: Int!,\n    $src: String!,\n    $bigsrc: String!,\n    $prodplace: String!,\n    $width: Int!,\n    $height: Int!,\n    $principalmaker: String!,\n    $price: Int!,\n    $rented: Boolean!\n    $painterId: Int!) {\n    addProduct(\n      id: $id,\n      title: $title,\n      releasedate: $releasedate,\n      period:$period,\n      description: $description,,\n      physicalmedium: $physicalmedium,\n      amountofpaintings: $amountofpaintings,\n      src: $src,\n      bigsrc: $bigsrc,\n      prodplace: $prodplace,\n      width: $width,\n      height: $height,\n      principalmaker: $principalmaker,\n      price: $price,\n      rented: $rented\n      painterId: $painterId)\n  }\n`;\n\nconst EDIT_PAINTING = gql`\n  mutation EditPainting(\n    $id: String!,\n    $id_number: Int!,\n    $title: String!,\n    $releasedate: Int!,\n    $period: Int!,\n    $description: String!,\n    $physicalmedium: String!,\n    $amountofpaintings: Int,\n    $src: String!,\n    $bigsrc: String!,\n    $prodplace: String!,\n    $width: Int!,\n    $height: Int!,\n    $principalmaker: String!,\n    $price: Int!,\n    $rented: Boolean,\n    $amountwatched: Int!) {\n      alterProduct(\n      id_number: $id_number,\n      id: $id,\n      title: $title,\n      releasedate: $releasedate,\n      period:$period,\n      description: $description,\n      physicalmedium: $physicalmedium,\n      amountofpaintings: $amountofpaintings,\n      src: $src,\n      bigsrc: $bigsrc,\n      prodplace: $prodplace,\n      width: $width,\n      height: $height,\n      principalmaker: $principalmaker,\n      price: $price,\n      rented: $rented,\n      amountwatched: $amountwatched)\n  }\n`;\n\nconst DELETE_PAINTING = gql`\n  mutation PRODUCT($id: Int!){\n    deleteProduct(id: $id)\n  }\n`;\n\nconst theme = new createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FFFFFF'\n    },\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nconst themeDeleteButton = new createMuiTheme({\n  palette: {\n    primary: {\n      main: '#D32F2F'\n    },\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nfunction getStepsAanmaken() {\n  return ['Vul informatie in', 'Review schilderij'];\n}\n\n// function getStepsAanpassen() {\n//   return ['Vul informatie in', 'Review schilderij'];\n// }\n\nfunction getStepContent(stepIndex, state, handleChange, handeImage, handleChoosePainterDialog, handleChoosePainterDialogClose, TableRowChoosePainter) {\n  switch (stepIndex) {\n    case 0:\n      return (\n        <Grid container spacing={24}>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.titleError}>\n              <InputLabel htmlFor=\"add-title\">Titel</InputLabel>\n              <Input id=\"add-title\" value={state.title} onChange={handleChange('title')} />\n              <FormHelperText id=\"add-title-error-text\">{state.titleErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sm={6}\n            style={{\n              display: 'flex',\n              flexFlow: 'column nowrap',\n              justifyContent: 'center'\n            }}\n            onClick={handleChoosePainterDialog}\n          >\n            <Button variant=\"outlined\" fullWidth>\n              {state.principalMaker.length > 0 ? state.principalMaker : 'Kies een schilder'}\n            </Button>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.releaseDateError}>\n              <InputLabel htmlFor=\"add-release-date\">Gemaakt in (jaar)</InputLabel>\n              <Input id=\"add-release-date\" type=\"number\" value={state.releaseDate} onChange={handleChange('releaseDate')} />\n              <FormHelperText id=\"add-release-date-error-text\">{state.releaseDateErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.periodError}>\n              <InputLabel htmlFor=\"add-periode\">Periode (eeuw)</InputLabel>\n              <Input id=\"add-periode\" type=\"number\" value={state.periode} onChange={handleChange('period')} />\n              <FormHelperText id=\"add-periode-error-text\">{state.periodErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12}>\n            <FormControl fullWidth error={state.descriptionError}>\n              <InputLabel htmlFor=\"add-description\">Beschrijving</InputLabel>\n              <Input id=\"add-description\" multiline value={state.description} onChange={handleChange('description')} />\n              <FormHelperText id=\"add-description-error-text\">{state.descriptionErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.physicalMediumError}>\n              <InputLabel htmlFor=\"add-physical-medium\">Gemaakt op (materiaal)</InputLabel>\n              <Input id=\"add-physical-medium\" value={state.physicalMedium} onChange={handleChange('physicalMedium')} />\n              <FormHelperText id=\"add-physical-medium-error-text\">{state.physicalMediumErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"add-amount\">Hoeveelheid (staat vast)</InputLabel>\n              <Input id=\"add-amount\" inputProps={{ readOnly: true, }} value={state.amount} />\n              <FormHelperText id=\"add-amount-error-text\"></FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.srcError}>\n              <InputLabel htmlFor=\"add-src\">Kleine thumbnail (link)</InputLabel>\n              <Input id=\"add-src\" value={state.src} onChange={handleChange('src')} />\n              <FormHelperText id=\"add-src-error-text\">{state.srcErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.bigsrcError}>\n              <InputLabel htmlFor=\"add-big-src\">Grote thumbnail (link)</InputLabel>\n              <Input id=\"add-big-src\" value={state.bigsrc} onChange={handleChange('bigsrc')} />\n              <FormHelperText id=\"add-big-src-error-text\">{state.bigsrcErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.principalMakersProductionPlacesError}>\n              <InputLabel htmlFor=\"add-production-places\">Gemaakt in (stad)</InputLabel>\n              <Input id=\"add-production-places\" value={state.principalMakersProductionPlaces} onChange={handleChange('principalMakersProductionPlaces')} />\n              <FormHelperText id=\"add-production-places-error-text\">{state.principalMakersProductionPlacesErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"add-price\">Prijs (wordt berekend)</InputLabel>\n              <Input id=\"add-price\" inputProps={{ readOnly: true, }} value={state.price} />\n              <FormHelperText id=\"add-price-error-text\"></FormHelperText>\n            </FormControl>\n          </Grid>\n          <Dialog\n            open={state.dialogChoosePainter}\n            onClose={handleChoosePainterDialogClose}\n            disableBackdropClick\n            disableEscapeKeyDown\n          // scroll='scroll'\n          >\n            <DialogTitle id=\"form-dialog-title\">Kies een schilder</DialogTitle>\n            <MuiThemeProvider theme={theme}>\n              <DialogContent>\n                <Query query={PAINTERS} pollInterval={5000}>\n                  {({ loading, error, data }) => {\n                    if (loading) return \"Loading...\";\n                    if (error) return `Error! ${error.message}`;\n\n                    let columns = [\n                      { name: 'id', title: 'ID' },\n                      { name: 'name', title: 'Naam' }\n                    ]\n\n                    let rows = []\n\n                    for (let i = 0; i < data.paintersAll.length; i++) {\n                      rows.push(\n                        { id: data.paintersAll[i].id, name: data.paintersAll[i].name }\n                      )\n                    }\n                    return (\n                      <GridR\n                        rows={rows}\n                        columns={columns}\n                      >\n                        <SearchState defaultValue=\"\" />\n                        <IntegratedFiltering />\n                        <Table rowComponent={TableRowChoosePainter} />\n                        <TableHeaderRow />\n                        <Toolbar />\n                        <SearchPanel />\n                      </GridR>\n                    );\n                  }}\n                </Query>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  variant=\"outlined\"\n                  fullWidth\n                  onClick={() => {\n                    handleChoosePainterDialogClose()\n                  }}\n                >\n                  Annuleren\n                </Button>\n              </DialogActions>\n            </MuiThemeProvider>\n          </Dialog>\n        </Grid>\n      )\n    case 1:\n      return (\n        <Grid>\n          <Grid container spacing={24}>\n            <Grid item xs={12} sm={6} className=\"add-painting-review-img-preview-container\">\n              {/* <img src={state.src} alt=\"Preview\" className=\"add-painting-review-img-preview\"/> */}\n              <ImageOnLoad\n                onLoad={({ width, height }) => {\n                  console.log(`${width}x${height}`)\n                  handeImage(width, height)\n                }}\n                src={state.bigsrc}\n                alt=\"Preview\"\n                className=\"add-painting-review-img-preview\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"add-painting-review-details-preview\">\n              <Grid item xs={12} className=\"add-painting-review-container\">\n                <span>Titel</span>\n                <span>{state.title}</span>\n              </Grid>\n              <Grid item xs={12} className=\"add-painting-review-container\">\n                <span>Schilder</span>\n                <span>{state.principalMaker}</span>\n              </Grid>\n              <Grid item xs={12} className=\"add-painting-review-container\">\n                <span>Prijs</span>\n                <Currency\n                  quantity={state.price}\n                  symbol=\"€ \"\n                  decimal=\",\"\n                  group=\".\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container spacing={24}>\n            <Grid item xs={12} className=\"add-painting-review-container\">\n              <span>Beschrijving</span>\n              <span>{state.description}</span>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n              <span>Gemaakt in (jaar)</span>\n              <span>{state.releaseDate}</span>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n              <span>Periode (eeuw)</span>\n              <span>{state.period}</span>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n              <span>Gemaakt op (materiaal)</span>\n              <span>{state.physicalMedium}</span>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n              <span>Gemaakt in (stad)</span>\n              <span>{state.principalMakersProductionPlaces}</span>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n              <span>Hoeveelheid</span>\n              <span>{state.amount}</span>\n            </Grid>\n          </Grid>\n        </Grid>\n      );\n    default:\n      return 'Uknown stepIndex';\n  }\n}\n\nclass Paintings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeStep: 0,\n      dialogAddPainting: false,\n      dialogChoosePainter: false,\n      id: 0,\n      id_number: 0,\n      title: '',\n      titleError: false,\n      titleErrorMsg: '',\n      releaseDate: '',\n      releaseDateError: false,\n      releaseDateErrorMsg: '',\n      period: '',\n      periodError: false,\n      periodErrorMsg: '',\n      description: '',\n      descriptionError: false,\n      descriptionErrorMsg: '',\n      physicalMedium: '',\n      physicalMediumError: false,\n      physicalMediumErrorMsg: '',\n      amount: 1,\n      src: '',\n      srcError: false,\n      srcErrorMsg: '',\n      srcExists: false,\n      bigsrc: '',\n      bigsrcError: false,\n      bigsrcErrorMsg: '',\n      bigsrcExists: false,\n      principalMakersProductionPlaces: '',\n      principalMakersProductionPlacesError: false,\n      principalMakersProductionPlacesErrorMsg: '',\n      width: 0,\n      height: 0,\n      productWidth: 0,\n      productHeight: 0,\n      principalMaker: '',\n      principalMakerID: 0,\n      price: 0,\n      rented: false,\n      paintingID: '',\n      dialogEditPainting: false,\n      amountwatched: 0,\n      changeState: false,\n      rows: [],\n      totalCount: 0,\n      pageSize: 15,\n      currentPage: 0,\n      pageSizes: [15, 20, 25, 30],\n      sorting: [{ columnName: 'id', direction: 'asc' }],\n      tableColumnExtensions: [\n        { columnName: 'id', width: 70 },\n      ],\n      hiddenColumnNames: [''],\n      page: 0,\n      rowsPerPage: 10,\n      addedData: false,\n      inputChanged: false,\n    }\n\n    this.changeCurrentPage = this.changeCurrentPage.bind(this);\n    this.changePageSize = pageSize => this.setState({ pageSize });\n    this.changeSorting = sorting => this.setState({ sorting });\n    this.hiddenColumnNamesChange = (hiddenColumnNames) => { this.setState({ hiddenColumnNames }); };\n  }\n\n  checkRented() {\n    if (this.state.rented == null) {\n      this.setState({\n        rented: false,\n      })\n    }\n    console.log(this.state.productHeight)\n  }\n\n  getEditStepContent(stepIndex, state, handleChange) {\n    switch (stepIndex) {\n      case 0:\n        return (\n          <Query\n            query={GET_ART_DETAILS}\n            variables={{ id: state.paintingID }}\n            onCompleted={(data) => {\n              if (this.state.addedData === false) {\n                this.setState({\n                  id: data.paintingByID[0].id,\n                  id_number: data.paintingByID[0].id_number,\n                  title: data.paintingByID[0].title,\n                  releaseDate: data.paintingByID[0].releasedate,\n                  period: data.paintingByID[0].period,\n                  description: data.paintingByID[0].description,\n                  physicalMedium: data.paintingByID[0].physicalmedium,\n                  amount: data.paintingByID[0].amountofpaintings,\n                  src: data.paintingByID[0].src,\n                  bigsrc: data.paintingByID[0].bigsrc,\n                  principalMakersProductionPlaces: data.paintingByID[0].principalmakersproductionplaces,\n                  productWidth: data.paintingByID[0].width,\n                  productHeight: data.paintingByID[0].height,\n                  principalMaker: data.paintingByID[0].principalmaker,\n                  price: data.paintingByID[0].price,\n                  rented: data.paintingByID[0].rented,\n                  amountwatched: data.paintingByID[0].amountwatched,\n                  addedData: true,\n                })\n              }\n            }}\n          >\n            {({ loading, error }) => {\n              if (loading) return <p>Loading...</p>;\n              if (error) return <p>Error</p>;\n              return (\n                <Grid container spacing={24}>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth>\n                      <InputLabel>ID</InputLabel>\n                      <Input disabled={true} value={state.paintingID} onChange={handleChange('title')} />\n                    </FormControl>\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    sm={6}\n                    style={{\n                      display: 'flex',\n                      flexFlow: 'column nowrap',\n                      justifyContent: 'center'\n                    }}\n                    onClick={this.handleChoosePainterDialog}\n                  >\n                    <Button variant=\"outlined\" fullWidth>\n                      {state.principalMaker.length > 0 ? state.principalMaker : 'Kies een schilder'}\n                    </Button>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth>\n                      <InputLabel htmlFor=\"add-title\">Titel</InputLabel>\n                      <Input value={state.title} onChange={handleChange('title')} />\n                      <FormHelperText>{state.titleErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.releaseDateError}>\n                      <InputLabel htmlFor=\"add-release-date\">Gemaakt in (jaar)</InputLabel>\n                      <Input id=\"add-release-date\" type=\"number\" value={state.releaseDate} onChange={handleChange('releaseDate')} />\n                      <FormHelperText id=\"add-release-date-error-text\">{state.releaseDateErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.periodError}>\n                      <InputLabel htmlFor=\"add-periode\">Periode (eeuw)</InputLabel>\n                      <Input id=\"add-periode\" type=\"number\" value={state.period} onChange={handleChange('period')} />\n                      <FormHelperText id=\"add-periode-error-text\">{state.periodErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControl fullWidth error={state.descriptionError}>\n                      <InputLabel htmlFor=\"add-description\">Beschrijving</InputLabel>\n                      <Input id=\"add-description\" multiline value={state.description} onChange={handleChange('description')} />\n                      <FormHelperText id=\"add-description-error-text\">{state.descriptionErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.physicalMediumError}>\n                      <InputLabel htmlFor=\"add-physical-medium\">Gemaakt op (materiaal)</InputLabel>\n                      <Input id=\"add-physical-medium\" value={state.physicalMedium} onChange={handleChange('physicalMedium')} />\n                      <FormHelperText id=\"add-physical-medium-error-text\">{state.physicalMediumErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth>\n                      <InputLabel htmlFor=\"add-amount\">Hoeveelheid (staat vast)</InputLabel>\n                      <Input id=\"add-amount\" disabled={true} value={state.amount} />\n                      <FormHelperText id=\"add-amount-error-text\"></FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.principalMakersProductionPlacesError}>\n                      <InputLabel htmlFor=\"add-production-places\">Gemaakt in (stad)</InputLabel>\n                      <Input id=\"add-production-places\" value={state.principalMakersProductionPlaces} onChange={handleChange('principalMakersProductionPlaces')} />\n                      <FormHelperText id=\"add-production-places-error-text\">{state.principalMakersProductionPlacesErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth>\n                      <InputLabel htmlFor=\"add-price\">Prijs (wordt berekend</InputLabel>\n                      <Input id=\"add-price\" disabled={true} value={state.price} />\n                      <FormHelperText id=\"add-price-error-text\"></FormHelperText>\n                    </FormControl>\n                  </Grid>\n\n                  <Dialog\n                    open={this.state.dialogChoosePainter}\n                    onClose={this.handleChoosePainterDialogClose}\n                    disableBackdropClick\n                    disableEscapeKeyDown\n                  // scroll='scroll'\n                  >\n                    <DialogTitle id=\"form-dialog-title\">Kies een schilder</DialogTitle>\n                    <MuiThemeProvider theme={theme}>\n                      <DialogContent>\n                        <Query query={PAINTERS}>\n                          {({ loading, error, data }) => {\n                            if (loading) return \"Loading...\";\n                            if (error) return `Error! ${error.message}`;\n\n                            let columns = [\n                              { name: 'id', title: 'ID' },\n                              { name: 'name', title: 'Naam' }\n                            ]\n\n                            let rows = []\n\n                            for (let i = 0; i < data.paintersAll.length; i++) {\n                              rows.push(\n                                { id: data.paintersAll[i].id, name: data.paintersAll[i].name }\n                              )\n                            }\n                            return (\n                              <GridR\n                                rows={rows}\n                                columns={columns}\n                              >\n                                <SearchState defaultValue=\"\" />\n                                <IntegratedFiltering />\n                                <Table rowComponent={this.TableRowChoosePainter} />\n                                <TableHeaderRow />\n                                <Toolbar />\n                                <SearchPanel />\n                              </GridR>\n                            );\n                          }}\n                        </Query>\n                      </DialogContent>\n                      <DialogActions>\n                        <Button\n                          variant=\"outlined\"\n                          fullWidth\n                          onClick={() => {\n                            this.handleChoosePainterDialogClose()\n                          }}\n                        >\n                          Annuleren\n                        </Button>\n                      </DialogActions>\n                    </MuiThemeProvider>\n                  </Dialog>\n                </Grid>\n              )\n            }}\n          </Query>\n        );\n      case 1:\n        return (\n          <Grid>\n            <Grid container spacing={24}>\n              <Grid item xs={12} sm={6} className=\"add-painting-review-details-preview\">\n                <Grid item xs={12} className=\"add-painting-review-container\">\n                  <span>Titel</span>\n                  <span>{state.title}</span>\n                </Grid>\n                <Grid item xs={12} className=\"add-painting-review-container\">\n                  <span>Schilder</span>\n                  <span>{state.principalMaker}</span>\n                </Grid>\n                <Grid item xs={12} className=\"add-painting-review-container\">\n                  <span>Prijs</span>\n                  <Currency\n                    quantity={state.price}\n                    symbol=\"€ \"\n                    decimal=\",\"\n                    group=\".\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid container spacing={24}>\n              <Grid item xs={12} className=\"add-painting-review-container\">\n                <span>Beschrijving</span>\n                <span>{state.description}</span>\n              </Grid>\n              <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n                <span>Gemaakt in (jaar)</span>\n                <span>{state.releaseDate}</span>\n              </Grid>\n              <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n                <span>Periode (eeuw)</span>\n                <span>{state.period}</span>\n              </Grid>\n              <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n                <span>Gemaakt op (materiaal)</span>\n                <span>{state.physicalMedium}</span>\n              </Grid>\n              <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n                <span>Gemaakt in (stad)</span>\n                <span>{state.principalMakersProductionPlaces}</span>\n              </Grid>\n              <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n                <span>Hoeveelheid</span>\n                <span>{state.amount}</span>\n              </Grid>\n            </Grid>\n          </Grid>\n        );\n      default:\n        return 'Unknown stepIndex';\n    }\n  }\n\n  changeCurrentPage(currentPage) {\n    this.setState({\n      loading: true,\n      currentPage,\n    });\n  }\n\n  // Handle input change\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n      inputChanged: true,\n    });\n\n    if (name === 'releaseDate') {\n      if (!event.target.value) {\n        this.setState({\n          price: 0,\n        });\n      } else if (event.target.value > new Date().getFullYear()) {\n        console.log(`invalid input`)\n        this.setState({\n          price: 0,\n          releaseDateError: true,\n          releaseDateErrorMsg: `Productiejaar kan niet later dan ${new Date().getFullYear()} zijn`\n        });\n      } else {\n        this.setState({\n          price: (3000 - event.target.value) * 327,\n          releaseDateError: false,\n          releaseDateErrorMsg: ''\n        });\n      }\n    }\n  };\n\n  // Handle dialog whnen opening\n  handleAanmakenDialog = () => {\n    this.setState({\n      dialogAddPainting: true,\n      id: Math.floor((Math.random() * 10000000000000) + 1).toString()\n    });\n  };\n\n  handleAanpassenDialog = (paintingID) => {\n    this.setState({\n      paintingID: paintingID.toString(),\n      dialogEditPainting: true,\n      addedData: false,\n      id: Math.floor((Math.random() * 10000000000000) + 1).toString()\n    });\n  };\n\n  TableRow = ({ row, ...restProps }) => (\n    <Table.Row\n      {...restProps}\n      // eslint-disable-next-line no-alert\n      onClick={() => this.handleAanpassenDialog(row.id)}\n      style={{\n        cursor: 'pointer'\n      }}\n    />\n  )\n\n  handleChoosePainterDialog = () => {\n    this.setState({\n      dialogChoosePainter: true\n    });\n  }\n\n  TableRowChoosePainter = ({ row, ...restProps }) => (\n    <Table.Row\n      {...restProps}\n      // eslint-disable-next-line no-alert\n      onClick={() => {\n        console.log(row)\n        this.handleChosenPainter(row)\n      }}\n      style={{\n        cursor: 'pointer'\n      }}\n    />\n  )\n\n  handleChoosePainterDialogClose = () => {\n    this.setState({\n      dialogChoosePainter: false\n    });\n  }\n\n  handleChosenPainter = (row) => {\n    this.setState({\n      principalMaker: row.name,\n      principalMakerID: row.id,\n      dialogChoosePainter: false\n    });\n  }\n\n  // Handle dialog when closing\n  handleClose = () => {\n    this.setState({\n      dialogAddPainting: false,\n      dialogEditPainting: false,\n      id: 0,\n      id_number: 0,\n      title: '',\n      titleError: false,\n      titleErrorMsg: '',\n      releaseDate: '',\n      releaseDateError: false,\n      releaseDateErrorMsg: '',\n      period: '',\n      periodError: false,\n      periodErrorMsg: '',\n      description: '',\n      descriptionError: false,\n      descriptionErrorMsg: '',\n      physicalMedium: '',\n      physicalMediumError: false,\n      physicalMediumErrorMsg: '',\n      src: '',\n      srcError: false,\n      srcErrorMsg: '',\n      srcExists: false,\n      bigsrc: '',\n      bigsrcError: false,\n      bigsrcErrorMsg: '',\n      bigsrcExists: false,\n      principalMakersProductionPlaces: '',\n      principalMakersProductionPlacesError: false,\n      principalMakersProductionPlacesErrorMsg: '',\n      width: 0,\n      height: 0,\n      productWidth: 0,\n      productHeight: 0,\n      principalMaker: '',\n      principalMakerError: false,\n      principalMakerErrorMsg: '',\n      price: 0,\n      activeStep: 0,\n      changeState: true,\n    });\n    // this.emptyState()\n  };\n\n  // Handle next button for stepper and check if fields are empty before continuing\n  handleNext = () => {\n    if (this.state.activeStep === 0) {\n      let next = true\n      let items = [['title', this.state.title],\n      ['releaseDate', this.state.releaseDate],\n      ['period', this.state.period],\n      ['description', this.state.description],\n      ['physicalMedium', this.state.physicalMedium],\n      ['src', this.state.src],\n      ['bigsrc', this.state.bigsrc],\n      ['principalMakersProductionPlaces', this.state.principalMakersProductionPlaces]]\n\n      console.log(items)\n\n      for (let i = 0; i < items.length; i++) {\n        console.log(`item: ${items[i][0]} - value: ${items[i][1]}`)\n        if (!items[i][1]) {\n          next = false\n          console.error(`item: ${items[i][0]} is empty`)\n          if (items[1][1] > new Date().getFullYear()) {\n            return\n          }\n          let err = items[i][0] + \"Error\"\n          let errMsg = err + \"Msg\"\n          this.setState(state => ({\n            [err]: true,\n            [errMsg]: 'Dit veld is verplicht'\n          }));\n        } else {\n          let err = items[i][0] + \"Error\"\n          let errMsg = err + \"Msg\"\n          this.setState(state => ({\n            [err]: false,\n            [errMsg]: ''\n          }));\n        }\n      }\n\n      if (next) {\n        this.setState(state => ({ activeStep: state.activeStep + 1, }));\n      }\n    }\n  };\n\n  // Handle back button for stepper\n  handleBack = () => {\n    this.setState(state => ({ activeStep: state.activeStep - 1 }));\n  };\n\n  handeImage = (w, h) => {\n    this.setState(state => ({ width: w }));\n    this.setState(state => ({ height: h }));\n  }\n\n  emptyState() {\n    this.setState({\n      id: 0,\n      title: '',\n      titleError: false,\n      titleErrorMsg: '',\n      releaseDate: '',\n      releaseDateError: false,\n      releaseDateErrorMsg: '',\n      period: '',\n      periodError: false,\n      periodErrorMsg: '',\n      description: '',\n      descriptionError: false,\n      descriptionErrorMsg: '',\n      physicalMedium: '',\n      physicalMediumError: false,\n      physicalMediumErrorMsg: '',\n      src: '',\n      srcError: false,\n      srcErrorMsg: '',\n      srcExists: false,\n      bigsrc: '',\n      bigsrcError: false,\n      bigsrcErrorMsg: '',\n      bigsrcExists: false,\n      principalMakersProductionPlaces: '',\n      principalMakersProductionPlacesError: false,\n      principalMakersProductionPlacesErrorMsg: '',\n      width: 0,\n      height: 0,\n      productWidth: 0,\n      productHeight: 0,\n      principalMaker: '',\n      principalMakerError: false,\n      principalMakerErrorMsg: '',\n      price: 0,\n      activeStep: 0,\n      changeState: true,\n      inputChanged: false,\n    });\n    console.log(\"State is empty\");\n  }\n\n  getMakerLink(paintingID, maker) {\n    if (maker !== \"anoniem\") {\n      return (\n        maker\n      )\n    } else {\n      return (\n        \"Anoniem\"\n      )\n    }\n  }\n\n  render() {\n    const steps = getStepsAanmaken();\n    const { activeStep } = this.state;\n    const {\n      pageSize, currentPage, pageSizes, sorting, tableColumnExtensions, hiddenColumnNames\n    } = this.state;\n\n    return (\n      <section>\n        <div className=\"section-actions\">\n          <h2>Acties</h2>\n          <Button\n            variant=\"contained\"\n            onClick={this.handleAanmakenDialog}\n          >\n            Schilderij toevoegen\n          </Button>\n        </div>\n\n\n        {/* SHOW PAINTINGS TABLE */}\n        <Query\n          query={PAINTINGS}\n          variables={{\n            page: currentPage,\n            amount: pageSize\n          }}\n          pollInterval={5000}\n        >\n          {({ loading, error, data }) => {\n            if (loading) return <p>Loading... :)</p>;\n            if (error) return <p>Error :(</p>;\n\n            let columns = [\n              { name: 'id', title: 'ID' },\n              { name: 'title', title: 'Titel' },\n              { name: 'principalmaker', title: 'Schilder' },\n              { name: 'price', title: 'Prijs' },\n              { name: 'releasedate', title: 'Datum van uitgave' },\n              { name: 'period', title: 'Eeuw van uitgave' },\n              { name: 'physicalmedium', title: 'Materiaal' },\n              { name: 'amountofpaintings', title: 'Voorraad' },\n              { name: 'principalmakersproductionplaces', title: 'Stad van productie' },\n            ]\n\n            let rows = []\n\n            for (let i = 0; i < data.paintingOrderedByPagination.collection.length; i++) {\n              rows.push(\n                {\n                  id: data.paintingOrderedByPagination.collection[i].id_number,\n                  title: data.paintingOrderedByPagination.collection[i].title,\n                  principalmaker: data.paintingOrderedByPagination.collection[i].principalmaker,\n                  price: data.paintingOrderedByPagination.collection[i].price,\n                  releasedate: data.paintingOrderedByPagination.collection[i].releasedate,\n                  period: data.paintingOrderedByPagination.collection[i].period,\n                  physicalmedium: data.paintingOrderedByPagination.collection[i].physicalmedium,\n                  amountofpaintings: data.paintingOrderedByPagination.collection[i].amountofpaintings,\n                  principalmakersproductionplaces: data.paintingOrderedByPagination.collection[i].principalmakersproductionplaces,\n                }\n              )\n            }\n            return (\n              <Paper>\n                <GridR\n                  rows={rows}\n                  columns={columns}\n                >\n                  <PagingState\n                    currentPage={currentPage}\n                    onCurrentPageChange={this.changeCurrentPage}\n                    pageSize={pageSize}\n                    onPageSizeChange={this.changePageSize}\n                  />\n                  <CustomPaging\n                    totalCount={data.paintingOrderedByPagination.total}\n                  />\n                  <SortingState\n                    sorting={sorting}\n                    onSortingChange={this.changeSorting}\n                  />\n                  <IntegratedSorting />\n                  <Table\n                    rowComponent={this.TableRow}\n                    columnExtensions={tableColumnExtensions}\n                  />\n                  <TableHeaderRow showSortingControls />\n                  <TableColumnVisibility\n                    hiddenColumnNames={hiddenColumnNames}\n                    onHiddenColumnNamesChange={this.hiddenColumnNamesChange}\n                  />\n                  <Toolbar />\n                  <ColumnChooser />\n                  <PagingPanel\n                    pageSizes={pageSizes}\n                  />\n                </GridR>\n              </Paper>\n            )\n          }}\n        </Query>\n\n        {/* Dialog Add (only shown when pressed on 'Schilderij toevoegen' button) */}\n        <Dialog\n          open={this.state.dialogAddPainting}\n          onClose={this.handleClose}\n          disableBackdropClick\n          disableEscapeKeyDown\n        // scroll='scroll'\n        >\n          <DialogTitle id=\"form-dialog-title\">Schilderij toevoegen</DialogTitle>\n          <MuiThemeProvider theme={theme}>\n            <DialogContent\n              className=\"dialog-add-painting\"\n            >\n              <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map(label => {\n                  return (\n                    <Step key={label}>\n                      <StepLabel>{label}</StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n              <div>\n                {this.state.activeStep === steps.length ? (\n                  <div>\n                    <div>All steps completed</div>\n                    <Button onClick={this.handleReset}>Reset</Button>\n                  </div>\n                ) : (\n                    <div>\n                      <div>{getStepContent(activeStep, this.state, this.handleChange, this.handeImage, this.handleChoosePainterDialog, this.handleChoosePainterDialogClose, this.TableRowChoosePainter)}</div>\n                    </div>\n                  )}\n              </div>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose}>\n                Annuleren\n              </Button>\n              {activeStep === 1 ? (\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={this.handleBack}\n                  >\n                    Terug\n                  </Button>\n                </div>\n              ) : null}\n              {activeStep === 1 ? (\n                <Mutation\n                  mutation={ADD_PAINTING}\n                  onCompleted={(data) => {\n                    console.log(`Query complete: ${data.addProduct}`)\n                    this.handleClose()\n                    this.emptyState()\n                    this.props.handleSnackbarOpen('ADD_PAINTING_SUCCESS')\n                  }}\n                  onError={(err) => {\n                    console.log(`Query failed: ${err}`)\n                    this.props.handleSnackbarOpen('ADD_PAINTING_ERROR')\n                  }}\n                >\n                  {(addPainting, { data }) => (\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={e => {\n                          e.preventDefault()\n\n                          let vars = {\n                            id: this.state.id,\n                            title: this.state.title,\n                            releasedate: parseInt(this.state.releaseDate),\n                            period: parseInt(this.state.period),\n                            description: this.state.description,\n                            physicalmedium: this.state.physicalMedium,\n                            amountofpaintings: this.state.amount,\n                            src: this.state.src,\n                            bigsrc: this.state.bigsrc,\n                            prodplace: this.state.principalMakersProductionPlaces,\n                            width: this.state.width,\n                            height: this.state.height,\n                            principalmaker: this.state.principalMaker,\n                            price: this.state.price,\n                            rented: this.state.rented,\n                            painterId: this.state.principalMakerID\n                          }\n\n                          console.log(vars)\n\n                          addPainting({ variables: vars })\n                        }}>\n                        Opslaan\n                    </Button>\n                    </div>\n                  )}\n                </Mutation>\n              ) : (\n                  <Button variant=\"contained\" color=\"primary\" onClick={this.handleNext}>\n                    Volgende\n              </Button>)}\n            </DialogActions>\n          </MuiThemeProvider>\n        </Dialog>\n\n\n        {/* Dialog Edit (only shown when pressed on a table row item) */}\n        <Dialog\n          open={this.state.dialogEditPainting}\n          onClose={this.handleClose}\n          disableBackdropClick\n          disableEscapeKeyDown\n        >\n          <DialogTitle id=\"form-dialog-title\">Schilderij aanpassen</DialogTitle>\n\n\n          <DialogContent className=\"dialog-add-painting\">\n\n            {/* Stepper */}\n            <Stepper activeStep={activeStep} alternativeLabel>\n              {steps.map(label => {\n                return (\n                  <Step key={label}><StepLabel>{label}</StepLabel></Step>\n                );\n              })}\n            </Stepper>\n\n            {/* Show step content */}\n            {this.state.activeStep === steps.length ? (\n              <div>\n                <div>All steps completed</div>\n                <Button onClick={this.handleClose}>Reset</Button>\n              </div>\n            ) : (\n                <div>\n                  {this.getEditStepContent(activeStep, this.state, this.handleChange)}\n                </div>\n              )}\n\n          </DialogContent>\n          <DialogActions className=\"buttonsInDialog\">\n            <MuiThemeProvider theme={themeDeleteButton}>\n              <div className=\"dialog-action-delete\">\n                {activeStep === 0 ? (\n                  <Mutation\n                    mutation={DELETE_PAINTING}\n                    onCompleted={(data) => {\n                      console.log(`Mutation complete: ${data.deleteProduct}`)\n                      this.handleClose()\n                      this.props.handleSnackbarOpen('DELETE_PAINTING_SUCCESS')\n                    }}\n                    onError={(err) => {\n                      console.log(`Mutation failed: ${err}`)\n                      this.props.handleSnackbarOpen('DELETE_PAINTING_ERROR')\n                    }}\n                  >\n                    {(deletePainting) => (\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={e => {\n                          e.preventDefault()\n\n                          let vars = {\n                            id: this.state.paintingID,\n                          }\n\n                          console.log(vars)\n\n                          deletePainting({ variables: vars })\n                        }}\n                      >\n                        DELETE\n                      </Button>\n                    )}\n\n                  </Mutation>\n\n                ) : null}</div>\n            </MuiThemeProvider>\n            <div className=\"dialog-action-others\"><Button onClick={this.handleClose}>Annuleren</Button></div>\n            {activeStep === 1 ? (\n              <div>\n                <Button disabled={activeStep === 0} onClick={this.handleBack}>\n                  Terug\n                </Button>\n              </div>\n            ) : null}\n            {activeStep === 1 ? (\n              <Mutation\n                mutation={EDIT_PAINTING}\n                onCompleted={(data) => {\n                  console.log(`Query complete: ${data.editProduct}`)\n                  this.handleClose()\n                  this.emptyState()\n                  this.props.handleSnackbarOpen('EDIT_PAINTING_SUCCESS')\n                }}\n                onError={(err) => {\n                  console.log(`Query failed: ${err}`)\n                  this.handleClose()\n                  this.emptyState()\n                  window.location.reload();\n                  this.props.handleSnackbarOpen('EDIT_PAINTING_SUCCESS')\n                }}\n              >\n                {(editPainting, { data }) => (\n                  <div>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={e => {\n                        e.preventDefault()\n                        this.checkRented()\n                        let vars = {\n                          id: this.state.id,\n                          id_number: this.state.id_number,\n                          title: this.state.title,\n                          releasedate: parseInt(this.state.releaseDate),\n                          period: parseInt(this.state.period),\n                          description: this.state.description,\n                          physicalmedium: this.state.physicalMedium,\n                          amountofpaintings: this.state.amount,\n                          src: this.state.src,\n                          bigsrc: this.state.bigsrc,\n                          prodplace: this.state.principalMakersProductionPlaces,\n                          width: this.state.productWidth,\n                          height: this.state.productHeight,\n                          principalmaker: this.state.principalMaker,\n                          price: this.state.price,\n                          rented: false,\n                          amountwatched: this.state.amountwatched\n                        }\n\n                        console.log(vars)\n\n                        editPainting({ variables: vars })\n                      }}>\n                      Opslaan\n                </Button>\n                  </div>\n                )}\n              </Mutation>\n            ) : (\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleNext}>\n                  Volgende\n                    </Button>\n              )}\n          </DialogActions>\n        </Dialog>\n      </section>\n    );\n  }\n}\n\nexport default Paintings;","import React, { Component } from 'react';\nimport './Painters.css';\n\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n// Material-UI\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n// Img\nimport ImageOnLoad from 'react-image-onload'\n\n// React Grid\nimport {\n  PagingState,\n  CustomPaging,\n  SortingState,\n  IntegratedSorting,\n  SearchState,\n  IntegratedFiltering,\n} from '@devexpress/dx-react-grid';\nimport {\n  Grid as GridR,\n  Table,\n  TableHeaderRow,\n  PagingPanel,\n  ColumnChooser,\n  TableColumnVisibility,\n  Toolbar,\n  SearchPanel,\n} from '@devexpress/dx-react-grid-material-ui';\n\nconst PAINTERS = gql`\n  query paintersPAG($page: Int!, $amount: Int!){\n    paintersAdmin(page: $page, amount: $amount){\n      total\n      painterpagination{\n        id\n        name\n        nationality\n        occupation\n        dateofdeath\n        city\n        dateofbirth\n        placeofdeath\n        description\n      }\n    }\n  }\n`;\n\nconst GET_PAINTER_DETAILS = gql`\n  query painter($id: String!){\n    painterByID(id: $id){\n      id\n      name\n      city\n      dateofbirth\n      dateofdeath\n      placeofdeath\n      occupation\n      nationality\n      description\n    }\n  }\n`\n\n\nconst ADD_PAINTER = gql`\n  mutation AddPainter(\n    $name: String!\n    $city: String!\n    $dateBirth: String!\n    $dateDeath: String!\n    $placeDeath: String!\n    $occupation: String!\n    $nationality: String!\n    $headerImage: String!\n    $thumbnail: String!\n    $description: String!){\n      addPainter(\n        name: $name\n        city: $city\n        dateBirth: $dateBirth\n        dateDeath: $dateDeath\n        placeDeath: $placeDeath\n        occupation: $occupation\n        nationality: $nationality\n        headerImage: $headerImage\n        thumbnail: $thumbnail\n        description: $description\n      )\n  }\n`;\n\nconst EDIT_PAINTER = gql`\n  mutation AlterPainter(\n    $id: Int!\n    $name: String!\n    $city: String!\n    $dateBirth: String!\n    $dateDeath: String!\n    $placeDeath: String!\n    $occupation: String!\n    $nationality: String!\n    $description: String!){\n      alterPainter(\n        id: $id\n        name: $name\n        city: $city\n        dateBirth: $dateBirth\n        dateDeath: $dateDeath\n        placeDeath: $placeDeath\n        occupation: $occupation\n        nationality: $nationality\n        description: $description\n      )\n  }\n`;\n\nconst DELETE_PAINTER = gql `\n  mutation DELETE_PAINTER($id: String!){\n    deletePainter(id: $id)\n  }\n`;\n\nconst theme = new createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FFFFFF'\n    },\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nconst themeDeleteButton = new createMuiTheme({\n  palette: {\n    primary: {\n      main: '#D32F2F'\n    },\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nfunction getSteps() {\n  return ['Vul informatie in', 'Review schilder'];\n}\n\nfunction getStepContent(stepIndex, state, handleChange) {\n  switch (stepIndex) {\n    case 0:\n      return (\n        <Grid container spacing={24}>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.nameError}>\n              <InputLabel htmlFor=\"add-name\">Naam</InputLabel>\n              <Input id=\"add-name\" value={state.name} onChange={handleChange('name')} />\n              <FormHelperText id=\"add-name-error-text\">{state.nameErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.nationalityErrorMsg}>\n              <InputLabel htmlFor=\"add-nationality\">Nationaliteit</InputLabel>\n              <Input id=\"add-nationality\" value={state.nationality} onChange={handleChange('nationality')} />\n              <FormHelperText id=\"add-nationality-error-text\">{state.nationalityErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.datebirthError}>\n              <InputLabel htmlFor=\"add-datebirth\">Jaar van geboorte</InputLabel>\n              <Input id=\"add-datebirth\" type=\"number\" value={state.datebirth} onChange={handleChange('datebirth')} />\n              <FormHelperText id=\"add-datebirth-error-text\">{state.datebirthErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.cityError}>\n              <InputLabel htmlFor=\"add-city\">Stad van geboorte</InputLabel>\n              <Input id=\"add-city\" value={state.city} onChange={handleChange('city')} />\n              <FormHelperText id=\"add-city-error-text\">{state.cityErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.datedeathError}>\n              <InputLabel htmlFor=\"add-datedeath\">Jaar van overlijden</InputLabel>\n              <Input id=\"add-datedeath\" type=\"number\" value={state.datedeath} onChange={handleChange('datedeath')} />\n              <FormHelperText id=\"add-datedeath-error-text\">{state.datedeathErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.placedeathError}>\n              <InputLabel htmlFor=\"add-placedeath\">Stad van overlijden</InputLabel>\n              <Input id=\"add-placedeath\" value={state.placedeath} onChange={handleChange('placedeath')} />\n              <FormHelperText id=\"add-placedeath-error-text\">{state.placedeathErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12}>\n            <FormControl fullWidth error={state.descriptionError}>\n              <InputLabel htmlFor=\"add-description\">Beschrijving</InputLabel>\n              <Input id=\"add-description\" multiline value={state.description} onChange={handleChange('description')} />\n              <FormHelperText id=\"add-description-error-text\">{state.descriptionErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.headerimageError}>\n              <InputLabel htmlFor=\"add-headerimage\">Header image (link)</InputLabel>\n              <Input id=\"add-headerimage\" value={state.headerimage} onChange={handleChange('headerimage')} />\n              <FormHelperText id=\"add-headerimage-error-text\">{state.headerimageErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.thumbnailError}>\n              <InputLabel htmlFor=\"add-thumbnail\">Thumbnail (link)</InputLabel>\n              <Input id=\"add-thumbnail\" value={state.thumbnail} onChange={handleChange('thumbnail')} />\n              <FormHelperText id=\"add-thumbnail-error-text\">{state.thumbnailErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth error={state.occupationError}>\n              <InputLabel htmlFor=\"add-occupation\">Beroep</InputLabel>\n              <Input id=\"add-occupation\" multiline value={state.occupation} onChange={handleChange('occupation')} />\n              <FormHelperText id=\"add-occupation-error-text\">{state.occupationErrorMsg}</FormHelperText>\n            </FormControl>\n          </Grid>\n        </Grid>\n      )\n    case 1:\n      return (\n        <Grid>\n          <Grid container spacing={24}>\n            <Grid item xs={12} className=\"add-painter-review-img-preview-container\">\n              <img src={state.headerimage} alt=\"Preview\" className=\"add-painter-review-img-preview\" />\n              {/* <ImageOnLoad\n                src={state.headerimage}\n                alt=\"Preview\"\n                className=\"add-painter-review-img-preview\"\n              /> */}\n            </Grid>\n          </Grid>\n          <Grid container spacing={24}>\n            <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n              <span>Naam</span>\n              <span>{state.name}</span>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n              <span>Nationaliteit</span>\n              <span>{state.nationality}</span>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n              <span>Jaar van geboorte</span>\n              <span>{state.datebirth}</span>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n              <span>Stad van geboorte</span>\n              <span>{state.city}</span>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n              <span>Jaar van overlijden</span>\n              <span>{state.datedeath}</span>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n              <span>Stad van overlijden</span>\n              <span>{state.placedeath}</span>\n            </Grid>\n            <Grid item xs={12} className=\"add-painting-review-container\">\n              <span>Beschrijving</span>\n              <span>{state.description}</span>\n            </Grid>\n            <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n              <span>Beroep</span>\n              <span>{state.occupation}</span>\n            </Grid>\n          </Grid>\n        </Grid>\n      )\n    default:\n      return 'Uknown stepIndex';\n  }\n}\n\nclass Painters extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeStep: 0,\n      dialogAddPainter: false,\n      dialogEditPainter: false,\n      painterID: '',\n      dataHeaderImage: '',\n      dataThumbnail: '',\n      dataAmountWatched: '',\n      addedData: false,\n      name: '',\n      nameError: false,\n      nameErrorMsg: false,\n      city: '',\n      cityError: false,\n      cityErrorMsg: false,\n      datebirth: '',\n      datebirthError: false,\n      datebirthErrorMsg: false,\n      datedeath: '',\n      datedeathError: false,\n      datedeathErrorMsg: false,\n      placedeath: '',\n      placedeathError: false,\n      placedeathErrorMsg: false,\n      occupation: '',\n      occupationError: false,\n      occupationErrorMsg: false,\n      nationality: '',\n      nationalityError: false,\n      nationalityErrorMsg: false,\n      headerimage: '',\n      headerimageError: false,\n      headerimageErrorMsg: false,\n      thumbnail: '',\n      thumbnailError: false,\n      thumbnailErrorMsg: false,\n      description: '',\n      descriptionError: false,\n      descriptionErrorMsg: false,\n      rows: [],\n      totalCount: 0,\n      pageSize: 15,\n      currentPage: 0,\n      pageSizes: [15, 20, 25, 30],\n      sorting: [{ columnName: 'id', direction: 'asc' }],\n      tableColumnExtensions: [\n        { columnName: 'id', width: 70 },\n      ],\n      hiddenColumnNames: ['releasedate', 'description'],\n      page: 0,\n      rowsPerPage: 10,\n    }\n\n    this.changeCurrentPage = this.changeCurrentPage.bind(this);\n    this.changePageSize = pageSize => this.setState({ pageSize });\n    this.changeSorting = sorting => this.setState({ sorting });\n    this.hiddenColumnNamesChange = (hiddenColumnNames) => { this.setState({ hiddenColumnNames }); };\n  }\n\n  getEditStepContent(stepIndex, state, handleChange) {\n    switch (stepIndex) {\n      case 0:\n        return (\n          <Query\n            query={GET_PAINTER_DETAILS}\n            variables={{ id: state.painterID }}\n            onCompleted={(data) => {\n              if (this.state.addedData === false) {\n                this.setState({\n                  name: data.painterByID[0].name,\n                  nationality: data.painterByID[0].nationality,\n                  datebirth: data.painterByID[0].dateofbirth,\n                  city: data.painterByID[0].city,\n                  datedeath: data.painterByID[0].dateofdeath,\n                  placedeath: data.painterByID[0].placeofdeath,\n                  description: data.painterByID[0].description,\n                  occupation: data.painterByID[0].occupation,\n                  addedData: true,\n                })\n              }\n            }}\n          >\n            {({ loading, error }) => {\n              if (loading) return <p>Loading...</p>;\n              if (error) return <p>Error</p>;\n              return (\n                <Grid container spacing={24}>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.nameError}>\n                      <InputLabel htmlFor=\"add-name\">Naam</InputLabel>\n                      <Input id=\"add-name\" value={state.name} onChange={handleChange('name')} />\n                      <FormHelperText id=\"add-name-error-text\">{state.nameErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.nationalityErrorMsg}>\n                      <InputLabel htmlFor=\"add-nationality\">Nationaliteit</InputLabel>\n                      <Input id=\"add-nationality\" value={state.nationality} onChange={handleChange('nationality')} />\n                      <FormHelperText id=\"add-nationality-error-text\">{state.nationalityErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.datebirthError}>\n                      <InputLabel htmlFor=\"add-datebirth\">Jaar van geboorte</InputLabel>\n                      <Input id=\"add-datebirth\" type=\"number\" value={state.datebirth} onChange={handleChange('datebirth')} />\n                      <FormHelperText id=\"add-datebirth-error-text\">{state.datebirthErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.cityError}>\n                      <InputLabel htmlFor=\"add-city\">Stad van geboorte</InputLabel>\n                      <Input id=\"add-city\" value={state.city} onChange={handleChange('city')} />\n                      <FormHelperText id=\"add-city-error-text\">{state.cityErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.datedeathError}>\n                      <InputLabel htmlFor=\"add-datedeath\">Jaar van overlijden</InputLabel>\n                      <Input id=\"add-datedeath\" type=\"number\" value={state.datedeath} onChange={handleChange('datedeath')} />\n                      <FormHelperText id=\"add-datedeath-error-text\">{state.datedeathErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.placedeathError}>\n                      <InputLabel htmlFor=\"add-placedeath\">Stad van overlijden</InputLabel>\n                      <Input id=\"add-placedeath\" value={state.placedeath} onChange={handleChange('placedeath')} />\n                      <FormHelperText id=\"add-placedeath-error-text\">{state.placedeathErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControl fullWidth error={state.descriptionError}>\n                      <InputLabel htmlFor=\"add-description\">Beschrijving</InputLabel>\n                      <Input id=\"add-description\" multiline value={state.description} onChange={handleChange('description')} />\n                      <FormHelperText id=\"add-description-error-text\">{state.descriptionErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth error={state.occupationError}>\n                      <InputLabel htmlFor=\"add-occupation\">Beroep</InputLabel>\n                      <Input id=\"add-occupation\" multiline value={state.occupation} onChange={handleChange('occupation')} />\n                      <FormHelperText id=\"add-occupation-error-text\">{state.occupationErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              )\n            }}\n\n          </Query>\n        )\n      case 1:\n        return (\n          <Grid>\n            <Grid container spacing={24}>\n              <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n                <span>Naam</span>\n                <span>{state.name}</span>\n              </Grid>\n              <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n                <span>Nationaliteit</span>\n                <span>{state.nationality}</span>\n              </Grid>\n              <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n                <span>Jaar van geboorte</span>\n                <span>{state.datebirth}</span>\n              </Grid>\n              <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n                <span>Stad van geboorte</span>\n                <span>{state.city}</span>\n              </Grid>\n              <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n                <span>Jaar van overlijden</span>\n                <span>{state.datedeath}</span>\n              </Grid>\n              <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n                <span>Stad van overlijden</span>\n                <span>{state.placedeath}</span>\n              </Grid>\n              <Grid item xs={12} className=\"add-painting-review-container\">\n                <span>Beschrijving</span>\n                <span>{state.description}</span>\n              </Grid>\n              <Grid item xs={12} sm={6} className=\"add-painting-review-container\">\n                <span>Beroep</span>\n                <span>{state.occupation}</span>\n              </Grid>\n            </Grid>\n          </Grid>\n        )\n      default:\n        return 'Uknown stepIndex';\n    }\n  }\n\n\n  changeCurrentPage(currentPage) {\n    this.setState({\n      loading: true,\n      currentPage,\n    });\n  }\n\n\n  TableRow = ({ row, ...restProps }) => (\n    <Table.Row\n      {...restProps}\n      // eslint-disable-next-line no-alert\n      onClick={() => this.handleClickOpenEdit(row.id)}\n      style={{\n        cursor: 'pointer'\n      }}\n    />\n  )\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  // Handle input change\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n\n    if (name === 'datebirth') {\n      if (event.target.value > new Date().getFullYear()) {\n        this.setState({\n          datebirthError: true,\n          datebirthErrorMsg: `Jaar van geboorte kan niet later dan ${new Date().getFullYear()} zijn`\n        });\n      } else {\n        this.setState({\n          datebirthError: false,\n          datebirthErrorMsg: ``\n        });\n      }\n    }\n\n    if (name === 'datedeath') {\n      if (event.target.value > new Date().getFullYear()) {\n        this.setState({\n          datedeathError: true,\n          datedeathErrorMsg: `Jaar van overlijden kan niet later dan ${new Date().getFullYear()} zijn`\n        });\n      } else {\n        this.setState({\n          datedeathError: false,\n          datedeathErrorMsg: ``\n        });\n      }\n    }\n  };\n\n  // Handle dialog whnen opening\n  handleClickOpen = () => {\n    this.setState({\n      dialogAddPainter: true\n    });\n  };\n\n  // Handle dialog whnen opening\n  handleClickOpenEdit = (id) => {\n    this.setState({\n      dialogEditPainter: true,\n      painterID: id.toString(),\n      addedData: false,\n    });\n  };\n\n  // Handle next button for stepper and check if fields are empty before continuing\n  handleNext = () => {\n    if (this.state.activeStep === 0) {\n      let next = true\n      let items = [['name', this.state.name],\n      ['city', this.state.city],\n      ['datebirth', this.state.datebirth],\n      ['datedeath', this.state.datedeath],\n      ['placedeath', this.state.placedeath],\n      ['occupation', this.state.occupation],\n      ['nationality', this.state.nationality],\n      ['headerimage', this.state.headerimage],\n      ['thumbnail', this.state.thumbnail],\n      ['description', this.state.description]]\n\n      console.log(items)\n\n\n      if (this.state.dialogAddPainter) {\n        for (let i = 0; i < items.length; i++) {\n          console.log(`item: ${items[i][0]} - value: ${items[i][1]}`)\n          if (!items[i][1]) {\n            next = false\n            console.error(`item: ${items[i][0]} is empty`)\n            let err = items[i][0] + \"Error\"\n            let errMsg = err + \"Msg\"\n            this.setState(state => ({\n              [err]: true,\n              [errMsg]: 'Dit veld is verplicht'\n            }));\n          } else {\n            let err = items[i][0] + \"Error\"\n            let errMsg = err + \"Msg\"\n            this.setState(state => ({\n              [err]: false,\n              [errMsg]: ''\n            }));\n          }\n        }\n      }\n\n\n      if (next) {\n        this.setState(state => ({ activeStep: state.activeStep + 1, }));\n      }\n    }\n  };\n\n  // Handle dialog when closing\n  handleClose = () => {\n    this.setState({ dialogAddPainter: false, dialogEditPainter: false, addedData: false, });\n    this.emptyState()\n  };\n\n  emptyState() {\n    this.setState({\n      activeStep: 0,\n      dialogAddPainter: false,\n      dialogEditPainter: false,\n      painterID: '',\n      addedData: false,\n      name: '',\n      nameError: false,\n      nameErrorMsg: false,\n      city: '',\n      cityError: false,\n      cityErrorMsg: false,\n      datebirth: '',\n      datebirthError: false,\n      datebirthErrorMsg: false,\n      datedeath: '',\n      datedeathError: false,\n      datedeathErrorMsg: false,\n      placedeath: '',\n      placedeathError: false,\n      placedeathErrorMsg: false,\n      occupation: '',\n      occupationError: false,\n      occupationErrorMsg: false,\n      nationality: '',\n      nationalityError: false,\n      nationalityErrorMsg: false,\n      headerimage: '',\n      headerimageError: false,\n      headerimageErrorMsg: false,\n      thumbnail: '',\n      thumbnailError: false,\n      thumbnailErrorMsg: false,\n      description: '',\n      descriptionError: false,\n      descriptionErrorMsg: false,\n    })\n  }\n\n  // Handle back button for stepper\n  handleBack = () => {\n    this.setState(state => ({ activeStep: state.activeStep - 1 }));\n  };\n\n  render() {\n    const steps = getSteps();\n    const { activeStep } = this.state;\n    const {\n      pageSize, currentPage, pageSizes, sorting, tableColumnExtensions, hiddenColumnNames\n    } = this.state;\n\n    return (\n      <section>\n        <div className=\"section-actions\">\n          <h2>Acties</h2>\n          <Button\n            variant=\"contained\"\n            onClick={this.handleClickOpen}\n          >\n            Schilder toevoegen\n          </Button>\n        </div>\n        <Query\n          query={PAINTERS}\n          variables={{\n            page: currentPage,\n            amount: pageSize\n          }}\n          pollInterval={5000}\n        >\n          {({ loading, error, data }) => {\n            if (loading) return <p>Loading... :)</p>;\n            if (error) return <p>Error :(</p>;\n\n            let columns = [\n              { name: 'id', title: 'ID' },\n              { name: 'name', title: 'Naam' },\n              { name: 'occupation', title: 'Beroep' },\n              { name: 'nationality', title: 'Nationaliteit' },\n              { name: 'datebirth', title: 'Datum van geboorte' },\n              { name: 'city', title: 'Stad van geboorte' },\n              { name: 'datedeath', title: 'Datum van overlijden' },\n              { name: 'placeofdeath', title: 'Stad van overlijden' },\n              { name: 'description', title: 'Beschrijving' }\n            ]\n\n            let rows = []\n\n            for (let i = 0; i < data.paintersAdmin.painterpagination.length; i++) {\n              rows.push(\n                {\n                  id: data.paintersAdmin.painterpagination[i].id,\n                  name: data.paintersAdmin.painterpagination[i].name,\n                  occupation: data.paintersAdmin.painterpagination[i].occupation,\n                  nationality: data.paintersAdmin.painterpagination[i].nationality,\n                  datebirth: data.paintersAdmin.painterpagination[i].dateofbirth,\n                  city: data.paintersAdmin.painterpagination[i].city,\n                  datedeath: data.paintersAdmin.painterpagination[i].dateofdeath,\n                  placeofdeath: data.paintersAdmin.painterpagination[i].placeofdeath,\n                  description: data.paintersAdmin.painterpagination[i].description,\n                }\n              )\n            }\n\n            return (\n              <Paper>\n                <GridR\n                  rows={rows}\n                  columns={columns}\n                >\n                  <PagingState\n                    currentPage={currentPage}\n                    onCurrentPageChange={this.changeCurrentPage}\n                    pageSize={pageSize}\n                    onPageSizeChange={this.changePageSize}\n                  />\n                  <CustomPaging\n                    totalCount={data.paintersAdmin.total}\n                  />\n                  <SortingState\n                    sorting={sorting}\n                    onSortingChange={this.changeSorting}\n                  />\n                  <IntegratedSorting />\n                  <Table\n                    rowComponent={this.TableRow}\n                    columnExtensions={tableColumnExtensions}\n                  />\n                  <TableHeaderRow showSortingControls />\n                  <TableColumnVisibility\n                    hiddenColumnNames={hiddenColumnNames}\n                    onHiddenColumnNamesChange={this.hiddenColumnNamesChange}\n                  />\n                  <Toolbar />\n                  <ColumnChooser />\n                  <PagingPanel\n                    pageSizes={pageSizes}\n                  />\n                </GridR>\n              </Paper>\n            )\n          }}\n        </Query>\n\n        {/* Dialog Add Painter */}\n        <Dialog\n          open={this.state.dialogAddPainter}\n          onClose={this.handleClose}\n          disableBackdropClick\n          disableEscapeKeyDown\n        // scroll='scroll'\n        >\n          <DialogTitle id=\"form-dialog-title\">Schilder toevoegen</DialogTitle>\n          <MuiThemeProvider theme={theme}>\n            <DialogContent\n              className=\"dialog-add-painting\"\n            >\n              <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map(label => {\n                  return (\n                    <Step key={label}>\n                      <StepLabel>{label}</StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n              <div>\n                {this.state.activeStep === steps.length ? (\n                  <div>\n                    <div>All steps completed</div>\n                    <Button onClick={this.handleReset}>Reset</Button>\n                  </div>\n                ) : (\n                    <div>\n                      <div>{getStepContent(activeStep, this.state, this.handleChange, this.handeImage)}</div>\n                    </div>\n                  )}\n              </div>\n            </DialogContent>\n            <DialogActions className=\"buttonsInDialog\">\n              <Button onClick={this.handleClose}>\n                Annuleren\n              </Button>\n              {activeStep === 1 ? (\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={this.handleBack}\n                  >\n                    Terug\n                  </Button>\n                </div>\n              ) : null}\n              {activeStep === 1 ? (\n                <Mutation\n                  mutation={ADD_PAINTER}\n                  onCompleted={(data) => {\n                    console.log(`Query complete: ${data.addProduct}`)\n                    this.handleClose()\n                    this.setState({\n                    })\n                    this.props.handleSnackbarOpen('ADD_PAINTER_SUCCESS')\n                  }}\n                  onError={(err) => {\n                    console.log(`Query failed: ${err}`)\n                    this.props.handleSnackbarOpen('ADD_PAINTER_ERROR')\n                  }}\n                >\n                  {(addPainting, { data }) => (\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={e => {\n                          e.preventDefault()\n\n                          let vars = {\n                            name: this.state.name,\n                            city: this.state.city,\n                            dateBirth: this.state.datebirth,\n                            dateDeath: this.state.datedeath,\n                            placeDeath: this.state.placedeath,\n                            occupation: this.state.occupation,\n                            nationality: this.state.nationality,\n                            headerImage: this.state.headerimage,\n                            thumbnail: this.state.thumbnail,\n                            description: this.state.description,\n                          }\n\n                          console.log(vars)\n\n                          addPainting({ variables: vars })\n                        }}>\n                        Opslaan\n                    </Button>\n                    </div>\n                  )}\n                </Mutation>\n              ) : (\n                  <Button variant=\"contained\" color=\"primary\" onClick={this.handleNext}>\n                    Volgende\n              </Button>)}\n            </DialogActions>\n          </MuiThemeProvider>\n        </Dialog>\n\n        {/* Dialog Edit Painter */}\n        <Dialog\n          open={this.state.dialogEditPainter}\n          onClose={this.handleClose}\n          disableBackdropClick\n          disableEscapeKeyDown\n        // scroll='scroll'\n        >\n          <DialogTitle id=\"form-dialog-title\">Schilder aanpassen</DialogTitle>\n          <MuiThemeProvider theme={theme}>\n            <DialogContent\n              className=\"dialog-add-painting\"\n            >\n              <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map(label => {\n                  return (\n                    <Step key={label}>\n                      <StepLabel>{label}</StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n              <div>\n                {this.state.activeStep === steps.length ? (\n                  <div>\n                    <div>All steps completed</div>\n                    <Button onClick={this.handleReset}>Reset</Button>\n                  </div>\n                ) : (\n                    <div>\n                      <div>{this.getEditStepContent(activeStep, this.state, this.handleChange)}</div>\n                    </div>\n                  )}\n              </div>\n            </DialogContent>\n            <DialogActions className=\"buttonsInDialog\">\n            <MuiThemeProvider theme={themeDeleteButton}>\n                <div className=\"dialog-action-delete\">\n                  {activeStep === 0 ? (\n                    <Mutation\n                      mutation={DELETE_PAINTER}\n                      onCompleted={(data) => {\n                        console.log(`Mutation complete: ${data.deletePainter}`)\n                        this.handleClose()\n                        this.props.handleSnackbarOpen('DELETE_PAINTER_SUCCESS')\n                      }}\n                      onError={(err) => {\n                        console.log(`Mutation failed: ${err}`)\n                        this.props.handleSnackbarOpen('DELETE_PAINTER_ERROR')\n                      }}\n                    >\n                      {(deletePainter) => (\n                        <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={e => {\n                          e.preventDefault()\n\n                          let vars = {\n                            id: this.state.painterID,\n                          }\n\n                          console.log(vars)\n\n                          deletePainter({ variables: vars })\n                        }}\n                      >\n                        DELETE\n                      </Button>\n                      )}\n\n                    </Mutation>\n                  ) : null}\n                </div>\n              </MuiThemeProvider>\n              \n              <Button onClick={this.handleClose}>\n                Annuleren\n              </Button>\n              {activeStep === 1 ? (\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={this.handleBack}\n                  >\n                    Terug\n                  </Button>\n                </div>\n              ) : null}\n              {activeStep === 1 ? (\n                <Mutation\n                  mutation={EDIT_PAINTER}\n                  onCompleted={(data) => {\n                    console.log(`Query complete: ${data.alterPainter}`)\n                    this.handleClose()\n                    this.setState({\n                    })\n                    this.props.handleSnackbarOpen('EDIT_PAINTER_SUCCESS')\n                  }}\n                  onError={(err) => {\n                    console.log(`Query failed: ${err}`)\n                    this.props.handleSnackbarOpen('EDIT_PAINTER_ERROR')\n                  }}\n                >\n                  {(editPainter, { data }) => (\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={e => {\n                          e.preventDefault()\n\n                          let vars = {\n                            id: parseInt(this.state.painterID),\n                            name: this.state.name,\n                            city: this.state.city,\n                            dateBirth: this.state.datebirth,\n                            dateDeath: this.state.datedeath,\n                            placeDeath: this.state.placedeath,\n                            occupation: this.state.occupation,\n                            nationality: this.state.nationality,\n                            description: this.state.description,\n                          }\n\n                          console.log(vars)\n\n                          editPainter({ variables: vars })\n                        }}>\n                        Opslaan\n                    </Button>\n                    </div>\n                  )}\n                </Mutation>\n              ) : (\n                  <Button variant=\"contained\" color=\"primary\" onClick={this.handleNext}>\n                    Volgende\n              </Button>)}\n            </DialogActions>\n          </MuiThemeProvider>\n        </Dialog>\n\n\n\n      </section>\n    );\n  }\n}\n\nexport default Painters;","import React, { Component } from 'react';\nimport './FAQ.css';\n\n// Material-UI\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\n// Apollo\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n// React Grid\nimport {\n  PagingState,\n  CustomPaging,\n  SortingState,\n  IntegratedSorting,\n  SearchState,\n  IntegratedFiltering,\n} from '@devexpress/dx-react-grid';\nimport {\n  Grid as GridR,\n  Table,\n  TableHeaderRow,\n  PagingPanel,\n  ColumnChooser,\n  TableColumnVisibility,\n  Toolbar,\n  SearchPanel,\n} from '@devexpress/dx-react-grid-material-ui';\n\nconst FAQS = gql`\n  query FAQ{\n    faq{\n      id\n      title\n      body\n    }\n  }\n`;\n\nconst GET_FAQ_DETAILS = gql`\n  query FAQ($id: Int!){\n    faqId(id: $id){\n      id\n      title\n      body\n    }\n  }\n`;\n\nconst ADD_FAQ = gql`\nmutation FAQ(\n  $question: String!, \n  $answer: String!){\n  faqCreate(\n    question: $question,\n    answer: $answer\n  )\n}\n`;\n\nconst EDIT_FAQ = gql`\nmutation FAQ(\n  $id: Int!, \n  $question: String!, \n  $answer: String!){\n  faqUpdate(\n    id: $id, \n    question: $question, \n    answer: $answer)\n}\n`;\n\nconst DELETE_FAQ = gql`\n  mutation FAQ($id: Int!){\n    faqDelete(id: $id)\n  }\n`;\n\nconst theme = new createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FFFFFF'\n    },\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nconst themeDeleteButton = new createMuiTheme({\n  palette: {\n    primary: {\n      main: '#D32F2F'\n    },\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nfunction getSteps() {\n  return ['Vul informatie in', 'Review FAQ'];\n}\n\nclass FAQ extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      faqId: 0,\n      activeStep: 0,\n      dialogAddFAQ: false,\n      dialogEditFAQ: false,\n      question: '',\n      questionError: false,\n      questionErrorMsg: '',\n      answer: '',\n      answerError: false,\n      answerErrorMsg: '',\n      addedData: false,\n      toggleDelete: false,\n      sorting: [{ columnName: 'id', direction: 'asc' }],\n      tableColumnExtensions: [\n        { columnName: 'id', width: 70 },\n      ],\n    }\n\n    this.changeSorting = sorting => this.setState({ sorting });\n  }\n\n  getStepContent(stepIndex, state, handleChange) {\n    switch (stepIndex) {\n      case 0:\n        return (\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <FormControl fullWidth error={state.questionError}>\n                <InputLabel htmlFor=\"add-question\">Vraag</InputLabel>\n                <Input id=\"add-question\" multiline value={state.question} onChange={handleChange('question')} />\n                <FormHelperText id=\"add-question-error-text\">{state.questionErrorMsg}</FormHelperText>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth error={state.answerError}>\n                <InputLabel htmlFor=\"add-answer\">Antwoord</InputLabel>\n                <Input id=\"add-answer\" multiline value={state.answer} onChange={handleChange('answer')} />\n                <FormHelperText id=\"add-answer-error-text\">{state.answerErrorMsg}</FormHelperText>\n              </FormControl>\n            </Grid>\n          </Grid>\n        )\n      case 1:\n        return (\n          <Grid>\n            <Grid container spacing={24}>\n              <Grid item xs={12} className=\"add-painting-review-container\">\n                <span>Vraag</span>\n                <span>{state.question}</span>\n              </Grid>\n              <Grid item xs={12} className=\"add-painting-review-container\">\n                <span>Antwoord</span>\n                <span>{state.answer}</span>\n              </Grid>\n            </Grid>\n          </Grid>\n        )\n      default:\n        return 'Uknown stepIndex';\n    }\n  }\n\n  getEditStepContent(stepIndex, state, handleChange) {\n    switch (stepIndex) {\n      case 0:\n        return (\n          <Query\n            query={GET_FAQ_DETAILS}\n            variables={{ id: state.faqId }}\n            onCompleted={(data) => {\n              if (this.state.addedData === false) {\n                this.setState({\n                  question: data.faqId.title,\n                  answer: data.faqId.body,\n                  addedData: true,\n                })\n              }\n            }}\n          >\n            {({ loading, error }) => {\n              if (loading) return <p>Loading...</p>;\n              if (error) return <p>Error</p>;\n              return (\n                <Grid container spacing={24}>\n                  <Grid item xs={12}>\n                    <FormControl fullWidth error={state.questionError}>\n                      <InputLabel htmlFor=\"add-question\">Vraag</InputLabel>\n                      <Input id=\"add-question\" multiline value={state.question} onChange={handleChange('question')} />\n                      <FormHelperText id=\"add-question-error-text\">{state.questionErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControl fullWidth error={state.answerError}>\n                      <InputLabel htmlFor=\"add-answer\">Antwoord</InputLabel>\n                      <Input id=\"add-answer\" multiline value={state.answer} onChange={handleChange('answer')} />\n                      <FormHelperText id=\"add-answer-error-text\">{state.answerErrorMsg}</FormHelperText>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              )\n            }}\n          </Query>\n\n        )\n      case 1:\n        return (\n          <Grid>\n            <Grid container spacing={24}>\n              <Grid item xs={12} className=\"add-painting-review-container\">\n                <span>Vraag</span>\n                <span>{state.question}</span>\n              </Grid>\n              <Grid item xs={12} className=\"add-painting-review-container\">\n                <span>Antwoord</span>\n                <span>{state.answer}</span>\n              </Grid>\n            </Grid>\n          </Grid>\n        )\n      default:\n        return 'Uknown stepIndex';\n    }\n  }\n\n  // Handle input change\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  // Handle dialog whnen opening\n  handleClickOpenAdd = () => {\n    this.setState({\n      dialogAddFAQ: true,\n      dialogEditFAQ: false,\n      question: '',\n      answer: '',\n      addedData: false,\n    });\n  };\n\n  // Handle dialog whnen opening\n  handleClickOpenEdit = (faqId) => {\n    this.setState({\n      dialogEditFAQ: true,\n      faqId: faqId,\n      addedData: false,\n    });\n  };\n\n  TableRow = ({ row, ...restProps }) => (\n    <Table.Row\n      {...restProps}\n      // eslint-disable-next-line no-alert\n      onClick={() => this.handleClickOpenEdit(row.id)}\n      style={{\n        cursor: 'pointer'\n      }}\n    />\n  )\n\n  // Handle next button for stepper and check if fields are empty before continuing\n  handleNext = () => {\n    if (this.state.activeStep === 0) {\n      let next = true\n      let items = [['question', this.state.question],\n      ['answer', this.state.answer]]\n\n      console.log(items)\n\n      for (let i = 0; i < items.length; i++) {\n        console.log(`item: ${items[i][0]} - value: ${items[i][1]}`)\n        if (!items[i][1]) {\n          next = false\n          console.error(`item: ${items[i][0]} is empty`)\n          let err = items[i][0] + \"Error\"\n          let errMsg = err + \"Msg\"\n          this.setState(state => ({\n            [err]: true,\n            [errMsg]: 'Dit veld is verplicht'\n          }));\n        } else {\n          let err = items[i][0] + \"Error\"\n          let errMsg = err + \"Msg\"\n          this.setState(state => ({\n            [err]: false,\n            [errMsg]: ''\n          }));\n        }\n      }\n\n      if (next) {\n        this.setState(state => ({ activeStep: state.activeStep + 1, }));\n      }\n    }\n  };\n\n  // Handle dialog when closing\n  handleClose = () => {\n    this.setState({ dialogAddFAQ: false, dialogEditFAQ: false, question: '', answer: '', addedData: false, });\n    // this.emptyState()\n  };\n\n  // Handle back button for stepper\n  handleBack = () => {\n    this.setState(state => ({ activeStep: state.activeStep - 1 }));\n  };\n\n  render() {\n    const steps = getSteps();\n    const { activeStep } = this.state;\n    const {\n      sorting, tableColumnExtensions\n    } = this.state;\n\n    return (\n      <section>\n        <div className=\"section-actions\">\n          <h2>Acties</h2>\n          <Button\n            variant=\"contained\"\n            onClick={this.handleClickOpenAdd}\n          >\n            FAQ toevoegen\n          </Button>\n        </div>\n\n        {/* Query Show all FAQ's */}\n        <Query\n          query={FAQS}\n          pollInterval={5000}\n        >\n          {({ loading, error, data }) => {\n            if (loading) return <p>Loading... :)</p>;\n            if (error) return <p>Error :(</p>;\n\n            let columns = [\n              { name: 'id', title: 'ID' },\n              { name: 'title', title: 'Vraag' },\n              { name: 'body', title: 'Antwoord' }\n            ]\n\n            let rows = []\n\n            for (let i = 0; i < data.faq.length; i++) {\n              rows.push(\n                {\n                  id: data.faq[i].id,\n                  title: data.faq[i].title,\n                  body: data.faq[i].body,\n                }\n              )\n            }\n\n            return (\n              <Paper>\n                <GridR\n                  rows={rows}\n                  columns={columns}\n                >\n                  <SortingState\n                    sorting={sorting}\n                    onSortingChange={this.changeSorting}\n                  />\n                  <IntegratedSorting />\n                  <Table\n                    rowComponent={this.TableRow}\n                    columnExtensions={tableColumnExtensions}\n                  />\n                  <TableHeaderRow showSortingControls />\n                  <Toolbar />\n                </GridR>\n              </Paper>\n            )\n          }}\n        </Query>\n        {/* Dialog Add FAQ */}\n        <Dialog\n          open={this.state.dialogAddFAQ}\n          onClose={this.handleClose}\n          disableBackdropClick\n          disableEscapeKeyDown\n        // scroll='scroll'\n        >\n          <DialogTitle id=\"form-dialog-title\">FAQ toevoegen</DialogTitle>\n          <MuiThemeProvider theme={theme}>\n            <DialogContent\n              className=\"dialog-add-painting\"\n            >\n              <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map(label => {\n                  return (\n                    <Step key={label}>\n                      <StepLabel>{label}</StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n              <div>\n                {this.state.activeStep === steps.length ? (\n                  <div>\n                    <div>All steps completed</div>\n                    <Button onClick={this.handleReset}>Reset</Button>\n                  </div>\n                ) : (\n                    <div>\n                      <div>{this.getStepContent(activeStep, this.state, this.handleChange, this.handeImage)}</div>\n                    </div>\n                  )}\n              </div>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose}>\n                Annuleren\n              </Button>\n              {activeStep === 1 ? (\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={this.handleBack}\n                  >\n                    Terug\n                  </Button>\n                </div>\n              ) : null}\n              {activeStep === 1 ? (\n                <Mutation\n                  mutation={ADD_FAQ}\n                  onCompleted={(data) => {\n                    console.log(`Query complete: ${data.faqCreate}`)\n                    this.handleClose()\n                    // window.location.reload();\n                    this.setState({\n                      activeStep: 0,\n                    })\n                    this.props.handleSnackbarOpen('ADD_FAQ_SUCCESS')\n                  }}\n                  onError={(err) => {\n                    console.log(`Query failed: ${err}`)\n                    this.props.handleSnackbarOpen('ADD_FAQ_ERROR')\n                  }}\n                >\n                  {(addPainting, { data }) => (\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={e => {\n                          e.preventDefault()\n\n                          let vars = {\n                            question: this.state.question,\n                            answer: this.state.answer,\n                          }\n\n                          console.log(vars)\n\n                          addPainting({ variables: vars })\n                        }}>\n                        Opslaan\n                    </Button>\n                    </div>\n                  )}\n                </Mutation>\n              ) : (\n                  <Button variant=\"contained\" color=\"primary\" onClick={this.handleNext}>\n                    Volgende\n              </Button>)}\n            </DialogActions>\n          </MuiThemeProvider>\n        </Dialog>\n\n\n        {/* Dialog Edit FAQ */}\n        <Dialog\n          open={this.state.dialogEditFAQ}\n          onClose={this.handleClose}\n          disableBackdropClick\n          disableEscapeKeyDown\n        >\n          <DialogTitle id=\"form-dialog-title\">Schilderij aanpassen</DialogTitle>\n          <MuiThemeProvider theme={theme}>\n            <DialogContent\n              className=\"dialog-add-painting\"\n            >\n              <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map(label => {\n                  return (\n                    <Step key={label}>\n                      <StepLabel>{label}</StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n              <div>\n                {this.state.activeStep === steps.length ? (\n                  <div>\n                    <div>All steps completed</div>\n                    <Button onClick={this.handleReset}>Reset</Button>\n                  </div>\n                ) : (\n                    <div>\n                      <div>{this.getEditStepContent(activeStep, this.state, this.handleChange)}</div>\n                    </div>\n                  )}\n              </div>\n            </DialogContent>\n            <DialogActions className=\"buttonsInDialog\">\n              <MuiThemeProvider theme={themeDeleteButton}>\n                <div className=\"dialog-action-delete\">\n                  {activeStep === 0 ? (\n                    <Mutation\n                      mutation={DELETE_FAQ}\n                      onCompleted={(data) => {\n                        console.log(`Mutation complete: ${data.faqDelete}`)\n                        this.handleClose()\n                        this.setState({\n                          activeStep: 0,\n                        })\n                        // window.location.reload();\n                        this.props.handleSnackbarOpen('DELETE_FAQ_SUCCESS')\n                      }}\n                      onError={(err) => {\n                        console.log(`Mutation failed: ${err}`)\n                        this.props.handleSnackbarOpen('DELETE_FAQ_ERROR')\n                      }}\n                    >\n                      {(deletePainting) => (\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={e => {\n                            e.preventDefault()\n\n                            let vars = {\n                              id: this.state.faqId,\n                            }\n\n                            console.log(vars)\n\n                            deletePainting({ variables: vars })\n                          }}\n                        >\n                          DELETE\n                        </Button>\n                      )}\n                    </Mutation>\n\n                  ) : null}\n                </div>\n              </MuiThemeProvider>\n              <div className=\"dialog-action-others\">\n                <Button onClick={this.handleClose}>\n                  Annuleren\n              </Button>\n\n                {activeStep === 1 ? (\n                  <div>\n\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={this.handleBack}\n                    >\n                      Terug\n                  </Button>\n                  </div>\n                ) : null}\n                {activeStep === 1 ? (\n                  <div>\n\n                    <Mutation\n                      mutation={EDIT_FAQ}\n                      onCompleted={(data) => {\n                        console.log(`Query complete: ${data.faqUpdate}`)\n                        this.handleClose()\n                        // window.location.reload();\n                        this.props.handleSnackbarOpen('EDIT_FAQ_SUCCESS')\n                        this.setState({\n                          activeStep: 0\n                        })\n                      }}\n                      onError={(err) => {\n                        console.log(`Query failed: ${err}`)\n                        this.props.handleSnackbarOpen('EDIT_FAQ_ERROR')\n                      }}\n                    >\n                      {(editPainting, { data }) => (\n                        <div>\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={e => {\n                              e.preventDefault()\n\n                              let vars = {\n                                id: this.state.faqId,\n                                question: this.state.question,\n                                answer: this.state.answer\n                              }\n\n                              console.log(vars)\n\n                              editPainting({ variables: vars })\n                            }}\n                          >\n                            Opslaan\n                          </Button>\n                        </div>\n                      )}\n                    </Mutation>\n                  </div>\n                ) : (\n                    <div>\n                      <Button variant=\"contained\" color=\"primary\" onClick={this.handleNext}>\n                        Volgende\n              </Button></div>)}\n              </div>\n            </DialogActions>\n          </MuiThemeProvider>\n        </Dialog>\n\n      </section>\n    );\n  }\n}\n\nexport default FAQ;","import React, { Component } from 'react';\nimport './404.css';\n\nclass noMatch extends Component {\n  constructor(props) {\n    super (props);\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        404\n      </div>\n    );\n  }\n}\n\nexport default noMatch;","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport './App.css';\n\n// Apollo\nimport { ApolloLink } from 'apollo-link';\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { onError } from \"apollo-link-error\";\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from \"react-apollo\";\n\n// Material-UIui/core/styles';\nimport classNames from 'classnames';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\n// Components\nimport Header from './components/header/Header'\nimport Sidebar from './components/sidebar/Sidebar'\n\n// Views\nimport Dashboard from './views/dashboard/Dashboard';\nimport Login from './views/login/Login';\nimport Users from './views/users/Users';\nimport Paintings from './views/paintings/Paintings';\nimport Painters from './views/painters/Painters';\nimport FAQ from './views/faq/FAQ';\nimport NoMatch from './views/404/404';\n\n// API URL\nconst link = ApolloLink.from([\n  new onError(({ graphQLErrors, networkError }) => {\n    if (graphQLErrors)\n      graphQLErrors.map(({ message, locations, path }) =>\n        console.log(\n          `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n        ),\n      );\n\n    if (networkError) console.log(`[Network error]: ${networkError}`);\n  }),\n  new createHttpLink({\n    uri: '/graphql',\n  })\n])\n\n// Authentication token if it exists\nconst token = localStorage.getItem('ADMIN_AUTH_TOKEN');\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? (\n        `Bearer ${token}`\n      ) : (\n          \"\"\n        ),\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(link),\n  cache: new InMemoryCache()\n});\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst snackbarStyle = theme => ({\n  success: {\n    color: '#FFFFFF',\n    backgroundColor: green[600],\n  },\n  error: {\n    color: '#FFFFFF',\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    color: '#FFFFFF',\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    color: '#FFFFFF',\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction snackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nconst SnackbarContentWrapper = withStyles(snackbarStyle)(snackbarContent);\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        token ? (\n          <Component\n            {...rest}\n            {...props}\n          />\n        ) : (\n            <Redirect\n              {...rest}\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\nfunction HomeRedirect({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        true ? (\n          <Redirect\n            {...rest}\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        ) : null\n      }\n    />\n  );\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        id: '',\n        aanhef: '',\n        name: '',\n        surname: '',\n        email: '',\n        admin: false\n      },\n      loggedIn: false,\n      snackbarOpen: false,\n      snackbarVariant: \"\",\n      snackbarMessage: \"\",\n    }\n  }\n\n  componentWillMount() {\n    // Check if user data is present as a cookie\n    if (localStorage.getItem('ADMIN_USER')) {\n      const localUser = JSON.parse(localStorage.getItem('ADMIN_USER'));\n\n      this.setState({\n        user: {\n          id: localUser.id,\n          aanhef: localUser.aanhef,\n          name: localUser.name,\n          surname: localUser.surname,\n          email: localUser.email,\n          admin: true\n        },\n        loggedIn: true\n      })\n    }\n  }\n\n  setUser = (data, isLoggedIn) => {\n    this.setState({\n      user: {\n        id: data.id,\n        aanhef: data.aanhef,\n        name: data.name,\n        surname: data.surname,\n        email: data.email,\n        admin: true\n      },\n      loggedIn: isLoggedIn\n    });\n\n    if (isLoggedIn) {\n      localStorage.setItem(\"ADMIN_USER\", JSON.stringify({\n        id: data.id,\n        aanhef: data.aanhef,\n        name: data.name,\n        surname: data.surname,\n        email: data.email,\n        admin: true\n      }))\n    } else {\n      localStorage.removeItem('ADMIN_AUTH_TOKEN')\n      localStorage.removeItem('ADMIN_USER')\n    }\n  }\n\n  handleSnackbarOpen = (type) => {\n    switch (type) {\n      case 'ADD_USER_SUCCESS':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"success\",\n          snackbarMessage: \"De gebruiker wordt over enkele ogenblikken toegevoegd\"\n        });\n        break;\n      case 'ADD_USER_ERROR':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"error\",\n          snackbarMessage: \"Er is een fout opgetreden bij het aanmaken van de gebruiker\"\n        });\n        break;\n      case 'ADD_PAINTING_SUCCESS':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"success\",\n          snackbarMessage: \"Het schilderij wordt over enkele ogenblikken toegevoegd\"\n        });\n        break;\n      case 'ADD_PAINTING_ERROR':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"error\",\n          snackbarMessage: \"Er is een fout opgetreden bij het toevoegen van een schilderij\"\n        });\n        break;\n      case 'ADD_PAINTER_SUCCESS':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"success\",\n          snackbarMessage: \"De schilder wordt over enkele ogenblikken toegevoegd\"\n        });\n        break;\n      case 'ADD_PAINTER_ERROR':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"error\",\n          snackbarMessage: \"Er is een fout opgetreden bij het aanmaken van de schilder\"\n        });\n        break;\n      case 'ADD_FAQ_SUCCESS':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"success\",\n          snackbarMessage: \"Het item verschijnt over enkele ogenblikken\"\n        });\n        break;\n      case 'ADD_FAQ_ERROR':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"error\",\n          snackbarMessage: \"Er is een fout opgetreden bij het aanmaken van de FAQ\"\n        });\n        break;\n      case 'EDIT_PAINTING_SUCCESS':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"success\",\n          snackbarMessage: \"De aanpassinig is over enkele ogenblikken te zien\"\n        });\n        break;\n      case 'EDIT_PAINTING_ERROR':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"error\",\n          snackbarMessage: \"Er is een fout opgetreden bij het aanpassen van een schilderij\"\n        });\n        break;\n      case 'EDIT_FAQ_SUCCESS':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"success\",\n          snackbarMessage: \"De aanpassing is over enkele ogenblikken te zien\"\n        });\n        break;\n      case 'EDIT_FAQ_ERROR':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"error\",\n          snackbarMessage: \"Er is een fout opgetreden bij het aanpassen van een FAQ item\"\n        });\n        break;\n      case 'EDIT_USER_SUCCESS':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"success\",\n          snackbarMessage: \"De aanpassing is over enkele ogenblikken te zien\"\n        });\n        break;\n      case 'EDIT_USER_ERROR':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"error\",\n          snackbarMessage: \"Er is een fout opgetreden bij het aanpassen van een gebruiker\"\n        });\n        break;\n      case 'EDIT_PAINTER_SUCCESS':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"success\",\n          snackbarMessage: \"De aanpassing is over enkele ogenblikken te zien\"\n        });\n        break;\n      case 'EDIT_PAINTER_ERROR':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"error\",\n          snackbarMessage: \"Er is een fout opgetreden bij het aanpassen van een schilder\"\n        });\n        break;\n      case 'DELETE_FAQ_SUCCESS':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"success\",\n          snackbarMessage: \"Item verdwijnt over enkele ogenblikken\"\n        });\n        break;\n      case 'DELETE_FAQ_ERROR':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"error\",\n          snackbarMessage: \"Er is een fout opgetreden bij het verwijderen van een item\"\n        });\n        break;\n      case 'DELETE_USER_SUCCESS':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"success\",\n          snackbarMessage: \"Gebruiker verdwijnt over enkele ogenblikken\"\n        });\n        break;\n      case 'DELETE_USER_ERROR':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"error\",\n          snackbarMessage: \"Er is een fout opgetreden bij het verwijderen van een gebruiker\"\n        });\n        break;\n      case 'DELETE_PAINTING_SUCCESS':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"success\",\n          snackbarMessage: \"Schilderij verdwijnt over enkele ogenblikken\"\n        });\n        break;\n      case 'DELETE_PAINTING_ERROR':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"error\",\n          snackbarMessage: \"Er is een fout opgetreden bij het verwijderen van een schilderij\"\n        });\n        break;\n      case 'DELETE_PAINTER_SUCCESS':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"success\",\n          snackbarMessage: \"Schilder verdwijnt over enkele ogenblikken\"\n        });\n        break;\n      case 'DELETE_PAINTER_ERROR':\n        this.setState({\n          snackbarOpen: true,\n          snackbarVariant: \"error\",\n          snackbarMessage: \"Er is een fout opgetreden bij het verwijderen van een schilder\"\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({\n      snackbarOpen: false\n    });\n  };\n\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router basename=\"/admin\">\n          <div className=\"App\">\n            <Header\n              handleSnackbarOpen={this.handleSnackbarOpen}\n              setUser={this.setUser}\n            />\n            <div className=\"sidebar-view-container\">\n              <Sidebar />\n              <Switch>\n                <HomeRedirect\n                  exact\n                  path=\"/\"\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/dashboard\"\n                  component={Dashboard} />\n                <PrivateRoute\n                  exact\n                  path=\"/gebruikers\"\n                  handleSnackbarOpen={this.handleSnackbarOpen}\n                  component={Users} />\n                <PrivateRoute\n                  exact\n                  path=\"/schilderijen\"\n                  handleSnackbarOpen={this.handleSnackbarOpen}\n                  component={Paintings}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/schilders\"\n                  handleSnackbarOpen={this.handleSnackbarOpen}\n                  component={Painters} />\n                <PrivateRoute\n                  exact\n                  path=\"/faq\"\n                  handleSnackbarOpen={this.handleSnackbarOpen}\n                  component={FAQ} />\n                <Route\n                  path=\"/login\"\n                  render={(props) => <Login\n                    {...props}\n                    handleSnackbarOpen={this.handleSnackbarOpen}\n                    setUser={this.setUser}\n                  />}\n                />\n                <Route component={NoMatch} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.snackbarOpen}\n          autoHideDuration={3000}\n          onClose={this.handleSnackbarClose}\n        >\n          <SnackbarContentWrapper\n            onClose={this.handleSnackbarClose}\n            variant={this.state.snackbarVariant}\n            message={this.state.snackbarMessage}\n          />\n        </Snackbar>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[900]\n    },\n    secondary: {\n      main: grey[900]\n    },\n    type: 'dark'\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nReactDOM.render(\n<MuiThemeProvider theme={theme}>\n  <App />\n</MuiThemeProvider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}